{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6","program":"/home/vegard/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","socket2","--edition=2018","/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"all\"","-C","metadata=754695091e8e9777","-C","extra-filename=-754695091e8e9777","--out-dir","/home/vegard/Documents/Rust/sockets/PST/target/rls/debug/deps","-L","dependency=/home/vegard/Documents/Rust/sockets/PST/target/rls/debug/deps","--extern","libc=/home/vegard/Documents/Rust/sockets/PST/target/rls/debug/deps/liblibc-126646d2aa159d11.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/vegard/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/vegard/Documents/Rust/sockets/PST/target/rls/debug/deps/libsocket2-754695091e8e9777.rmeta"},"prelude":{"crate_id":{"name":"socket2","disambiguator":[1115578934191332854,0]},"crate_root":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src","external_crates":[{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[18009504021925498586,0]}},{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[4529231008568630066,0]}},{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[6454353934602915994,0]}},{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[4068501274341658802,0]}},{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[6477578750782050620,0]}},{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[8891903781499800355,0]}},{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[5820604803307051361,0]}},{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[8495696488133152618,0]}},{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[573130743634949162,0]}},{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[194626158685852222,0]}},{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","num":11,"id":{"name":"adler","disambiguator":[6912020744921273940,0]}},{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[6083063236018227814,0]}},{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[4457149757231420433,0]}},{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[17193898272045318619,0]}},{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","num":15,"id":{"name":"addr2line","disambiguator":[16816495372639671287,0]}},{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","num":16,"id":{"name":"gimli","disambiguator":[18018821183479052995,0]}},{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","num":17,"id":{"name":"object","disambiguator":[8471467948192562461,0]}},{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","num":18,"id":{"name":"memchr","disambiguator":[10516304001967857410,0]}},{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[14599081442512269196,0]}},{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","num":20,"id":{"name":"libc","disambiguator":[7218947252679074066,0]}}],"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":353,"byte_end":13808,"line_start":9,"line_end":452,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":913},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":4266,"byte_end":4274,"line_start":131,"line_end":131,"column_start":19,"column_end":27},"alias_span":null,"name":"SockAddr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":185},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":4292,"byte_end":4298,"line_start":132,"line_end":132,"column_start":17,"column_end":23},"alias_span":null,"name":"Socket","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":363},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":4317,"byte_end":4324,"line_start":133,"line_end":133,"column_start":18,"column_end":25},"alias_span":null,"name":"SockRef","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":918},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":4493,"byte_end":4516,"line_start":142,"line_end":142,"column_start":17,"column_end":40},"alias_span":null,"name":"InterfaceIndexOrAddress","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":353,"byte_end":13808,"line_start":9,"line_end":452,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":6},{"krate":0,"index":9},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":16},{"krate":0,"index":19},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":99},{"krate":0,"index":340},{"krate":0,"index":377},{"krate":0,"index":848},{"krate":0,"index":851},{"krate":0,"index":854},{"krate":0,"index":857},{"krate":0,"index":860},{"krate":0,"index":957},{"krate":0,"index":960},{"krate":0,"index":961},{"krate":0,"index":963},{"krate":0,"index":964},{"krate":0,"index":966},{"krate":0,"index":967},{"krate":0,"index":863},{"krate":0,"index":867},{"krate":0,"index":869},{"krate":0,"index":970},{"krate":0,"index":973},{"krate":0,"index":974},{"krate":0,"index":976},{"krate":0,"index":977},{"krate":0,"index":979},{"krate":0,"index":980},{"krate":0,"index":871},{"krate":0,"index":876},{"krate":0,"index":878},{"krate":0,"index":983},{"krate":0,"index":986},{"krate":0,"index":987},{"krate":0,"index":989},{"krate":0,"index":990},{"krate":0,"index":992},{"krate":0,"index":993},{"krate":0,"index":880},{"krate":0,"index":885},{"krate":0,"index":887},{"krate":0,"index":996},{"krate":0,"index":999},{"krate":0,"index":1000},{"krate":0,"index":1002},{"krate":0,"index":1003},{"krate":0,"index":1005},{"krate":0,"index":1006},{"krate":0,"index":889},{"krate":0,"index":891},{"krate":0,"index":895},{"krate":0,"index":898},{"krate":0,"index":901},{"krate":0,"index":905},{"krate":0,"index":1009},{"krate":0,"index":1013},{"krate":0,"index":1015},{"krate":0,"index":908}],"decl_id":null,"docs":" Utilities for creating and using sockets.","sig":null,"attributes":[{"value":"/ Utilities for creating and using sockets.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":353,"byte_end":398,"line_start":9,"line_end":9,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":399,"byte_end":402,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ The goal of this crate is to create and use a socket using advanced","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":403,"byte_end":474,"line_start":11,"line_end":11,"column_start":1,"column_end":72}},{"value":"/ configuration options (those that are not available in the types in the","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":475,"byte_end":550,"line_start":12,"line_end":12,"column_start":1,"column_end":76}},{"value":"/ standard library) without using any unsafe code.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":551,"byte_end":603,"line_start":13,"line_end":13,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":604,"byte_end":607,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ This crate provides as direct as possible access to the system's","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":608,"byte_end":676,"line_start":15,"line_end":15,"column_start":1,"column_end":69}},{"value":"/ functionality for sockets, this means little effort to provide","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":677,"byte_end":743,"line_start":16,"line_end":16,"column_start":1,"column_end":67}},{"value":"/ cross-platform utilities. It is up to the user to know how to use sockets","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":744,"byte_end":821,"line_start":17,"line_end":17,"column_start":1,"column_end":78}},{"value":"/ when using this crate. *If you don't know how to create a socket using","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":822,"byte_end":896,"line_start":18,"line_end":18,"column_start":1,"column_end":75}},{"value":"/ libc/system calls then this crate is not for you*. Most, if not all,","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":897,"byte_end":969,"line_start":19,"line_end":19,"column_start":1,"column_end":73}},{"value":"/ functions directly relate to the equivalent system call with no error","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":970,"byte_end":1043,"line_start":20,"line_end":20,"column_start":1,"column_end":74}},{"value":"/ handling applied, so no handling errors such as [`EINTR`]. As a result using","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":1044,"byte_end":1124,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/ this crate can be a little wordy, but it should give you maximal flexibility","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":1125,"byte_end":1205,"line_start":22,"line_end":22,"column_start":1,"column_end":81}},{"value":"/ over configuration of sockets.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":1206,"byte_end":1240,"line_start":23,"line_end":23,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":1241,"byte_end":1244,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ [`EINTR`]: std::io::ErrorKind::Interrupted","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":1245,"byte_end":1291,"line_start":25,"line_end":25,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":1292,"byte_end":1295,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":1296,"byte_end":1310,"line_start":27,"line_end":27,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":1311,"byte_end":1314,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":1315,"byte_end":1328,"line_start":29,"line_end":29,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> {","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":1329,"byte_end":1369,"line_start":30,"line_end":30,"column_start":1,"column_end":41}},{"value":"/ use std::net::{SocketAddr, TcpListener};","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":1370,"byte_end":1414,"line_start":31,"line_end":31,"column_start":1,"column_end":45}},{"value":"/ use socket2::{Socket, Domain, Type};","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":1415,"byte_end":1455,"line_start":32,"line_end":32,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":1456,"byte_end":1459,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ // Create a TCP listener bound to two addresses.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":1460,"byte_end":1512,"line_start":34,"line_end":34,"column_start":1,"column_end":53}},{"value":"/ let socket = Socket::new(Domain::IPV6, Type::STREAM, None)?;","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":1513,"byte_end":1577,"line_start":35,"line_end":35,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":1578,"byte_end":1581,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ socket.set_only_v6(false)?;","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":1582,"byte_end":1613,"line_start":37,"line_end":37,"column_start":1,"column_end":32}},{"value":"/ let address: SocketAddr = \"[::1]:12345\".parse().unwrap();","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":1614,"byte_end":1675,"line_start":38,"line_end":38,"column_start":1,"column_end":62}},{"value":"/ socket.bind(&address.into())?;","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":1676,"byte_end":1710,"line_start":39,"line_end":39,"column_start":1,"column_end":35}},{"value":"/ socket.listen(128)?;","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":1711,"byte_end":1735,"line_start":40,"line_end":40,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":1736,"byte_end":1739,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ let listener: TcpListener = socket.into();","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":1740,"byte_end":1786,"line_start":42,"line_end":42,"column_start":1,"column_end":47}},{"value":"/ // ...","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":1787,"byte_end":1797,"line_start":43,"line_end":43,"column_start":1,"column_end":11}},{"value":"/ # drop(listener);","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":1798,"byte_end":1819,"line_start":44,"line_end":44,"column_start":1,"column_end":22}},{"value":"/ # Ok(()) }","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":1820,"byte_end":1834,"line_start":45,"line_end":45,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":1835,"byte_end":1842,"line_start":46,"line_end":46,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":1843,"byte_end":1846,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ ## Features","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":1847,"byte_end":1862,"line_start":48,"line_end":48,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":1863,"byte_end":1866,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ This crate has a single feature `all`, which enables all functions even ones","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":1867,"byte_end":1947,"line_start":50,"line_end":50,"column_start":1,"column_end":81}},{"value":"/ that are not available on all OSs.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":1948,"byte_end":1986,"line_start":51,"line_end":51,"column_start":1,"column_end":39}},{"value":"deny(missing_docs, missing_debug_implementations, rust_2018_idioms)","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":2043,"byte_end":2114,"line_start":54,"line_end":54,"column_start":1,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":913},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockaddr.rs","byte_start":14328,"byte_end":14336,"line_start":17,"line_end":17,"column_start":12,"column_end":20},"name":"SockAddr","qualname":"::sockaddr::SockAddr","value":"SockAddr {  }","parent":null,"children":[{"krate":0,"index":914},{"krate":0,"index":915}],"decl_id":null,"docs":" The address of a socket.","sig":null,"attributes":[{"value":"/ The address of a socket.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockaddr.rs","byte_start":14124,"byte_end":14152,"line_start":12,"line_end":12,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockaddr.rs","byte_start":14153,"byte_end":14156,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ `SockAddr`s may be constructed directly to and from the standard library","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockaddr.rs","byte_start":14157,"byte_end":14233,"line_start":14,"line_end":14,"column_start":1,"column_end":77}},{"value":"/ [`SocketAddr`], [`SocketAddrV4`], and [`SocketAddrV6`] types.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockaddr.rs","byte_start":14234,"byte_end":14299,"line_start":15,"line_end":15,"column_start":1,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":78},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockaddr.rs","byte_start":16013,"byte_end":16016,"line_start":69,"line_end":69,"column_start":25,"column_end":28},"name":"new","qualname":"<SockAddr>::new","value":"const unsafe fn new(sockaddr_storage, socklen_t) -> SockAddr","parent":null,"children":[],"decl_id":null,"docs":" Create a `SockAddr` from the underlying storage and its length.","sig":null,"attributes":[{"value":"/ Create a `SockAddr` from the underlying storage and its length.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockaddr.rs","byte_start":14452,"byte_end":14519,"line_start":24,"line_end":24,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockaddr.rs","byte_start":14524,"byte_end":14527,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockaddr.rs","byte_start":14532,"byte_end":14544,"line_start":26,"line_end":26,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockaddr.rs","byte_start":14549,"byte_end":14552,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ Caller must ensure that the address family and length match the type of","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockaddr.rs","byte_start":14557,"byte_end":14632,"line_start":28,"line_end":28,"column_start":5,"column_end":80}},{"value":"/ storage address. For example if `storage.ss_family` is set to `AF_INET`","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockaddr.rs","byte_start":14637,"byte_end":14712,"line_start":29,"line_end":29,"column_start":5,"column_end":80}},{"value":"/ the `storage` must be initialised as `sockaddr_in`, setting the content","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockaddr.rs","byte_start":14717,"byte_end":14792,"line_start":30,"line_end":30,"column_start":5,"column_end":80}},{"value":"/ and length appropriately.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockaddr.rs","byte_start":14797,"byte_end":14826,"line_start":31,"line_end":31,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockaddr.rs","byte_start":14831,"byte_end":14834,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockaddr.rs","byte_start":14839,"byte_end":14853,"line_start":33,"line_end":33,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockaddr.rs","byte_start":14858,"byte_end":14861,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockaddr.rs","byte_start":14866,"byte_end":14873,"line_start":35,"line_end":35,"column_start":5,"column_end":12}},{"value":"/ # fn main() -> std::io::Result<()> {","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockaddr.rs","byte_start":14878,"byte_end":14918,"line_start":36,"line_end":36,"column_start":5,"column_end":45}},{"value":"/ # #[cfg(unix)] {","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockaddr.rs","byte_start":14923,"byte_end":14943,"line_start":37,"line_end":37,"column_start":5,"column_end":25}},{"value":"/ use std::io;","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockaddr.rs","byte_start":14948,"byte_end":14964,"line_start":38,"line_end":38,"column_start":5,"column_end":21}},{"value":"/ use std::mem;","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockaddr.rs","byte_start":14969,"byte_end":14986,"line_start":39,"line_end":39,"column_start":5,"column_end":22}},{"value":"/ use std::os::unix::io::AsRawFd;","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockaddr.rs","byte_start":14991,"byte_end":15026,"line_start":40,"line_end":40,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockaddr.rs","byte_start":15031,"byte_end":15034,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ use socket2::{SockAddr, Socket, Domain, Type};","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockaddr.rs","byte_start":15039,"byte_end":15089,"line_start":42,"line_end":42,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockaddr.rs","byte_start":15094,"byte_end":15097,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ let socket = Socket::new(Domain::IPV4, Type::STREAM, None)?;","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockaddr.rs","byte_start":15102,"byte_end":15166,"line_start":44,"line_end":44,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockaddr.rs","byte_start":15171,"byte_end":15174,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ // Initialise a `SocketAddr` byte calling `getsockname(2)`.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockaddr.rs","byte_start":15179,"byte_end":15242,"line_start":46,"line_end":46,"column_start":5,"column_end":68}},{"value":"/ let mut addr_storage: libc::sockaddr_storage = unsafe { mem::zeroed() };","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockaddr.rs","byte_start":15247,"byte_end":15323,"line_start":47,"line_end":47,"column_start":5,"column_end":81}},{"value":"/ let mut len = mem::size_of_val(&addr_storage) as libc::socklen_t;","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockaddr.rs","byte_start":15328,"byte_end":15397,"line_start":48,"line_end":48,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockaddr.rs","byte_start":15402,"byte_end":15405,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ // The `getsockname(2)` system call will intiliase `storage` for","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockaddr.rs","byte_start":15410,"byte_end":15478,"line_start":50,"line_end":50,"column_start":5,"column_end":73}},{"value":"/ // us, setting `len` to the correct length.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockaddr.rs","byte_start":15483,"byte_end":15530,"line_start":51,"line_end":51,"column_start":5,"column_end":52}},{"value":"/ let res = unsafe {","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockaddr.rs","byte_start":15535,"byte_end":15557,"line_start":52,"line_end":52,"column_start":5,"column_end":27}},{"value":"/     libc::getsockname(","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockaddr.rs","byte_start":15562,"byte_end":15588,"line_start":53,"line_end":53,"column_start":5,"column_end":31}},{"value":"/         socket.as_raw_fd(),","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockaddr.rs","byte_start":15593,"byte_end":15624,"line_start":54,"line_end":54,"column_start":5,"column_end":36}},{"value":"/         (&mut addr_storage as *mut libc::sockaddr_storage).cast(),","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockaddr.rs","byte_start":15629,"byte_end":15699,"line_start":55,"line_end":55,"column_start":5,"column_end":75}},{"value":"/         &mut len,","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockaddr.rs","byte_start":15704,"byte_end":15725,"line_start":56,"line_end":56,"column_start":5,"column_end":26}},{"value":"/     )","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockaddr.rs","byte_start":15730,"byte_end":15739,"line_start":57,"line_end":57,"column_start":5,"column_end":14}},{"value":"/ };","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockaddr.rs","byte_start":15744,"byte_end":15750,"line_start":58,"line_end":58,"column_start":5,"column_end":11}},{"value":"/ if res == -1 {","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockaddr.rs","byte_start":15755,"byte_end":15773,"line_start":59,"line_end":59,"column_start":5,"column_end":23}},{"value":"/     return Err(io::Error::last_os_error());","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockaddr.rs","byte_start":15778,"byte_end":15825,"line_start":60,"line_end":60,"column_start":5,"column_end":52}},{"value":"/ }","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockaddr.rs","byte_start":15830,"byte_end":15835,"line_start":61,"line_end":61,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockaddr.rs","byte_start":15840,"byte_end":15843,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ let address = unsafe { SockAddr::new(addr_storage, len) };","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockaddr.rs","byte_start":15848,"byte_end":15910,"line_start":63,"line_end":63,"column_start":5,"column_end":67}},{"value":"/ # drop(address);","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockaddr.rs","byte_start":15915,"byte_end":15935,"line_start":64,"line_end":64,"column_start":5,"column_end":25}},{"value":"/ # }","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockaddr.rs","byte_start":15940,"byte_end":15947,"line_start":65,"line_end":65,"column_start":5,"column_end":12}},{"value":"/ # Ok(())","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockaddr.rs","byte_start":15952,"byte_end":15964,"line_start":66,"line_end":66,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockaddr.rs","byte_start":15969,"byte_end":15976,"line_start":67,"line_end":67,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockaddr.rs","byte_start":15981,"byte_end":15988,"line_start":68,"line_end":68,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":79},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockaddr.rs","byte_start":17755,"byte_end":17759,"line_start":118,"line_end":118,"column_start":19,"column_end":23},"name":"init","qualname":"<SockAddr>::init","value":"unsafe fn init<F, T>(F) -> io::Result<(T, SockAddr)> where\nF: FnOnce(*mut sockaddr_storage, *mut socklen_t) -> io::Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Initialise a `SockAddr` by calling the function `init`.","sig":null,"attributes":[{"value":"/ Initialise a `SockAddr` by calling the function `init`.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockaddr.rs","byte_start":16119,"byte_end":16178,"line_start":73,"line_end":73,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockaddr.rs","byte_start":16183,"byte_end":16186,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ The type of the address storage and length passed to the function `init`","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockaddr.rs","byte_start":16191,"byte_end":16267,"line_start":75,"line_end":75,"column_start":5,"column_end":81}},{"value":"/ is OS/architecture specific.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockaddr.rs","byte_start":16272,"byte_end":16304,"line_start":76,"line_end":76,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockaddr.rs","byte_start":16309,"byte_end":16312,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ The address is zeroed before `init` is called and is thus valid to","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockaddr.rs","byte_start":16317,"byte_end":16387,"line_start":78,"line_end":78,"column_start":5,"column_end":75}},{"value":"/ dereference and read from. The length initialised to the maximum length","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockaddr.rs","byte_start":16392,"byte_end":16467,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ of the storage.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockaddr.rs","byte_start":16472,"byte_end":16491,"line_start":80,"line_end":80,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockaddr.rs","byte_start":16496,"byte_end":16499,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockaddr.rs","byte_start":16504,"byte_end":16516,"line_start":82,"line_end":82,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockaddr.rs","byte_start":16521,"byte_end":16524,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ Caller must ensure that the address family and length match the type of","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockaddr.rs","byte_start":16529,"byte_end":16604,"line_start":84,"line_end":84,"column_start":5,"column_end":80}},{"value":"/ storage address. For example if `storage.ss_family` is set to `AF_INET`","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockaddr.rs","byte_start":16609,"byte_end":16684,"line_start":85,"line_end":85,"column_start":5,"column_end":80}},{"value":"/ the `storage` must be initialised as `sockaddr_in`, setting the content","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockaddr.rs","byte_start":16689,"byte_end":16764,"line_start":86,"line_end":86,"column_start":5,"column_end":80}},{"value":"/ and length appropriately.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockaddr.rs","byte_start":16769,"byte_end":16798,"line_start":87,"line_end":87,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockaddr.rs","byte_start":16803,"byte_end":16806,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockaddr.rs","byte_start":16811,"byte_end":16825,"line_start":89,"line_end":89,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockaddr.rs","byte_start":16830,"byte_end":16833,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockaddr.rs","byte_start":16838,"byte_end":16845,"line_start":91,"line_end":91,"column_start":5,"column_end":12}},{"value":"/ # fn main() -> std::io::Result<()> {","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockaddr.rs","byte_start":16850,"byte_end":16890,"line_start":92,"line_end":92,"column_start":5,"column_end":45}},{"value":"/ # #[cfg(unix)] {","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockaddr.rs","byte_start":16895,"byte_end":16915,"line_start":93,"line_end":93,"column_start":5,"column_end":25}},{"value":"/ use std::io;","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockaddr.rs","byte_start":16920,"byte_end":16936,"line_start":94,"line_end":94,"column_start":5,"column_end":21}},{"value":"/ use std::os::unix::io::AsRawFd;","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockaddr.rs","byte_start":16941,"byte_end":16976,"line_start":95,"line_end":95,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockaddr.rs","byte_start":16981,"byte_end":16984,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ use socket2::{SockAddr, Socket, Domain, Type};","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockaddr.rs","byte_start":16989,"byte_end":17039,"line_start":97,"line_end":97,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockaddr.rs","byte_start":17044,"byte_end":17047,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ let socket = Socket::new(Domain::IPV4, Type::STREAM, None)?;","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockaddr.rs","byte_start":17052,"byte_end":17116,"line_start":99,"line_end":99,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockaddr.rs","byte_start":17121,"byte_end":17124,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ // Initialise a `SocketAddr` byte calling `getsockname(2)`.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockaddr.rs","byte_start":17129,"byte_end":17192,"line_start":101,"line_end":101,"column_start":5,"column_end":68}},{"value":"/ let (_, address) = unsafe {","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockaddr.rs","byte_start":17197,"byte_end":17228,"line_start":102,"line_end":102,"column_start":5,"column_end":36}},{"value":"/     SockAddr::init(|addr_storage, len| {","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockaddr.rs","byte_start":17233,"byte_end":17277,"line_start":103,"line_end":103,"column_start":5,"column_end":49}},{"value":"/         // The `getsockname(2)` system call will intiliase `storage` for","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockaddr.rs","byte_start":17282,"byte_end":17358,"line_start":104,"line_end":104,"column_start":5,"column_end":81}},{"value":"/         // us, setting `len` to the correct length.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockaddr.rs","byte_start":17363,"byte_end":17418,"line_start":105,"line_end":105,"column_start":5,"column_end":60}},{"value":"/         if libc::getsockname(socket.as_raw_fd(), addr_storage.cast(), len) == -1 {","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockaddr.rs","byte_start":17423,"byte_end":17509,"line_start":106,"line_end":106,"column_start":5,"column_end":91}},{"value":"/             Err(io::Error::last_os_error())","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockaddr.rs","byte_start":17514,"byte_end":17561,"line_start":107,"line_end":107,"column_start":5,"column_end":52}},{"value":"/         } else {","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockaddr.rs","byte_start":17566,"byte_end":17586,"line_start":108,"line_end":108,"column_start":5,"column_end":25}},{"value":"/             Ok(())","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockaddr.rs","byte_start":17591,"byte_end":17613,"line_start":109,"line_end":109,"column_start":5,"column_end":27}},{"value":"/         }","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockaddr.rs","byte_start":17618,"byte_end":17631,"line_start":110,"line_end":110,"column_start":5,"column_end":18}},{"value":"/     })","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockaddr.rs","byte_start":17636,"byte_end":17646,"line_start":111,"line_end":111,"column_start":5,"column_end":15}},{"value":"/ }?;","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockaddr.rs","byte_start":17651,"byte_end":17658,"line_start":112,"line_end":112,"column_start":5,"column_end":12}},{"value":"/ # drop(address);","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockaddr.rs","byte_start":17663,"byte_end":17683,"line_start":113,"line_end":113,"column_start":5,"column_end":25}},{"value":"/ # }","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockaddr.rs","byte_start":17688,"byte_end":17695,"line_start":114,"line_end":114,"column_start":5,"column_end":12}},{"value":"/ # Ok(())","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockaddr.rs","byte_start":17700,"byte_end":17712,"line_start":115,"line_end":115,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockaddr.rs","byte_start":17717,"byte_end":17724,"line_start":116,"line_end":116,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockaddr.rs","byte_start":17729,"byte_end":17736,"line_start":117,"line_end":117,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockaddr.rs","byte_start":18852,"byte_end":18858,"line_start":143,"line_end":143,"column_start":18,"column_end":24},"name":"family","qualname":"<SockAddr>::family","value":"const fn family(&Self) -> sa_family_t","parent":null,"children":[],"decl_id":null,"docs":" Returns this address's family.\n","sig":null,"attributes":[{"value":"/ Returns this address's family.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockaddr.rs","byte_start":18800,"byte_end":18834,"line_start":142,"line_end":142,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":85},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockaddr.rs","byte_start":18989,"byte_end":18992,"line_start":148,"line_end":148,"column_start":18,"column_end":21},"name":"len","qualname":"<SockAddr>::len","value":"const fn len(&Self) -> socklen_t","parent":null,"children":[],"decl_id":null,"docs":" Returns the size of this address in bytes.\n","sig":null,"attributes":[{"value":"/ Returns the size of this address in bytes.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockaddr.rs","byte_start":18925,"byte_end":18971,"line_start":147,"line_end":147,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockaddr.rs","byte_start":19102,"byte_end":19108,"line_start":153,"line_end":153,"column_start":18,"column_end":24},"name":"as_ptr","qualname":"<SockAddr>::as_ptr","value":"const fn as_ptr(&Self) -> *const sockaddr","parent":null,"children":[],"decl_id":null,"docs":" Returns a raw pointer to the address.\n","sig":null,"attributes":[{"value":"/ Returns a raw pointer to the address.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockaddr.rs","byte_start":19043,"byte_end":19084,"line_start":152,"line_end":152,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockaddr.rs","byte_start":19550,"byte_end":19559,"line_start":165,"line_end":165,"column_start":12,"column_end":21},"name":"as_socket","qualname":"<SockAddr>::as_socket","value":"fn as_socket(&Self) -> Option<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns this address as a `SocketAddr` if it is in the `AF_INET` (IPv4)\n or `AF_INET6` (IPv6) family, otherwise returns `None`.\n","sig":null,"attributes":[{"value":"/ Returns this address as a `SocketAddr` if it is in the `AF_INET` (IPv4)","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockaddr.rs","byte_start":19400,"byte_end":19475,"line_start":163,"line_end":163,"column_start":5,"column_end":80}},{"value":"/ or `AF_INET6` (IPv6) family, otherwise returns `None`.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockaddr.rs","byte_start":19480,"byte_end":19538,"line_start":164,"line_end":164,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":89},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockaddr.rs","byte_start":20866,"byte_end":20880,"line_start":197,"line_end":197,"column_start":12,"column_end":26},"name":"as_socket_ipv4","qualname":"<SockAddr>::as_socket_ipv4","value":"fn as_socket_ipv4(&Self) -> Option<SocketAddrV4>","parent":null,"children":[],"decl_id":null,"docs":" Returns this address as a [`SocketAddrV4`] if it is in the `AF_INET`\n family.\n","sig":null,"attributes":[{"value":"/ Returns this address as a [`SocketAddrV4`] if it is in the `AF_INET`","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockaddr.rs","byte_start":20766,"byte_end":20838,"line_start":195,"line_end":195,"column_start":5,"column_end":77}},{"value":"/ family.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockaddr.rs","byte_start":20843,"byte_end":20854,"line_start":196,"line_end":196,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockaddr.rs","byte_start":21146,"byte_end":21160,"line_start":206,"line_end":206,"column_start":12,"column_end":26},"name":"as_socket_ipv6","qualname":"<SockAddr>::as_socket_ipv6","value":"fn as_socket_ipv6(&Self) -> Option<SocketAddrV6>","parent":null,"children":[],"decl_id":null,"docs":" Returns this address as a [`SocketAddrV6`] if it is in the `AF_INET6`\n family.\n","sig":null,"attributes":[{"value":"/ Returns this address as a [`SocketAddrV6`] if it is in the `AF_INET6`","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockaddr.rs","byte_start":21045,"byte_end":21118,"line_start":204,"line_end":204,"column_start":5,"column_end":78}},{"value":"/ family.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockaddr.rs","byte_start":21123,"byte_end":21134,"line_start":205,"line_end":205,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockaddr.rs","byte_start":21367,"byte_end":21371,"line_start":215,"line_end":215,"column_start":8,"column_end":12},"name":"from","qualname":"<SockAddr as std::convert::From>::from","value":"fn from(SocketAddr) -> SockAddr","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockaddr.rs","byte_start":21588,"byte_end":21592,"line_start":224,"line_end":224,"column_start":8,"column_end":12},"name":"from","qualname":"<SockAddr as std::convert::From>::from","value":"fn from(SocketAddrV4) -> SockAddr","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockaddr.rs","byte_start":22629,"byte_end":22633,"line_start":252,"line_end":252,"column_start":8,"column_end":12},"name":"from","qualname":"<SockAddr as std::convert::From>::from","value":"fn from(SocketAddrV6) -> SockAddr","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockaddr.rs","byte_start":24077,"byte_end":24080,"line_start":293,"line_end":293,"column_start":8,"column_end":11},"name":"fmt","qualname":"<SockAddr as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10108},"children":[],"decl_id":{"krate":2,"index":10109},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":185},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":28932,"byte_end":28938,"line_start":72,"line_end":72,"column_start":12,"column_end":18},"name":"Socket","qualname":"::socket::Socket","value":"Socket {  }","parent":null,"children":[{"krate":0,"index":186}],"decl_id":null,"docs":" Owned wrapper around a system socket.","sig":null,"attributes":[{"value":"/ Owned wrapper around a system socket.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":27157,"byte_end":27198,"line_start":26,"line_end":26,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":27199,"byte_end":27202,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ This type simply wraps an instance of a file descriptor (`c_int`) on Unix","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":27203,"byte_end":27280,"line_start":28,"line_end":28,"column_start":1,"column_end":78}},{"value":"/ and an instance of `SOCKET` on Windows. This is the main type exported by","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":27281,"byte_end":27358,"line_start":29,"line_end":29,"column_start":1,"column_end":78}},{"value":"/ this crate and is intended to mirror the raw semantics of sockets on","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":27359,"byte_end":27431,"line_start":30,"line_end":30,"column_start":1,"column_end":73}},{"value":"/ platforms as closely as possible. Almost all methods correspond to","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":27432,"byte_end":27502,"line_start":31,"line_end":31,"column_start":1,"column_end":71}},{"value":"/ precisely one libc or OS API call which is essentially just a \"Rustic","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":27503,"byte_end":27576,"line_start":32,"line_end":32,"column_start":1,"column_end":74}},{"value":"/ translation\" of what's below.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":27577,"byte_end":27610,"line_start":33,"line_end":33,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":27611,"byte_end":27614,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ ## Converting to and from other types","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":27615,"byte_end":27656,"line_start":35,"line_end":35,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":27657,"byte_end":27660,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ This type can be freely converted into the network primitives provided by","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":27661,"byte_end":27738,"line_start":37,"line_end":37,"column_start":1,"column_end":78}},{"value":"/ the standard library, such as [`TcpStream`] or [`UdpSocket`], using the","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":27739,"byte_end":27814,"line_start":38,"line_end":38,"column_start":1,"column_end":76}},{"value":"/ [`From`] trait, see the example below.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":27815,"byte_end":27857,"line_start":39,"line_end":39,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":27858,"byte_end":27861,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ [`TcpStream`]: std::net::TcpStream","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":27862,"byte_end":27900,"line_start":41,"line_end":41,"column_start":1,"column_end":39}},{"value":"/ [`UdpSocket`]: std::net::UdpSocket","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":27901,"byte_end":27939,"line_start":42,"line_end":42,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":27940,"byte_end":27943,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ # Notes","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":27944,"byte_end":27955,"line_start":44,"line_end":44,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":27956,"byte_end":27959,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ Some methods that set options on `Socket` require two system calls to set","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":27960,"byte_end":28037,"line_start":46,"line_end":46,"column_start":1,"column_end":78}},{"value":"/ there options without overwriting previously set options. We do this by","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":28038,"byte_end":28113,"line_start":47,"line_end":47,"column_start":1,"column_end":76}},{"value":"/ first getting the current settings, applying the desired changes and than","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":28114,"byte_end":28191,"line_start":48,"line_end":48,"column_start":1,"column_end":78}},{"value":"/ updating the settings. This means that the operation is **not** atomic. This","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":28192,"byte_end":28272,"line_start":49,"line_end":49,"column_start":1,"column_end":81}},{"value":"/ can lead to a data race when two threads are changing options in parallel.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":28273,"byte_end":28351,"line_start":50,"line_end":50,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":28352,"byte_end":28355,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":28356,"byte_end":28370,"line_start":52,"line_end":52,"column_start":1,"column_end":15}},{"value":"/ ```no_run","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":28371,"byte_end":28384,"line_start":53,"line_end":53,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> {","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":28385,"byte_end":28425,"line_start":54,"line_end":54,"column_start":1,"column_end":41}},{"value":"/ use std::net::{SocketAddr, TcpListener};","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":28426,"byte_end":28470,"line_start":55,"line_end":55,"column_start":1,"column_end":45}},{"value":"/ use socket2::{Socket, Domain, Type};","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":28471,"byte_end":28511,"line_start":56,"line_end":56,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":28512,"byte_end":28515,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ // create a TCP listener bound to two addresses","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":28516,"byte_end":28567,"line_start":58,"line_end":58,"column_start":1,"column_end":52}},{"value":"/ let socket = Socket::new(Domain::IPV4, Type::STREAM, None)?;","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":28568,"byte_end":28632,"line_start":59,"line_end":59,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":28633,"byte_end":28636,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ let address: SocketAddr = \"[::1]:12345\".parse().unwrap();","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":28637,"byte_end":28698,"line_start":61,"line_end":61,"column_start":1,"column_end":62}},{"value":"/ let address = address.into();","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":28699,"byte_end":28732,"line_start":62,"line_end":62,"column_start":1,"column_end":34}},{"value":"/ socket.bind(&address)?;","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":28733,"byte_end":28760,"line_start":63,"line_end":63,"column_start":1,"column_end":28}},{"value":"/ socket.bind(&address)?;","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":28761,"byte_end":28788,"line_start":64,"line_end":64,"column_start":1,"column_end":28}},{"value":"/ socket.listen(128)?;","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":28789,"byte_end":28813,"line_start":65,"line_end":65,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":28814,"byte_end":28817,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ let listener: TcpListener = socket.into();","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":28818,"byte_end":28864,"line_start":67,"line_end":67,"column_start":1,"column_end":47}},{"value":"/ // ...","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":28865,"byte_end":28875,"line_start":68,"line_end":68,"column_start":1,"column_end":11}},{"value":"/ # drop(listener);","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":28876,"byte_end":28897,"line_start":69,"line_end":69,"column_start":1,"column_end":22}},{"value":"/ # Ok(()) }","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":28898,"byte_end":28912,"line_start":70,"line_end":70,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":28913,"byte_end":28920,"line_start":71,"line_end":71,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":192},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":31206,"byte_end":31209,"line_start":127,"line_end":127,"column_start":12,"column_end":15},"name":"new","qualname":"<Socket>::new","value":"fn new(Domain, Type, Option<Protocol>) -> io::Result<Socket>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new socket and sets common flags.","sig":null,"attributes":[{"value":"/ Creates a new socket and sets common flags.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":30747,"byte_end":30794,"line_start":117,"line_end":117,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":30799,"byte_end":30802,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ This function corresponds to `socket(2)` on Unix and `WSASocketW` on","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":30807,"byte_end":30879,"line_start":119,"line_end":119,"column_start":5,"column_end":77}},{"value":"/ Windows.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":30884,"byte_end":30896,"line_start":120,"line_end":120,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":30901,"byte_end":30904,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ On Unix-like systems, the close-on-exec flag is set on the new socket.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":30909,"byte_end":30983,"line_start":122,"line_end":122,"column_start":5,"column_end":79}},{"value":"/ Additionally, on Apple platforms `SOCK_NOSIGPIPE` is set. On Windows,","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":30988,"byte_end":31061,"line_start":123,"line_end":123,"column_start":5,"column_end":78}},{"value":"/ the socket is made non-inheritable.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":31066,"byte_end":31105,"line_start":124,"line_end":124,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":31110,"byte_end":31113,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ [`Socket::new_raw`] can be used if you don't want these flags to be set.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":31118,"byte_end":31194,"line_start":126,"line_end":126,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":193},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":31636,"byte_end":31643,"line_start":136,"line_end":136,"column_start":12,"column_end":19},"name":"new_raw","qualname":"<Socket>::new_raw","value":"fn new_raw(Domain, Type, Option<Protocol>) -> io::Result<Socket>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new socket ready to be configured.","sig":null,"attributes":[{"value":"/ Creates a new socket ready to be configured.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":31410,"byte_end":31458,"line_start":132,"line_end":132,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":31463,"byte_end":31466,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ This function corresponds to `socket(2)` on Unix and `WSASocketW` on","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":31471,"byte_end":31543,"line_start":134,"line_end":134,"column_start":5,"column_end":77}},{"value":"/ Windows and simply creates a new socket, no other configuration is done.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":31548,"byte_end":31624,"line_start":135,"line_end":135,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":195},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":32270,"byte_end":32274,"line_start":149,"line_end":149,"column_start":12,"column_end":16},"name":"pair","qualname":"<Socket>::pair","value":"fn pair(Domain, Type, Option<Protocol>) -> io::Result<(Socket, Socket)>","parent":null,"children":[],"decl_id":null,"docs":" Creates a pair of sockets which are connected to each other.","sig":null,"attributes":[{"value":"/ Creates a pair of sockets which are connected to each other.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":31860,"byte_end":31924,"line_start":141,"line_end":141,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":31929,"byte_end":31932,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ This function corresponds to `socketpair(2)`.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":31937,"byte_end":31986,"line_start":143,"line_end":143,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":31991,"byte_end":31994,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ This function sets the same flags as in done for [`Socket::new`],","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":31999,"byte_end":32068,"line_start":145,"line_end":145,"column_start":5,"column_end":74}},{"value":"/ [`Socket::pair_raw`] can be used if you don't want to set those flags.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":32073,"byte_end":32147,"line_start":146,"line_end":146,"column_start":5,"column_end":79}},{"value":"cfg(any(doc, all(feature = \"all\", unix)))","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":32152,"byte_end":32196,"line_start":147,"line_end":147,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":196},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":32849,"byte_end":32857,"line_start":166,"line_end":166,"column_start":12,"column_end":20},"name":"pair_raw","qualname":"<Socket>::pair_raw","value":"fn pair_raw(Domain, Type, Option<Protocol>) -> io::Result<(Socket, Socket)>","parent":null,"children":[],"decl_id":null,"docs":" Creates a pair of sockets which are connected to each other.","sig":null,"attributes":[{"value":"/ Creates a pair of sockets which are connected to each other.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":32600,"byte_end":32664,"line_start":161,"line_end":161,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":32669,"byte_end":32672,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ This function corresponds to `socketpair(2)`.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":32677,"byte_end":32726,"line_start":163,"line_end":163,"column_start":5,"column_end":54}},{"value":"cfg(any(doc, all(feature = \"all\", unix)))","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":32731,"byte_end":32775,"line_start":164,"line_end":164,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":199},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":33332,"byte_end":33336,"line_start":180,"line_end":180,"column_start":12,"column_end":16},"name":"bind","qualname":"<Socket>::bind","value":"fn bind(&Self, &SockAddr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Binds this socket to the specified address.","sig":null,"attributes":[{"value":"/ Binds this socket to the specified address.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":33167,"byte_end":33214,"line_start":176,"line_end":176,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":33219,"byte_end":33222,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ This function directly corresponds to the `bind(2)` function on Windows","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":33227,"byte_end":33302,"line_start":178,"line_end":178,"column_start":5,"column_end":80}},{"value":"/ and Unix.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":33307,"byte_end":33320,"line_start":179,"line_end":179,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":200},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":34070,"byte_end":34077,"line_start":198,"line_end":198,"column_start":12,"column_end":19},"name":"connect","qualname":"<Socket>::connect","value":"fn connect(&Self, &SockAddr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Initiate a connection on this socket to the specified address.","sig":null,"attributes":[{"value":"/ Initiate a connection on this socket to the specified address.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":33437,"byte_end":33503,"line_start":184,"line_end":184,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":33508,"byte_end":33511,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ This function directly corresponds to the `connect(2)` function on","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":33516,"byte_end":33586,"line_start":186,"line_end":186,"column_start":5,"column_end":75}},{"value":"/ Windows and Unix.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":33591,"byte_end":33612,"line_start":187,"line_end":187,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":33617,"byte_end":33620,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ An error will be returned if `listen` or `connect` has already been","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":33625,"byte_end":33696,"line_start":189,"line_end":189,"column_start":5,"column_end":76}},{"value":"/ called on this builder.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":33701,"byte_end":33728,"line_start":190,"line_end":190,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":33733,"byte_end":33736,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":33741,"byte_end":33752,"line_start":192,"line_end":192,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":33757,"byte_end":33760,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ When using a non-blocking connect (by setting the socket into","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":33765,"byte_end":33830,"line_start":194,"line_end":194,"column_start":5,"column_end":70}},{"value":"/ non-blocking mode before calling this function), socket option can't be","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":33835,"byte_end":33910,"line_start":195,"line_end":195,"column_start":5,"column_end":80}},{"value":"/ set *while connecting*. This will cause errors on Windows. Socket","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":33915,"byte_end":33984,"line_start":196,"line_end":196,"column_start":5,"column_end":74}},{"value":"/ options can be safely set before and after connecting the socket.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":33989,"byte_end":34058,"line_start":197,"line_end":197,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":201},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":35166,"byte_end":35181,"line_start":221,"line_end":221,"column_start":12,"column_end":27},"name":"connect_timeout","qualname":"<Socket>::connect_timeout","value":"fn connect_timeout(&Self, &SockAddr, Duration) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Initiate a connection on this socket to the specified address, only\n only waiting for a certain period of time for the connection to be\n established.","sig":null,"attributes":[{"value":"/ Initiate a connection on this socket to the specified address, only","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":34181,"byte_end":34252,"line_start":202,"line_end":202,"column_start":5,"column_end":76}},{"value":"/ only waiting for a certain period of time for the connection to be","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":34257,"byte_end":34327,"line_start":203,"line_end":203,"column_start":5,"column_end":75}},{"value":"/ established.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":34332,"byte_end":34348,"line_start":204,"line_end":204,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":34353,"byte_end":34356,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ Unlike many other methods on `Socket`, this does *not* correspond to a","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":34361,"byte_end":34435,"line_start":206,"line_end":206,"column_start":5,"column_end":79}},{"value":"/ single C function. It sets the socket to nonblocking mode, connects via","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":34440,"byte_end":34515,"line_start":207,"line_end":207,"column_start":5,"column_end":80}},{"value":"/ connect(2), and then waits for the connection to complete with poll(2)","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":34520,"byte_end":34594,"line_start":208,"line_end":208,"column_start":5,"column_end":79}},{"value":"/ on Unix and select on Windows. When the connection is complete, the","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":34599,"byte_end":34670,"line_start":209,"line_end":209,"column_start":5,"column_end":76}},{"value":"/ socket is set back to blocking mode. On Unix, this will loop over","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":34675,"byte_end":34744,"line_start":210,"line_end":210,"column_start":5,"column_end":74}},{"value":"/ `EINTR` errors.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":34749,"byte_end":34768,"line_start":211,"line_end":211,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":34773,"byte_end":34776,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ # Warnings","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":34781,"byte_end":34795,"line_start":213,"line_end":213,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":34800,"byte_end":34803,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ The non-blocking state of the socket is overridden by this function -","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":34808,"byte_end":34881,"line_start":215,"line_end":215,"column_start":5,"column_end":78}},{"value":"/ it will be returned in blocking mode on success, and in an indeterminate","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":34886,"byte_end":34962,"line_start":216,"line_end":216,"column_start":5,"column_end":81}},{"value":"/ state on failure.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":34967,"byte_end":34988,"line_start":217,"line_end":217,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":34993,"byte_end":34996,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ If the connection request times out, it may still be processing in the","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":35001,"byte_end":35075,"line_start":219,"line_end":219,"column_start":5,"column_end":79}},{"value":"/ background - a second call to `connect` or `connect_timeout` may fail.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":35080,"byte_end":35154,"line_start":220,"line_end":220,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":202},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":36024,"byte_end":36030,"line_start":245,"line_end":245,"column_start":12,"column_end":18},"name":"listen","qualname":"<Socket>::listen","value":"fn listen(&Self, c_int) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Mark a socket as ready to accept incoming connection requests using\n [`Socket::accept()`].","sig":null,"attributes":[{"value":"/ Mark a socket as ready to accept incoming connection requests using","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":35687,"byte_end":35758,"line_start":237,"line_end":237,"column_start":5,"column_end":76}},{"value":"/ [`Socket::accept()`].","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":35763,"byte_end":35788,"line_start":238,"line_end":238,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":35793,"byte_end":35796,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ This function directly corresponds to the `listen(2)` function on","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":35801,"byte_end":35870,"line_start":240,"line_end":240,"column_start":5,"column_end":74}},{"value":"/ Windows and Unix.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":35875,"byte_end":35896,"line_start":241,"line_end":241,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":35901,"byte_end":35904,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ An error will be returned if `listen` or `connect` has already been","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":35909,"byte_end":35980,"line_start":243,"line_end":243,"column_start":5,"column_end":76}},{"value":"/ called on this builder.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":35985,"byte_end":36012,"line_start":244,"line_end":244,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":203},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":36484,"byte_end":36490,"line_start":256,"line_end":256,"column_start":12,"column_end":18},"name":"accept","qualname":"<Socket>::accept","value":"fn accept(&Self) -> io::Result<(Socket, SockAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Accept a new incoming connection from this listener.","sig":null,"attributes":[{"value":"/ Accept a new incoming connection from this listener.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":36129,"byte_end":36185,"line_start":249,"line_end":249,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":36190,"byte_end":36193,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ This function uses `accept4(2)` on platforms that support it and","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":36198,"byte_end":36266,"line_start":251,"line_end":251,"column_start":5,"column_end":73}},{"value":"/ `accept(2)` platforms that do not.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":36271,"byte_end":36309,"line_start":252,"line_end":252,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":36314,"byte_end":36317,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ This function sets the same flags as in done for [`Socket::new`],","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":36322,"byte_end":36391,"line_start":254,"line_end":254,"column_start":5,"column_end":74}},{"value":"/ [`Socket::accept_raw`] can be used if you don't want to set those flags.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":36396,"byte_end":36472,"line_start":255,"line_end":255,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":204},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":37939,"byte_end":37949,"line_start":296,"line_end":296,"column_start":12,"column_end":22},"name":"accept_raw","qualname":"<Socket>::accept_raw","value":"fn accept_raw(&Self) -> io::Result<(Socket, SockAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Accept a new incoming connection from this listener.","sig":null,"attributes":[{"value":"/ Accept a new incoming connection from this listener.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":37763,"byte_end":37819,"line_start":292,"line_end":292,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":37824,"byte_end":37827,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ This function directly corresponds to the `accept(2)` function on","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":37832,"byte_end":37901,"line_start":294,"line_end":294,"column_start":5,"column_end":74}},{"value":"/ Windows and Unix.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":37906,"byte_end":37927,"line_start":295,"line_end":295,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":38329,"byte_end":38339,"line_start":308,"line_end":308,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<Socket>::local_addr","value":"fn local_addr(&Self) -> io::Result<SockAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the socket address of the local half of this socket.","sig":null,"attributes":[{"value":"/ Returns the socket address of the local half of this socket.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":38092,"byte_end":38156,"line_start":300,"line_end":300,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":38161,"byte_end":38164,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":38169,"byte_end":38180,"line_start":302,"line_end":302,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":38185,"byte_end":38188,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ Depending on the OS this may return an error if the socket is not","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":38193,"byte_end":38262,"line_start":304,"line_end":304,"column_start":5,"column_end":74}},{"value":"/ [bound].","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":38267,"byte_end":38279,"line_start":305,"line_end":305,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":38284,"byte_end":38287,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ [bound]: Socket::bind","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":38292,"byte_end":38317,"line_start":307,"line_end":307,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":207},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":38646,"byte_end":38655,"line_start":319,"line_end":319,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<Socket>::peer_addr","value":"fn peer_addr(&Self) -> io::Result<SockAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the socket address of the remote peer of this socket.","sig":null,"attributes":[{"value":"/ Returns the socket address of the remote peer of this socket.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":38424,"byte_end":38489,"line_start":312,"line_end":312,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":38494,"byte_end":38497,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":38502,"byte_end":38513,"line_start":314,"line_end":314,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":38518,"byte_end":38521,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ This returns an error if the socket is not [`connect`ed].","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":38526,"byte_end":38587,"line_start":316,"line_end":316,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":38592,"byte_end":38595,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ [`connect`ed]: Socket::connect","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":38600,"byte_end":38634,"line_start":318,"line_end":318,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":208},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":38848,"byte_end":38854,"line_start":325,"line_end":325,"column_start":12,"column_end":18},"name":"type","qualname":"<Socket>::type","value":"fn r#type(&Self) -> io::Result<Type>","parent":null,"children":[],"decl_id":null,"docs":" Returns the [`Type`] of this socket by checking the `SO_TYPE` option on\n this socket.\n","sig":null,"attributes":[{"value":"/ Returns the [`Type`] of this socket by checking the `SO_TYPE` option on","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":38740,"byte_end":38815,"line_start":323,"line_end":323,"column_start":5,"column_end":80}},{"value":"/ this socket.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":38820,"byte_end":38836,"line_start":324,"line_end":324,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":209},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":39530,"byte_end":39539,"line_start":342,"line_end":342,"column_start":12,"column_end":21},"name":"try_clone","qualname":"<Socket>::try_clone","value":"fn try_clone(&Self) -> io::Result<Socket>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new independently owned handle to the underlying socket.","sig":null,"attributes":[{"value":"/ Creates a new independently owned handle to the underlying socket.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":38990,"byte_end":39060,"line_start":329,"line_end":329,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":39065,"byte_end":39068,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":39073,"byte_end":39084,"line_start":331,"line_end":331,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":39089,"byte_end":39092,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ On Unix this uses `F_DUPFD_CLOEXEC` and thus sets the `FD_CLOEXEC` on","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":39097,"byte_end":39170,"line_start":333,"line_end":333,"column_start":5,"column_end":78}},{"value":"/ the returned socket.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":39175,"byte_end":39199,"line_start":334,"line_end":334,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":39204,"byte_end":39207,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ On Windows this uses `WSA_FLAG_NO_HANDLE_INHERIT` setting inheriting to","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":39212,"byte_end":39287,"line_start":336,"line_end":336,"column_start":5,"column_end":80}},{"value":"/ false.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":39292,"byte_end":39302,"line_start":337,"line_end":337,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":39307,"byte_end":39310,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ On Windows this can **not** be used function cannot be used on a","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":39315,"byte_end":39383,"line_start":339,"line_end":339,"column_start":5,"column_end":73}},{"value":"/ QOS-enabled socket, see","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":39388,"byte_end":39415,"line_start":340,"line_end":340,"column_start":5,"column_end":32}},{"value":"/ <https://docs.microsoft.com/en-us/windows/win32/api/winsock2/nf-winsock2-wsaduplicatesocketw>.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":39420,"byte_end":39518,"line_start":341,"line_end":341,"column_start":5,"column_end":103}}]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":39922,"byte_end":39937,"line_start":354,"line_end":354,"column_start":12,"column_end":27},"name":"set_nonblocking","qualname":"<Socket>::set_nonblocking","value":"fn set_nonblocking(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Moves this TCP stream into or out of nonblocking mode.","sig":null,"attributes":[{"value":"/ Moves this TCP stream into or out of nonblocking mode.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":39642,"byte_end":39700,"line_start":346,"line_end":346,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":39705,"byte_end":39708,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":39713,"byte_end":39724,"line_start":348,"line_end":348,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":39729,"byte_end":39732,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ On Unix this corresponds to calling `fcntl` (un)setting `O_NONBLOCK`.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":39737,"byte_end":39810,"line_start":350,"line_end":350,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":39815,"byte_end":39818,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ On Windows this corresponds to calling `ioctlsocket` (un)setting","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":39823,"byte_end":39891,"line_start":352,"line_end":352,"column_start":5,"column_end":73}},{"value":"/ `FIONBIO`.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":39896,"byte_end":39910,"line_start":353,"line_end":353,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":211},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":40281,"byte_end":40289,"line_start":362,"line_end":362,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<Socket>::shutdown","value":"fn shutdown(&Self, Shutdown) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Shuts down the read, write, or both halves of this connection.","sig":null,"attributes":[{"value":"/ Shuts down the read, write, or both halves of this connection.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":40052,"byte_end":40118,"line_start":358,"line_end":358,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":40123,"byte_end":40126,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ This function will cause all pending and future I/O on the specified","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":40131,"byte_end":40203,"line_start":360,"line_end":360,"column_start":5,"column_end":77}},{"value":"/ portions to return immediately with an appropriate value.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":40208,"byte_end":40269,"line_start":361,"line_end":361,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":212},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":41327,"byte_end":41331,"line_start":386,"line_end":386,"column_start":12,"column_end":16},"name":"recv","qualname":"<Socket>::recv","value":"fn recv(&Self, &mut [MaybeUninit<u8>]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Receives data on the socket from the remote address to which it is\n connected.","sig":null,"attributes":[{"value":"/ Receives data on the socket from the remote address to which it is","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":40385,"byte_end":40455,"line_start":366,"line_end":366,"column_start":5,"column_end":75}},{"value":"/ connected.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":40460,"byte_end":40474,"line_start":367,"line_end":367,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":40479,"byte_end":40482,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":40487,"byte_end":40559,"line_start":369,"line_end":369,"column_start":5,"column_end":77}},{"value":"/ This method might fail if the socket is not connected.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":40564,"byte_end":40622,"line_start":370,"line_end":370,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":40627,"byte_end":40630,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: Socket::connect","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":40635,"byte_end":40667,"line_start":372,"line_end":372,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":40672,"byte_end":40675,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":40680,"byte_end":40692,"line_start":374,"line_end":374,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":40697,"byte_end":40700,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ Normally casting a `&mut [u8]` to `&mut [MaybeUninit<u8>]` would be","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":40705,"byte_end":40776,"line_start":376,"line_end":376,"column_start":5,"column_end":76}},{"value":"/ unsound, as that allows us to write uninitialised bytes to the buffer.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":40781,"byte_end":40855,"line_start":377,"line_end":377,"column_start":5,"column_end":79}},{"value":"/ However this implementation promises to not write uninitialised bytes to","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":40860,"byte_end":40936,"line_start":378,"line_end":378,"column_start":5,"column_end":81}},{"value":"/ the `buf`fer and passes it directly to `recv(2)` system call. This","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":40941,"byte_end":41011,"line_start":379,"line_end":379,"column_start":5,"column_end":75}},{"value":"/ promise ensures that this function can be called using a `buf`fer of","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":41016,"byte_end":41088,"line_start":380,"line_end":380,"column_start":5,"column_end":77}},{"value":"/ type `&mut [u8]`.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":41093,"byte_end":41114,"line_start":381,"line_end":381,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":41119,"byte_end":41122,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ Note that the [`io::Read::read`] implementation calls this function with","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":41127,"byte_end":41203,"line_start":383,"line_end":383,"column_start":5,"column_end":81}},{"value":"/ a `buf`fer of type `&mut [u8]`, allowing initialised buffers to be used","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":41208,"byte_end":41283,"line_start":384,"line_end":384,"column_start":5,"column_end":80}},{"value":"/ without using `unsafe`.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":41288,"byte_end":41315,"line_start":385,"line_end":385,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":213},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":41776,"byte_end":41792,"line_start":397,"line_end":397,"column_start":12,"column_end":28},"name":"recv_out_of_band","qualname":"<Socket>::recv_out_of_band","value":"fn recv_out_of_band(&Self, &mut [MaybeUninit<u8>]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Receives out-of-band (OOB) data on the socket from the remote address to\n which it is connected by setting the `MSG_OOB` flag for this call.","sig":null,"attributes":[{"value":"/ Receives out-of-band (OOB) data on the socket from the remote address to","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":41439,"byte_end":41515,"line_start":390,"line_end":390,"column_start":5,"column_end":81}},{"value":"/ which it is connected by setting the `MSG_OOB` flag for this call.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":41520,"byte_end":41590,"line_start":391,"line_end":391,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":41595,"byte_end":41598,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/ For more information, see [`recv`], [`out_of_band_inline`].","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":41603,"byte_end":41666,"line_start":393,"line_end":393,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":41671,"byte_end":41674,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ [`recv`]: Socket::recv","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":41679,"byte_end":41705,"line_start":395,"line_end":395,"column_start":5,"column_end":31}},{"value":"/ [`out_of_band_inline`]: Socket::out_of_band_inline","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":41710,"byte_end":41764,"line_start":396,"line_end":396,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":42074,"byte_end":42089,"line_start":405,"line_end":405,"column_start":12,"column_end":27},"name":"recv_with_flags","qualname":"<Socket>::recv_with_flags","value":"fn recv_with_flags(&Self, &mut [MaybeUninit<u8>], sys::c_int)\n-> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Identical to [`recv`] but allows for specification of arbitrary flags to\n the underlying `recv` call.","sig":null,"attributes":[{"value":"/ Identical to [`recv`] but allows for specification of arbitrary flags to","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":41911,"byte_end":41987,"line_start":401,"line_end":401,"column_start":5,"column_end":81}},{"value":"/ the underlying `recv` call.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":41992,"byte_end":42023,"line_start":402,"line_end":402,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":42028,"byte_end":42031,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ [`recv`]: Socket::recv","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":42036,"byte_end":42062,"line_start":404,"line_end":404,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":215},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":43588,"byte_end":43601,"line_start":440,"line_end":440,"column_start":12,"column_end":25},"name":"recv_vectored","qualname":"<Socket>::recv_vectored","value":"fn recv_vectored(&Self, &mut [MaybeUninitSlice])\n-> io::Result<(usize, RecvFlags)>","parent":null,"children":[],"decl_id":null,"docs":" Receives data on the socket from the remote address to which it is\n connected. Unlike [`recv`] this allows passing multiple buffers.","sig":null,"attributes":[{"value":"/ Receives data on the socket from the remote address to which it is","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":42255,"byte_end":42325,"line_start":413,"line_end":413,"column_start":5,"column_end":75}},{"value":"/ connected. Unlike [`recv`] this allows passing multiple buffers.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":42330,"byte_end":42398,"line_start":414,"line_end":414,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":42403,"byte_end":42406,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":42411,"byte_end":42483,"line_start":416,"line_end":416,"column_start":5,"column_end":77}},{"value":"/ This method might fail if the socket is not connected.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":42488,"byte_end":42546,"line_start":417,"line_end":417,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":42551,"byte_end":42554,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ In addition to the number of bytes read, this function returns the flags","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":42559,"byte_end":42635,"line_start":419,"line_end":419,"column_start":5,"column_end":81}},{"value":"/ for the received message. See [`RecvFlags`] for more information about","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":42640,"byte_end":42714,"line_start":420,"line_end":420,"column_start":5,"column_end":79}},{"value":"/ the returned flags.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":42719,"byte_end":42742,"line_start":421,"line_end":421,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":42747,"byte_end":42750,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ [`recv`]: Socket::recv","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":42755,"byte_end":42781,"line_start":423,"line_end":423,"column_start":5,"column_end":31}},{"value":"/ [`connect`]: Socket::connect","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":42786,"byte_end":42818,"line_start":424,"line_end":424,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":42823,"byte_end":42826,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":42831,"byte_end":42843,"line_start":426,"line_end":426,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":42848,"byte_end":42851,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ Normally casting a `IoSliceMut` to `MaybeUninitSlice` would be unsound,","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":42856,"byte_end":42931,"line_start":428,"line_end":428,"column_start":5,"column_end":80}},{"value":"/ as that allows us to write uninitialised bytes to the buffer. However","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":42936,"byte_end":43009,"line_start":429,"line_end":429,"column_start":5,"column_end":78}},{"value":"/ this implementation promises to not write uninitialised bytes to the","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":43014,"byte_end":43086,"line_start":430,"line_end":430,"column_start":5,"column_end":77}},{"value":"/ `bufs` and passes it directly to `recvmsg(2)` system call. This promise","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":43091,"byte_end":43166,"line_start":431,"line_end":431,"column_start":5,"column_end":80}},{"value":"/ ensures that this function can be called using `bufs` of type `&mut","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":43171,"byte_end":43242,"line_start":432,"line_end":432,"column_start":5,"column_end":76}},{"value":"/ [IoSliceMut]`.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":43247,"byte_end":43265,"line_start":433,"line_end":433,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":43270,"byte_end":43273,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ Note that the [`io::Read::read_vectored`] implementation calls this","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":43278,"byte_end":43349,"line_start":435,"line_end":435,"column_start":5,"column_end":76}},{"value":"/ function with `buf`s of type `&mut [IoSliceMut]`, allowing initialised","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":43354,"byte_end":43428,"line_start":436,"line_end":436,"column_start":5,"column_end":79}},{"value":"/ buffers to be used without using `unsafe`.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":43433,"byte_end":43479,"line_start":437,"line_end":437,"column_start":5,"column_end":51}},{"value":"cfg(not(target_os = \"redox\"))","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":43484,"byte_end":43516,"line_start":438,"line_end":438,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":216},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":44260,"byte_end":44284,"line_start":460,"line_end":460,"column_start":12,"column_end":36},"name":"recv_vectored_with_flags","qualname":"<Socket>::recv_vectored_with_flags","value":"fn recv_vectored_with_flags(&Self, &mut [MaybeUninitSlice], c_int)\n-> io::Result<(usize, RecvFlags)>","parent":null,"children":[],"decl_id":null,"docs":" Identical to [`recv_vectored`] but allows for specification of arbitrary\n flags to the underlying `recvmsg`/`WSARecv` call.","sig":null,"attributes":[{"value":"/ Identical to [`recv_vectored`] but allows for specification of arbitrary","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":43761,"byte_end":43837,"line_start":447,"line_end":447,"column_start":5,"column_end":81}},{"value":"/ flags to the underlying `recvmsg`/`WSARecv` call.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":43842,"byte_end":43895,"line_start":448,"line_end":448,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":43900,"byte_end":43903,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ [`recv_vectored`]: Socket::recv_vectored","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":43908,"byte_end":43952,"line_start":450,"line_end":450,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":43957,"byte_end":43960,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":43965,"byte_end":43977,"line_start":452,"line_end":452,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":43982,"byte_end":43985,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ `recv_from_vectored` makes the same safety guarantees regarding `bufs`","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":43990,"byte_end":44064,"line_start":454,"line_end":454,"column_start":5,"column_end":79}},{"value":"/ as [`recv_vectored`].","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":44069,"byte_end":44094,"line_start":455,"line_end":455,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":44099,"byte_end":44102,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ [`recv_vectored`]: Socket::recv_vectored","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":44107,"byte_end":44151,"line_start":457,"line_end":457,"column_start":5,"column_end":49}},{"value":"cfg(not(target_os = \"redox\"))","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":44156,"byte_end":44188,"line_start":458,"line_end":458,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":217},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":44991,"byte_end":44995,"line_start":481,"line_end":481,"column_start":12,"column_end":16},"name":"peek","qualname":"<Socket>::peek","value":"fn peek(&Self, &mut [MaybeUninit<u8>]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Receives data on the socket from the remote adress to which it is\n connected, without removing that data from the queue. On success,\n returns the number of bytes peeked.","sig":null,"attributes":[{"value":"/ Receives data on the socket from the remote adress to which it is","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":44474,"byte_end":44543,"line_start":468,"line_end":468,"column_start":5,"column_end":74}},{"value":"/ connected, without removing that data from the queue. On success,","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":44548,"byte_end":44617,"line_start":469,"line_end":469,"column_start":5,"column_end":74}},{"value":"/ returns the number of bytes peeked.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":44622,"byte_end":44661,"line_start":470,"line_end":470,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":44666,"byte_end":44669,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/ Successive calls return the same data. This is accomplished by passing","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":44674,"byte_end":44748,"line_start":472,"line_end":472,"column_start":5,"column_end":79}},{"value":"/ `MSG_PEEK` as a flag to the underlying `recv` system call.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":44753,"byte_end":44815,"line_start":473,"line_end":473,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":44820,"byte_end":44823,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":44828,"byte_end":44840,"line_start":475,"line_end":475,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":44845,"byte_end":44848,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ `peek` makes the same safety guarantees regarding the `buf`fer as","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":44853,"byte_end":44922,"line_start":477,"line_end":477,"column_start":5,"column_end":74}},{"value":"/ [`recv`].","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":44927,"byte_end":44940,"line_start":478,"line_end":478,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":44945,"byte_end":44948,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ [`recv`]: Socket::recv","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":44953,"byte_end":44979,"line_start":480,"line_end":480,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":218},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":45426,"byte_end":45435,"line_start":494,"line_end":494,"column_start":12,"column_end":21},"name":"recv_from","qualname":"<Socket>::recv_from","value":"fn recv_from(&Self, &mut [MaybeUninit<u8>]) -> io::Result<(usize, SockAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket. On success, returns the number of bytes\n read and the address from whence the data came.","sig":null,"attributes":[{"value":"/ Receives data from the socket. On success, returns the number of bytes","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":45115,"byte_end":45189,"line_start":485,"line_end":485,"column_start":5,"column_end":79}},{"value":"/ read and the address from whence the data came.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":45194,"byte_end":45245,"line_start":486,"line_end":486,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":45250,"byte_end":45253,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":45258,"byte_end":45270,"line_start":488,"line_end":488,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":45275,"byte_end":45278,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/ `recv_from` makes the same safety guarantees regarding the `buf`fer as","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":45283,"byte_end":45357,"line_start":490,"line_end":490,"column_start":5,"column_end":79}},{"value":"/ [`recv`].","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":45362,"byte_end":45375,"line_start":491,"line_end":491,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":45380,"byte_end":45383,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ [`recv`]: Socket::recv","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":45388,"byte_end":45414,"line_start":493,"line_end":493,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":219},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":45742,"byte_end":45762,"line_start":502,"line_end":502,"column_start":12,"column_end":32},"name":"recv_from_with_flags","qualname":"<Socket>::recv_from_with_flags","value":"fn recv_from_with_flags(&Self, &mut [MaybeUninit<u8>], c_int)\n-> io::Result<(usize, SockAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Identical to [`recv_from`] but allows for specification of arbitrary\n flags to the underlying `recvfrom` call.","sig":null,"attributes":[{"value":"/ Identical to [`recv_from`] but allows for specification of arbitrary","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":45560,"byte_end":45632,"line_start":498,"line_end":498,"column_start":5,"column_end":77}},{"value":"/ flags to the underlying `recvfrom` call.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":45637,"byte_end":45681,"line_start":499,"line_end":499,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":45686,"byte_end":45689,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ [`recv_from`]: Socket::recv_from","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":45694,"byte_end":45730,"line_start":501,"line_end":501,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":220},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":46506,"byte_end":46524,"line_start":524,"line_end":524,"column_start":12,"column_end":30},"name":"recv_from_vectored","qualname":"<Socket>::recv_from_vectored","value":"fn recv_from_vectored(&Self, &mut [MaybeUninitSlice])\n-> io::Result<(usize, RecvFlags, SockAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket. Returns the amount of bytes read, the\n [`RecvFlags`] and the remote address from the data is coming. Unlike\n [`recv_from`] this allows passing multiple buffers.","sig":null,"attributes":[{"value":"/ Receives data from the socket. Returns the amount of bytes read, the","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":45940,"byte_end":46012,"line_start":510,"line_end":510,"column_start":5,"column_end":77}},{"value":"/ [`RecvFlags`] and the remote address from the data is coming. Unlike","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":46017,"byte_end":46089,"line_start":511,"line_end":511,"column_start":5,"column_end":77}},{"value":"/ [`recv_from`] this allows passing multiple buffers.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":46094,"byte_end":46149,"line_start":512,"line_end":512,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":46154,"byte_end":46157,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/ [`recv_from`]: Socket::recv_from","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":46162,"byte_end":46198,"line_start":514,"line_end":514,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":46203,"byte_end":46206,"line_start":515,"line_end":515,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":46211,"byte_end":46223,"line_start":516,"line_end":516,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":46228,"byte_end":46231,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ `recv_from_vectored` makes the same safety guarantees regarding `bufs`","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":46236,"byte_end":46310,"line_start":518,"line_end":518,"column_start":5,"column_end":79}},{"value":"/ as [`recv_vectored`].","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":46315,"byte_end":46340,"line_start":519,"line_end":519,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":46345,"byte_end":46348,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ [`recv_vectored`]: Socket::recv_vectored","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":46353,"byte_end":46397,"line_start":521,"line_end":521,"column_start":5,"column_end":49}},{"value":"cfg(not(target_os = \"redox\"))","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":46402,"byte_end":46434,"line_start":522,"line_end":522,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":221},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":47217,"byte_end":47246,"line_start":544,"line_end":544,"column_start":12,"column_end":41},"name":"recv_from_vectored_with_flags","qualname":"<Socket>::recv_from_vectored_with_flags","value":"fn recv_from_vectored_with_flags(&Self, &mut [MaybeUninitSlice], c_int)\n-> io::Result<(usize, RecvFlags, SockAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Identical to [`recv_from_vectored`] but allows for specification of\n arbitrary flags to the underlying `recvmsg`/`WSARecvFrom` call.","sig":null,"attributes":[{"value":"/ Identical to [`recv_from_vectored`] but allows for specification of","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":46699,"byte_end":46770,"line_start":531,"line_end":531,"column_start":5,"column_end":76}},{"value":"/ arbitrary flags to the underlying `recvmsg`/`WSARecvFrom` call.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":46775,"byte_end":46842,"line_start":532,"line_end":532,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":46847,"byte_end":46850,"line_start":533,"line_end":533,"column_start":5,"column_end":8}},{"value":"/ [`recv_from_vectored`]: Socket::recv_from_vectored","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":46855,"byte_end":46909,"line_start":534,"line_end":534,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":46914,"byte_end":46917,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":46922,"byte_end":46934,"line_start":536,"line_end":536,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":46939,"byte_end":46942,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ `recv_from_vectored` makes the same safety guarantees regarding `bufs`","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":46947,"byte_end":47021,"line_start":538,"line_end":538,"column_start":5,"column_end":79}},{"value":"/ as [`recv_vectored`].","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":47026,"byte_end":47051,"line_start":539,"line_end":539,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":47056,"byte_end":47059,"line_start":540,"line_end":540,"column_start":5,"column_end":8}},{"value":"/ [`recv_vectored`]: Socket::recv_vectored","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":47064,"byte_end":47108,"line_start":541,"line_end":541,"column_start":5,"column_end":49}},{"value":"cfg(not(target_os = \"redox\"))","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":47113,"byte_end":47145,"line_start":542,"line_end":542,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":222},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":47974,"byte_end":47983,"line_start":566,"line_end":566,"column_start":12,"column_end":21},"name":"peek_from","qualname":"<Socket>::peek_from","value":"fn peek_from(&Self, &mut [MaybeUninit<u8>]) -> io::Result<(usize, SockAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket, without removing it from the queue.","sig":null,"attributes":[{"value":"/ Receives data from the socket, without removing it from the queue.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":47451,"byte_end":47521,"line_start":552,"line_end":552,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":47526,"byte_end":47529,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ Successive calls return the same data. This is accomplished by passing","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":47534,"byte_end":47608,"line_start":554,"line_end":554,"column_start":5,"column_end":79}},{"value":"/ `MSG_PEEK` as a flag to the underlying `recvfrom` system call.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":47613,"byte_end":47679,"line_start":555,"line_end":555,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":47684,"byte_end":47687,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes peeked and the address from","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":47692,"byte_end":47763,"line_start":557,"line_end":557,"column_start":5,"column_end":76}},{"value":"/ whence the data came.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":47768,"byte_end":47793,"line_start":558,"line_end":558,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":47798,"byte_end":47801,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":47806,"byte_end":47818,"line_start":560,"line_end":560,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":47823,"byte_end":47826,"line_start":561,"line_end":561,"column_start":5,"column_end":8}},{"value":"/ `peek_from` makes the same safety guarantees regarding the `buf`fer as","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":47831,"byte_end":47905,"line_start":562,"line_end":562,"column_start":5,"column_end":79}},{"value":"/ [`recv`].","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":47910,"byte_end":47923,"line_start":563,"line_end":563,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":47928,"byte_end":47931,"line_start":564,"line_end":564,"column_start":5,"column_end":8}},{"value":"/ [`recv`]: Socket::recv","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":47936,"byte_end":47962,"line_start":565,"line_end":565,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":223},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":48361,"byte_end":48365,"line_start":576,"line_end":576,"column_start":12,"column_end":16},"name":"send","qualname":"<Socket>::send","value":"fn send(&Self, &[u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to a connected peer.","sig":null,"attributes":[{"value":"/ Sends data on the socket to a connected peer.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":48120,"byte_end":48169,"line_start":570,"line_end":570,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":48174,"byte_end":48177,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/ This is typically used on TCP sockets or datagram sockets which have","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":48182,"byte_end":48254,"line_start":572,"line_end":572,"column_start":5,"column_end":77}},{"value":"/ been connected.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":48259,"byte_end":48278,"line_start":573,"line_end":573,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":48283,"byte_end":48286,"line_start":574,"line_end":574,"column_start":5,"column_end":8}},{"value":"/ On success returns the number of bytes that were sent.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":48291,"byte_end":48349,"line_start":575,"line_end":575,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":48619,"byte_end":48634,"line_start":584,"line_end":584,"column_start":12,"column_end":27},"name":"send_with_flags","qualname":"<Socket>::send_with_flags","value":"fn send_with_flags(&Self, &[u8], c_int) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Identical to [`send`] but allows for specification of arbitrary flags to the underlying\n `send` call.","sig":null,"attributes":[{"value":"/ Identical to [`send`] but allows for specification of arbitrary flags to the underlying","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":48456,"byte_end":48547,"line_start":580,"line_end":580,"column_start":5,"column_end":96}},{"value":"/ `send` call.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":48552,"byte_end":48568,"line_start":581,"line_end":581,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":48573,"byte_end":48576,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/ [`send`]: #method.send","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":48581,"byte_end":48607,"line_start":583,"line_end":583,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":225},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":48929,"byte_end":48942,"line_start":591,"line_end":591,"column_start":12,"column_end":25},"name":"send_vectored","qualname":"<Socket>::send_vectored","value":"fn send_vectored(&Self, &[IoSlice]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Send data to the connected peer. Returns the amount of bytes written.\n","sig":null,"attributes":[{"value":"/ Send data to the connected peer. Returns the amount of bytes written.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":48747,"byte_end":48820,"line_start":588,"line_end":588,"column_start":5,"column_end":78}},{"value":"cfg(not(target_os = \"redox\"))","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":48825,"byte_end":48857,"line_start":589,"line_end":589,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":226},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":49353,"byte_end":49377,"line_start":601,"line_end":601,"column_start":12,"column_end":36},"name":"send_vectored_with_flags","qualname":"<Socket>::send_vectored_with_flags","value":"fn send_vectored_with_flags(&Self, &[IoSlice], c_int) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Identical to [`send_vectored`] but allows for specification of arbitrary\n flags to the underlying `sendmsg`/`WSASend` call.","sig":null,"attributes":[{"value":"/ Identical to [`send_vectored`] but allows for specification of arbitrary","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":49053,"byte_end":49129,"line_start":595,"line_end":595,"column_start":5,"column_end":81}},{"value":"/ flags to the underlying `sendmsg`/`WSASend` call.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":49134,"byte_end":49187,"line_start":596,"line_end":596,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":49192,"byte_end":49195,"line_start":597,"line_end":597,"column_start":5,"column_end":8}},{"value":"/ [`send_vectored`]: Socket::send_vectored","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":49200,"byte_end":49244,"line_start":598,"line_end":598,"column_start":5,"column_end":49}},{"value":"cfg(not(target_os = \"redox\"))","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":49249,"byte_end":49281,"line_start":599,"line_end":599,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":227},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":49844,"byte_end":49860,"line_start":616,"line_end":616,"column_start":12,"column_end":28},"name":"send_out_of_band","qualname":"<Socket>::send_out_of_band","value":"fn send_out_of_band(&Self, &[u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Sends out-of-band (OOB) data on the socket to connected peer\n by setting the `MSG_OOB` flag for this call.","sig":null,"attributes":[{"value":"/ Sends out-of-band (OOB) data on the socket to connected peer","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":49541,"byte_end":49605,"line_start":609,"line_end":609,"column_start":5,"column_end":69}},{"value":"/ by setting the `MSG_OOB` flag for this call.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":49610,"byte_end":49658,"line_start":610,"line_end":610,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":49663,"byte_end":49666,"line_start":611,"line_end":611,"column_start":5,"column_end":8}},{"value":"/ For more information, see [`send`], [`out_of_band_inline`].","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":49671,"byte_end":49734,"line_start":612,"line_end":612,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":49739,"byte_end":49742,"line_start":613,"line_end":613,"column_start":5,"column_end":8}},{"value":"/ [`send`]: #method.send","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":49747,"byte_end":49773,"line_start":614,"line_end":614,"column_start":5,"column_end":31}},{"value":"/ [`out_of_band_inline`]: #method.out_of_band_inline","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":49778,"byte_end":49832,"line_start":615,"line_end":615,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":228},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":50157,"byte_end":50164,"line_start":624,"line_end":624,"column_start":12,"column_end":19},"name":"send_to","qualname":"<Socket>::send_to","value":"fn send_to(&Self, &[u8], &SockAddr) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the given address. On success, returns the\n number of bytes written.","sig":null,"attributes":[{"value":"/ Sends data on the socket to the given address. On success, returns the","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":49962,"byte_end":50036,"line_start":620,"line_end":620,"column_start":5,"column_end":79}},{"value":"/ number of bytes written.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":50041,"byte_end":50069,"line_start":621,"line_end":621,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":50074,"byte_end":50077,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ This is typically used on UDP or datagram-oriented sockets.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":50082,"byte_end":50145,"line_start":623,"line_end":623,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":229},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":50455,"byte_end":50473,"line_start":632,"line_end":632,"column_start":12,"column_end":30},"name":"send_to_with_flags","qualname":"<Socket>::send_to_with_flags","value":"fn send_to_with_flags(&Self, &[u8], &SockAddr, c_int) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Identical to [`send_to`] but allows for specification of arbitrary flags\n to the underlying `sendto` call.","sig":null,"attributes":[{"value":"/ Identical to [`send_to`] but allows for specification of arbitrary flags","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":50281,"byte_end":50357,"line_start":628,"line_end":628,"column_start":5,"column_end":81}},{"value":"/ to the underlying `sendto` call.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":50362,"byte_end":50398,"line_start":629,"line_end":629,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":50403,"byte_end":50406,"line_start":630,"line_end":630,"column_start":5,"column_end":8}},{"value":"/ [`send_to`]: Socket::send_to","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":50411,"byte_end":50443,"line_start":631,"line_end":631,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":230},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":50849,"byte_end":50865,"line_start":645,"line_end":645,"column_start":12,"column_end":28},"name":"send_to_vectored","qualname":"<Socket>::send_to_vectored","value":"fn send_to_vectored(&Self, &[IoSlice], &SockAddr) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Send data to a peer listening on `addr`. Returns the amount of bytes\n written.\n","sig":null,"attributes":[{"value":"/ Send data to a peer listening on `addr`. Returns the amount of bytes","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":50651,"byte_end":50723,"line_start":641,"line_end":641,"column_start":5,"column_end":77}},{"value":"/ written.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":50728,"byte_end":50740,"line_start":642,"line_end":642,"column_start":5,"column_end":17}},{"value":"cfg(not(target_os = \"redox\"))","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":50745,"byte_end":50777,"line_start":643,"line_end":643,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":231},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":51313,"byte_end":51340,"line_start":655,"line_end":655,"column_start":12,"column_end":39},"name":"send_to_vectored_with_flags","qualname":"<Socket>::send_to_vectored_with_flags","value":"fn send_to_vectored_with_flags(&Self, &[IoSlice], &SockAddr, c_int)\n-> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Identical to [`send_to_vectored`] but allows for specification of\n arbitrary flags to the underlying `sendmsg`/`WSASendTo` call.","sig":null,"attributes":[{"value":"/ Identical to [`send_to_vectored`] but allows for specification of","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":51002,"byte_end":51071,"line_start":649,"line_end":649,"column_start":5,"column_end":74}},{"value":"/ arbitrary flags to the underlying `sendmsg`/`WSASendTo` call.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":51076,"byte_end":51141,"line_start":650,"line_end":650,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":51146,"byte_end":51149,"line_start":651,"line_end":651,"column_start":5,"column_end":8}},{"value":"/ [`send_to_vectored`]: Socket::send_to_vectored","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":51154,"byte_end":51204,"line_start":652,"line_end":652,"column_start":5,"column_end":55}},{"value":"cfg(not(target_os = \"redox\"))","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":51209,"byte_end":51241,"line_start":653,"line_end":653,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":919},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":53382,"byte_end":53387,"line_start":730,"line_end":730,"column_start":5,"column_end":10},"name":"Index","qualname":"::socket::InterfaceIndexOrAddress::Index","value":"InterfaceIndexOrAddress::Index(u32)","parent":{"krate":0,"index":918},"children":[],"decl_id":null,"docs":" An interface index.\n","sig":null,"attributes":[{"value":"/ An interface index.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":53354,"byte_end":53377,"line_start":729,"line_end":729,"column_start":5,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":921},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":53388,"byte_end":53391,"line_start":730,"line_end":730,"column_start":11,"column_end":14},"name":"0","qualname":"::socket::InterfaceIndexOrAddress::Index::0","value":"u32","parent":{"krate":0,"index":919},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":922},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":53443,"byte_end":53450,"line_start":732,"line_end":732,"column_start":5,"column_end":12},"name":"Address","qualname":"::socket::InterfaceIndexOrAddress::Address","value":"InterfaceIndexOrAddress::Address(Ipv4Addr)","parent":{"krate":0,"index":918},"children":[],"decl_id":null,"docs":" An address assigned to an interface.\n","sig":null,"attributes":[{"value":"/ An address assigned to an interface.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":53398,"byte_end":53438,"line_start":731,"line_end":731,"column_start":5,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":924},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":53451,"byte_end":53459,"line_start":732,"line_end":732,"column_start":13,"column_end":21},"name":"0","qualname":"::socket::InterfaceIndexOrAddress::Address::0","value":"std::net::Ipv4Addr","parent":{"krate":0,"index":922},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":918},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":53324,"byte_end":53347,"line_start":728,"line_end":728,"column_start":10,"column_end":33},"name":"InterfaceIndexOrAddress","qualname":"::socket::InterfaceIndexOrAddress","value":"enum InterfaceIndexOrAddress { Index(u32), Address(Ipv4Addr), }","parent":null,"children":[{"krate":0,"index":919},{"krate":0,"index":922}],"decl_id":null,"docs":" A local interface specified by its index or an address assigned to it.","sig":null,"attributes":[{"value":"/ A local interface specified by its index or an address assigned to it.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":52921,"byte_end":52995,"line_start":716,"line_end":716,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":52996,"byte_end":52999,"line_start":717,"line_end":717,"column_start":1,"column_end":4}},{"value":"/ `Index(0)` and `Address(Ipv4Addr::UNSPECIFIED)` are equivalent and indicate","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":53000,"byte_end":53079,"line_start":718,"line_end":718,"column_start":1,"column_end":80}},{"value":"/ that an appropriate interface should be selected by the system.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":53080,"byte_end":53147,"line_start":719,"line_end":719,"column_start":1,"column_end":68}},{"value":"cfg(not(any(target_os = \"haiku\", target_os = \"illumos\", target_os =\n\"netbsd\", target_os = \"redox\", target_os = \"solaris\",)))","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":53148,"byte_end":53297,"line_start":720,"line_end":726,"column_start":1,"column_end":5}}]},{"kind":"Method","id":{"krate":0,"index":235},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":53980,"byte_end":53989,"line_start":746,"line_end":746,"column_start":12,"column_end":21},"name":"broadcast","qualname":"<Socket>::broadcast","value":"fn broadcast(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Get the value of the `SO_BROADCAST` option for this socket.","sig":null,"attributes":[{"value":"/ Get the value of the `SO_BROADCAST` option for this socket.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":53769,"byte_end":53832,"line_start":741,"line_end":741,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":53837,"byte_end":53840,"line_start":742,"line_end":742,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_broadcast`].","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":53845,"byte_end":53911,"line_start":743,"line_end":743,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":53916,"byte_end":53919,"line_start":744,"line_end":744,"column_start":5,"column_end":8}},{"value":"/ [`set_broadcast`]: Socket::set_broadcast","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":53924,"byte_end":53968,"line_start":745,"line_end":745,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":237},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":54365,"byte_end":54378,"line_start":757,"line_end":757,"column_start":12,"column_end":25},"name":"set_broadcast","qualname":"<Socket>::set_broadcast","value":"fn set_broadcast(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the value of the `SO_BROADCAST` option for this socket.","sig":null,"attributes":[{"value":"/ Set the value of the `SO_BROADCAST` option for this socket.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":54189,"byte_end":54252,"line_start":753,"line_end":753,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":54257,"byte_end":54260,"line_start":754,"line_end":754,"column_start":5,"column_end":8}},{"value":"/ When enabled, this socket is allowed to send packets to a broadcast","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":54265,"byte_end":54336,"line_start":755,"line_end":755,"column_start":5,"column_end":76}},{"value":"/ address.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":54341,"byte_end":54353,"line_start":756,"line_end":756,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":238},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":54887,"byte_end":54897,"line_start":773,"line_end":773,"column_start":12,"column_end":22},"name":"take_error","qualname":"<Socket>::take_error","value":"fn take_error(&Self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Get the value of the `SO_ERROR` option on this socket.","sig":null,"attributes":[{"value":"/ Get the value of the `SO_ERROR` option on this socket.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":54634,"byte_end":54692,"line_start":768,"line_end":768,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":54697,"byte_end":54700,"line_start":769,"line_end":769,"column_start":5,"column_end":8}},{"value":"/ This will retrieve the stored error in the underlying socket, clearing","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":54705,"byte_end":54779,"line_start":770,"line_end":770,"column_start":5,"column_end":79}},{"value":"/ the field in the process. This can be useful for checking errors between","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":54784,"byte_end":54860,"line_start":771,"line_end":771,"column_start":5,"column_end":81}},{"value":"/ calls.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":54865,"byte_end":54875,"line_start":772,"line_end":772,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":239},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":55402,"byte_end":55411,"line_start":786,"line_end":786,"column_start":12,"column_end":21},"name":"keepalive","qualname":"<Socket>::keepalive","value":"fn keepalive(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Get the value of the `SO_KEEPALIVE` option on this socket.","sig":null,"attributes":[{"value":"/ Get the value of the `SO_KEEPALIVE` option on this socket.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":55192,"byte_end":55254,"line_start":781,"line_end":781,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":55259,"byte_end":55262,"line_start":782,"line_end":782,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_keepalive`].","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":55267,"byte_end":55333,"line_start":783,"line_end":783,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":55338,"byte_end":55341,"line_start":784,"line_end":784,"column_start":5,"column_end":8}},{"value":"/ [`set_keepalive`]: Socket::set_keepalive","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":55346,"byte_end":55390,"line_start":785,"line_end":785,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":241},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":55767,"byte_end":55780,"line_start":796,"line_end":796,"column_start":12,"column_end":25},"name":"set_keepalive","qualname":"<Socket>::set_keepalive","value":"fn set_keepalive(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set value for the `SO_KEEPALIVE` option on this socket.","sig":null,"attributes":[{"value":"/ Set value for the `SO_KEEPALIVE` option on this socket.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":55610,"byte_end":55669,"line_start":793,"line_end":793,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":55674,"byte_end":55677,"line_start":794,"line_end":794,"column_start":5,"column_end":8}},{"value":"/ Enable sending of keep-alive messages on connection-oriented sockets.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":55682,"byte_end":55755,"line_start":795,"line_end":795,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":242},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":56234,"byte_end":56240,"line_start":812,"line_end":812,"column_start":12,"column_end":18},"name":"linger","qualname":"<Socket>::linger","value":"fn linger(&Self) -> io::Result<Option<Duration>>","parent":null,"children":[],"decl_id":null,"docs":" Get the value of the `SO_LINGER` option on this socket.","sig":null,"attributes":[{"value":"/ Get the value of the `SO_LINGER` option on this socket.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":56036,"byte_end":56095,"line_start":807,"line_end":807,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":56100,"byte_end":56103,"line_start":808,"line_end":808,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_linger`].","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":56108,"byte_end":56171,"line_start":809,"line_end":809,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":56176,"byte_end":56179,"line_start":810,"line_end":810,"column_start":5,"column_end":8}},{"value":"/ [`set_linger`]: Socket::set_linger","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":56184,"byte_end":56222,"line_start":811,"line_end":811,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":243},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":57122,"byte_end":57132,"line_start":833,"line_end":833,"column_start":12,"column_end":22},"name":"set_linger","qualname":"<Socket>::set_linger","value":"fn set_linger(&Self, Option<Duration>) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set value for the `SO_LINGER` option on this socket.","sig":null,"attributes":[{"value":"/ Set value for the `SO_LINGER` option on this socket.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":56440,"byte_end":56496,"line_start":819,"line_end":819,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":56501,"byte_end":56504,"line_start":820,"line_end":820,"column_start":5,"column_end":8}},{"value":"/ If `linger` is not `None`, a close(2) or shutdown(2) will not return","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":56509,"byte_end":56581,"line_start":821,"line_end":821,"column_start":5,"column_end":77}},{"value":"/ until all queued messages for the socket have been successfully sent or","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":56586,"byte_end":56661,"line_start":822,"line_end":822,"column_start":5,"column_end":80}},{"value":"/ the linger timeout has been reached. Otherwise, the call returns","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":56666,"byte_end":56734,"line_start":823,"line_end":823,"column_start":5,"column_end":73}},{"value":"/ immediately and the closing is done in the background. When the socket","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":56739,"byte_end":56813,"line_start":824,"line_end":824,"column_start":5,"column_end":79}},{"value":"/ is closed as part of exit(2), it always lingers in the background.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":56818,"byte_end":56888,"line_start":825,"line_end":825,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":56893,"byte_end":56896,"line_start":826,"line_end":826,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":56901,"byte_end":56912,"line_start":827,"line_end":827,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":56917,"byte_end":56920,"line_start":828,"line_end":828,"column_start":5,"column_end":8}},{"value":"/ On most OSs the duration only has a precision of seconds and will be","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":56925,"byte_end":56997,"line_start":829,"line_end":829,"column_start":5,"column_end":77}},{"value":"/ silently truncated.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":57002,"byte_end":57025,"line_start":830,"line_end":830,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":57030,"byte_end":57033,"line_start":831,"line_end":831,"column_start":5,"column_end":8}},{"value":"/ On Apple platforms (e.g. macOS, iOS, etc) this uses `SO_LINGER_SEC`.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":57038,"byte_end":57110,"line_start":832,"line_end":832,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":244},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":57656,"byte_end":57674,"line_start":845,"line_end":845,"column_start":12,"column_end":30},"name":"out_of_band_inline","qualname":"<Socket>::out_of_band_inline","value":"fn out_of_band_inline(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Get value for the `SO_OOBINLINE` option on this socket.","sig":null,"attributes":[{"value":"/ Get value for the `SO_OOBINLINE` option on this socket.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":57325,"byte_end":57384,"line_start":838,"line_end":838,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":57389,"byte_end":57392,"line_start":839,"line_end":839,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_out_of_band_inline`].","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":57397,"byte_end":57472,"line_start":840,"line_end":840,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":57477,"byte_end":57480,"line_start":841,"line_end":841,"column_start":5,"column_end":8}},{"value":"/ [`set_out_of_band_inline`]: Socket::set_out_of_band_inline","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":57485,"byte_end":57547,"line_start":842,"line_end":842,"column_start":5,"column_end":67}},{"value":"cfg(not(target_os = \"redox\"))","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":57552,"byte_end":57584,"line_start":843,"line_end":843,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":246},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":58357,"byte_end":58379,"line_start":860,"line_end":860,"column_start":12,"column_end":34},"name":"set_out_of_band_inline","qualname":"<Socket>::set_out_of_band_inline","value":"fn set_out_of_band_inline(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set value for the `SO_OOBINLINE` option on this socket.","sig":null,"attributes":[{"value":"/ Set value for the `SO_OOBINLINE` option on this socket.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":57876,"byte_end":57935,"line_start":852,"line_end":852,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":57940,"byte_end":57943,"line_start":853,"line_end":853,"column_start":5,"column_end":8}},{"value":"/ If this option is enabled, out-of-band data is directly placed into the","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":57948,"byte_end":58023,"line_start":854,"line_end":854,"column_start":5,"column_end":80}},{"value":"/ receive data stream. Otherwise, out-of-band data is passed only when the","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":58028,"byte_end":58104,"line_start":855,"line_end":855,"column_start":5,"column_end":81}},{"value":"/ `MSG_OOB` flag is set during receiving. As per RFC6093, TCP sockets","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":58109,"byte_end":58180,"line_start":856,"line_end":856,"column_start":5,"column_end":76}},{"value":"/ using the Urgent mechanism are encouraged to set this flag.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":58185,"byte_end":58248,"line_start":857,"line_end":857,"column_start":5,"column_end":68}},{"value":"cfg(not(target_os = \"redox\"))","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":58253,"byte_end":58285,"line_start":858,"line_end":858,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":247},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":58862,"byte_end":58878,"line_start":876,"line_end":876,"column_start":12,"column_end":28},"name":"recv_buffer_size","qualname":"<Socket>::recv_buffer_size","value":"fn recv_buffer_size(&Self) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Get value for the `SO_RCVBUF` option on this socket.","sig":null,"attributes":[{"value":"/ Get value for the `SO_RCVBUF` option on this socket.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":58637,"byte_end":58693,"line_start":871,"line_end":871,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":58698,"byte_end":58701,"line_start":872,"line_end":872,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_recv_buffer_size`].","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":58706,"byte_end":58779,"line_start":873,"line_end":873,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":58784,"byte_end":58787,"line_start":874,"line_end":874,"column_start":5,"column_end":8}},{"value":"/ [`set_recv_buffer_size`]: Socket::set_recv_buffer_size","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":58792,"byte_end":58850,"line_start":875,"line_end":875,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":249},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":59248,"byte_end":59268,"line_start":887,"line_end":887,"column_start":12,"column_end":32},"name":"set_recv_buffer_size","qualname":"<Socket>::set_recv_buffer_size","value":"fn set_recv_buffer_size(&Self, usize) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set value for the `SO_RCVBUF` option on this socket.","sig":null,"attributes":[{"value":"/ Set value for the `SO_RCVBUF` option on this socket.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":59070,"byte_end":59126,"line_start":883,"line_end":883,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":59131,"byte_end":59134,"line_start":884,"line_end":884,"column_start":5,"column_end":8}},{"value":"/ Changes the size of the operating system's receive buffer associated","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":59139,"byte_end":59211,"line_start":885,"line_end":885,"column_start":5,"column_end":77}},{"value":"/ with the socket.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":59216,"byte_end":59236,"line_start":886,"line_end":886,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":250},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":59695,"byte_end":59707,"line_start":902,"line_end":902,"column_start":12,"column_end":24},"name":"read_timeout","qualname":"<Socket>::read_timeout","value":"fn read_timeout(&Self) -> io::Result<Option<Duration>>","parent":null,"children":[],"decl_id":null,"docs":" Get value for the `SO_RCVTIMEO` option on this socket.","sig":null,"attributes":[{"value":"/ Get value for the `SO_RCVTIMEO` option on this socket.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":59512,"byte_end":59570,"line_start":898,"line_end":898,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":59575,"byte_end":59578,"line_start":899,"line_end":899,"column_start":5,"column_end":8}},{"value":"/ If the returned timeout is `None`, then `read` and `recv` calls will","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":59583,"byte_end":59655,"line_start":900,"line_end":900,"column_start":5,"column_end":77}},{"value":"/ block indefinitely.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":59660,"byte_end":59683,"line_start":901,"line_end":901,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":251},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":60007,"byte_end":60023,"line_start":910,"line_end":910,"column_start":12,"column_end":28},"name":"set_read_timeout","qualname":"<Socket>::set_read_timeout","value":"fn set_read_timeout(&Self, Option<Duration>) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set value for the `SO_RCVTIMEO` option on this socket.","sig":null,"attributes":[{"value":"/ Set value for the `SO_RCVTIMEO` option on this socket.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":59835,"byte_end":59893,"line_start":906,"line_end":906,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":59898,"byte_end":59901,"line_start":907,"line_end":907,"column_start":5,"column_end":8}},{"value":"/ If `timeout` is `None`, then `read` and `recv` calls will block","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":59906,"byte_end":59973,"line_start":908,"line_end":908,"column_start":5,"column_end":72}},{"value":"/ indefinitely.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":59978,"byte_end":59995,"line_start":909,"line_end":909,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":252},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":60401,"byte_end":60414,"line_start":919,"line_end":919,"column_start":12,"column_end":25},"name":"reuse_address","qualname":"<Socket>::reuse_address","value":"fn reuse_address(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Get the value of the `SO_REUSEADDR` option on this socket.","sig":null,"attributes":[{"value":"/ Get the value of the `SO_REUSEADDR` option on this socket.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":60179,"byte_end":60241,"line_start":914,"line_end":914,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":60246,"byte_end":60249,"line_start":915,"line_end":915,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_reuse_address`].","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":60254,"byte_end":60324,"line_start":916,"line_end":916,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":60329,"byte_end":60332,"line_start":917,"line_end":917,"column_start":5,"column_end":8}},{"value":"/ [`set_reuse_address`]: Socket::set_reuse_address","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":60337,"byte_end":60389,"line_start":918,"line_end":918,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":254},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":60898,"byte_end":60915,"line_start":931,"line_end":931,"column_start":12,"column_end":29},"name":"set_reuse_address","qualname":"<Socket>::set_reuse_address","value":"fn set_reuse_address(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set value for the `SO_REUSEADDR` option on this socket.","sig":null,"attributes":[{"value":"/ Set value for the `SO_REUSEADDR` option on this socket.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":60606,"byte_end":60665,"line_start":926,"line_end":926,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":60670,"byte_end":60673,"line_start":927,"line_end":927,"column_start":5,"column_end":8}},{"value":"/ This indicates that futher calls to `bind` may allow reuse of local","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":60678,"byte_end":60749,"line_start":928,"line_end":928,"column_start":5,"column_end":76}},{"value":"/ addresses. For IPv4 sockets this means that a socket may bind even when","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":60754,"byte_end":60829,"line_start":929,"line_end":929,"column_start":5,"column_end":80}},{"value":"/ there's a socket already listening on this port.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":60834,"byte_end":60886,"line_start":930,"line_end":930,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":255},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":61391,"byte_end":61407,"line_start":947,"line_end":947,"column_start":12,"column_end":28},"name":"send_buffer_size","qualname":"<Socket>::send_buffer_size","value":"fn send_buffer_size(&Self) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Get the value of the `SO_SNDBUF` option on this socket.","sig":null,"attributes":[{"value":"/ Get the value of the `SO_SNDBUF` option on this socket.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":61163,"byte_end":61222,"line_start":942,"line_end":942,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":61227,"byte_end":61230,"line_start":943,"line_end":943,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_send_buffer_size`].","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":61235,"byte_end":61308,"line_start":944,"line_end":944,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":61313,"byte_end":61316,"line_start":945,"line_end":945,"column_start":5,"column_end":8}},{"value":"/ [`set_send_buffer_size`]: Socket::set_send_buffer_size","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":61321,"byte_end":61379,"line_start":946,"line_end":946,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":257},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":61774,"byte_end":61794,"line_start":958,"line_end":958,"column_start":12,"column_end":32},"name":"set_send_buffer_size","qualname":"<Socket>::set_send_buffer_size","value":"fn set_send_buffer_size(&Self, usize) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set value for the `SO_SNDBUF` option on this socket.","sig":null,"attributes":[{"value":"/ Set value for the `SO_SNDBUF` option on this socket.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":61599,"byte_end":61655,"line_start":954,"line_end":954,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":61660,"byte_end":61663,"line_start":955,"line_end":955,"column_start":5,"column_end":8}},{"value":"/ Changes the size of the operating system's send buffer associated with","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":61668,"byte_end":61742,"line_start":956,"line_end":956,"column_start":5,"column_end":79}},{"value":"/ the socket.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":61747,"byte_end":61762,"line_start":957,"line_end":957,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":258},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":62222,"byte_end":62235,"line_start":973,"line_end":973,"column_start":12,"column_end":25},"name":"write_timeout","qualname":"<Socket>::write_timeout","value":"fn write_timeout(&Self) -> io::Result<Option<Duration>>","parent":null,"children":[],"decl_id":null,"docs":" Get value for the `SO_SNDTIMEO` option on this socket.","sig":null,"attributes":[{"value":"/ Get value for the `SO_SNDTIMEO` option on this socket.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":62038,"byte_end":62096,"line_start":969,"line_end":969,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":62101,"byte_end":62104,"line_start":970,"line_end":970,"column_start":5,"column_end":8}},{"value":"/ If the returned timeout is `None`, then `write` and `send` calls will","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":62109,"byte_end":62182,"line_start":971,"line_end":971,"column_start":5,"column_end":78}},{"value":"/ block indefinitely.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":62187,"byte_end":62210,"line_start":972,"line_end":972,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":259},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":62536,"byte_end":62553,"line_start":981,"line_end":981,"column_start":12,"column_end":29},"name":"set_write_timeout","qualname":"<Socket>::set_write_timeout","value":"fn set_write_timeout(&Self, Option<Duration>) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set value for the `SO_SNDTIMEO` option on this socket.","sig":null,"attributes":[{"value":"/ Set value for the `SO_SNDTIMEO` option on this socket.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":62363,"byte_end":62421,"line_start":977,"line_end":977,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":62426,"byte_end":62429,"line_start":978,"line_end":978,"column_start":5,"column_end":8}},{"value":"/ If `timeout` is `None`, then `write` and `send` calls will block","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":62434,"byte_end":62502,"line_start":979,"line_end":979,"column_start":5,"column_end":73}},{"value":"/ indefinitely.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":62507,"byte_end":62524,"line_start":980,"line_end":980,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":263},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":63869,"byte_end":63884,"line_start":1020,"line_end":1020,"column_start":12,"column_end":27},"name":"header_included","qualname":"<Socket>::header_included","value":"fn header_included(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Get the value of the `IP_HDRINCL` option on this socket.","sig":null,"attributes":[{"value":"/ Get the value of the `IP_HDRINCL` option on this socket.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":63507,"byte_end":63567,"line_start":1013,"line_end":1013,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":63572,"byte_end":63575,"line_start":1014,"line_end":1014,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_header_included`].","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":63580,"byte_end":63652,"line_start":1015,"line_end":1015,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":63657,"byte_end":63660,"line_start":1016,"line_end":1016,"column_start":5,"column_end":8}},{"value":"/ [`set_header_included`]: Socket::set_header_included","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":63665,"byte_end":63721,"line_start":1017,"line_end":1017,"column_start":5,"column_end":61}},{"value":"cfg(all(feature = \"all\", not(target_os = \"redox\")))","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":63726,"byte_end":63780,"line_start":1018,"line_end":1018,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":265},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":64748,"byte_end":64767,"line_start":1040,"line_end":1040,"column_start":12,"column_end":31},"name":"set_header_included","qualname":"<Socket>::set_header_included","value":"fn set_header_included(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the value of the `IP_HDRINCL` option on this socket.","sig":null,"attributes":[{"value":"/ Set the value of the `IP_HDRINCL` option on this socket.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":64080,"byte_end":64140,"line_start":1027,"line_end":1027,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":64145,"byte_end":64148,"line_start":1028,"line_end":1028,"column_start":5,"column_end":8}},{"value":"/ If enabled, the user supplies an IP header in front of the user data.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":64153,"byte_end":64226,"line_start":1029,"line_end":1029,"column_start":5,"column_end":78}},{"value":"/ Valid only for [`SOCK_RAW`] sockets; see [raw(7)] for more information.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":64231,"byte_end":64306,"line_start":1030,"line_end":1030,"column_start":5,"column_end":80}},{"value":"/ When this flag is enabled, the values set by `IP_OPTIONS`, [`IP_TTL`],","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":64311,"byte_end":64385,"line_start":1031,"line_end":1031,"column_start":5,"column_end":79}},{"value":"/ and [`IP_TOS`] are ignored.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":64390,"byte_end":64421,"line_start":1032,"line_end":1032,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":64426,"byte_end":64429,"line_start":1033,"line_end":1033,"column_start":5,"column_end":8}},{"value":"/ [`SOCK_RAW`]: Type::RAW","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":64434,"byte_end":64461,"line_start":1034,"line_end":1034,"column_start":5,"column_end":32}},{"value":"/ [raw(7)]: https://man7.org/linux/man-pages/man7/raw.7.html","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":64466,"byte_end":64528,"line_start":1035,"line_end":1035,"column_start":5,"column_end":67}},{"value":"/ [`IP_TTL`]: Socket::set_ttl","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":64533,"byte_end":64564,"line_start":1036,"line_end":1036,"column_start":5,"column_end":36}},{"value":"/ [`IP_TOS`]: Socket::set_tos","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":64569,"byte_end":64600,"line_start":1037,"line_end":1037,"column_start":5,"column_end":36}},{"value":"cfg(all(feature = \"all\", not(target_os = \"redox\")))","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":64605,"byte_end":64659,"line_start":1038,"line_end":1038,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":266},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":65387,"byte_end":65401,"line_start":1058,"line_end":1058,"column_start":12,"column_end":26},"name":"ip_transparent","qualname":"<Socket>::ip_transparent","value":"fn ip_transparent(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Get the value of the `IP_TRANSPARENT` option on this socket.","sig":null,"attributes":[{"value":"/ Get the value of the `IP_TRANSPARENT` option on this socket.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":65019,"byte_end":65083,"line_start":1051,"line_end":1051,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":65088,"byte_end":65091,"line_start":1052,"line_end":1052,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ip_transparent`].","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":65096,"byte_end":65167,"line_start":1053,"line_end":1053,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":65172,"byte_end":65175,"line_start":1054,"line_end":1054,"column_start":5,"column_end":8}},{"value":"/ [`set_ip_transparent`]: Socket::set_ip_transparent","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":65180,"byte_end":65234,"line_start":1055,"line_end":1055,"column_start":5,"column_end":59}},{"value":"cfg(any(doc, all(feature = \"all\", target_os = \"linux\")))","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":65239,"byte_end":65298,"line_start":1056,"line_end":1056,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":268},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":66611,"byte_end":66629,"line_start":1082,"line_end":1082,"column_start":12,"column_end":30},"name":"set_ip_transparent","qualname":"<Socket>::set_ip_transparent","value":"fn set_ip_transparent(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the value of the `IP_TRANSPARENT` option on this socket.","sig":null,"attributes":[{"value":"/ Set the value of the `IP_TRANSPARENT` option on this socket.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":65608,"byte_end":65672,"line_start":1065,"line_end":1065,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":65677,"byte_end":65680,"line_start":1066,"line_end":1066,"column_start":5,"column_end":8}},{"value":"/ Setting this boolean option enables transparent proxying","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":65685,"byte_end":65745,"line_start":1067,"line_end":1067,"column_start":5,"column_end":65}},{"value":"/ on this socket.  This socket option allows the calling","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":65750,"byte_end":65808,"line_start":1068,"line_end":1068,"column_start":5,"column_end":63}},{"value":"/ application to bind to a nonlocal IP address and operate","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":65813,"byte_end":65873,"line_start":1069,"line_end":1069,"column_start":5,"column_end":65}},{"value":"/ both as a client and a server with the foreign address as","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":65878,"byte_end":65939,"line_start":1070,"line_end":1070,"column_start":5,"column_end":66}},{"value":"/ the local endpoint.  NOTE: this requires that routing be","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":65944,"byte_end":66004,"line_start":1071,"line_end":1071,"column_start":5,"column_end":65}},{"value":"/ set up in a way that packets going to the foreign address","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":66009,"byte_end":66070,"line_start":1072,"line_end":1072,"column_start":5,"column_end":66}},{"value":"/ are routed through the TProxy box (i.e., the system","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":66075,"byte_end":66130,"line_start":1073,"line_end":1073,"column_start":5,"column_end":60}},{"value":"/ hosting the application that employs the IP_TRANSPARENT","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":66135,"byte_end":66194,"line_start":1074,"line_end":1074,"column_start":5,"column_end":64}},{"value":"/ socket option).  Enabling this socket option requires","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":66199,"byte_end":66256,"line_start":1075,"line_end":1075,"column_start":5,"column_end":62}},{"value":"/ superuser privileges (the `CAP_NET_ADMIN` capability).","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":66261,"byte_end":66319,"line_start":1076,"line_end":1076,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":66324,"byte_end":66327,"line_start":1077,"line_end":1077,"column_start":5,"column_end":8}},{"value":"/ TProxy redirection with the iptables TPROXY target also","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":66332,"byte_end":66391,"line_start":1078,"line_end":1078,"column_start":5,"column_end":64}},{"value":"/ requires that this option be set on the redirected socket.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":66396,"byte_end":66458,"line_start":1079,"line_end":1079,"column_start":5,"column_end":67}},{"value":"cfg(any(doc, all(feature = \"all\", target_os = \"linux\")))","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":66463,"byte_end":66522,"line_start":1080,"line_end":1080,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":269},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":67358,"byte_end":67375,"line_start":1100,"line_end":1100,"column_start":12,"column_end":29},"name":"join_multicast_v4","qualname":"<Socket>::join_multicast_v4","value":"fn join_multicast_v4(&Self, &Ipv4Addr, &Ipv4Addr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Join a multicast group using `IP_ADD_MEMBERSHIP` option on this socket.","sig":null,"attributes":[{"value":"/ Join a multicast group using `IP_ADD_MEMBERSHIP` option on this socket.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":66892,"byte_end":66967,"line_start":1093,"line_end":1093,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":66972,"byte_end":66975,"line_start":1094,"line_end":1094,"column_start":5,"column_end":8}},{"value":"/ This function specifies a new multicast group for this socket to join.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":66980,"byte_end":67054,"line_start":1095,"line_end":1095,"column_start":5,"column_end":79}},{"value":"/ The address must be a valid multicast address, and `interface` is the","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":67059,"byte_end":67132,"line_start":1096,"line_end":1096,"column_start":5,"column_end":78}},{"value":"/ address of the local interface with which the system should join the","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":67137,"byte_end":67209,"line_start":1097,"line_end":1097,"column_start":5,"column_end":77}},{"value":"/ multicast group. If it's [`Ipv4Addr::UNSPECIFIED`] (`INADDR_ANY`) then","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":67214,"byte_end":67288,"line_start":1098,"line_end":1098,"column_start":5,"column_end":79}},{"value":"/ an appropriate interface is chosen by the system.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":67293,"byte_end":67346,"line_start":1099,"line_end":1099,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":270},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":67941,"byte_end":67959,"line_start":1113,"line_end":1113,"column_start":12,"column_end":30},"name":"leave_multicast_v4","qualname":"<Socket>::leave_multicast_v4","value":"fn leave_multicast_v4(&Self, &Ipv4Addr, &Ipv4Addr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Leave a multicast group using `IP_DROP_MEMBERSHIP` option on this socket.","sig":null,"attributes":[{"value":"/ Leave a multicast group using `IP_DROP_MEMBERSHIP` option on this socket.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":67704,"byte_end":67781,"line_start":1108,"line_end":1108,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":67786,"byte_end":67789,"line_start":1109,"line_end":1109,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`join_multicast_v4`].","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":67794,"byte_end":67864,"line_start":1110,"line_end":1110,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":67869,"byte_end":67872,"line_start":1111,"line_end":1111,"column_start":5,"column_end":8}},{"value":"/ [`join_multicast_v4`]: Socket::join_multicast_v4","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":67877,"byte_end":67929,"line_start":1112,"line_end":1112,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":271},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":68976,"byte_end":68995,"line_start":1142,"line_end":1142,"column_start":12,"column_end":31},"name":"join_multicast_v4_n","qualname":"<Socket>::join_multicast_v4_n","value":"fn join_multicast_v4_n(&Self, &Ipv4Addr, &InterfaceIndexOrAddress)\n-> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Join a multicast group using `IP_ADD_MEMBERSHIP` option on this socket.","sig":null,"attributes":[{"value":"/ Join a multicast group using `IP_ADD_MEMBERSHIP` option on this socket.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":68388,"byte_end":68463,"line_start":1128,"line_end":1128,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":68468,"byte_end":68471,"line_start":1129,"line_end":1129,"column_start":5,"column_end":8}},{"value":"/ This function specifies a new multicast group for this socket to join.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":68476,"byte_end":68550,"line_start":1130,"line_end":1130,"column_start":5,"column_end":79}},{"value":"/ The address must be a valid multicast address, and `interface` specifies","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":68555,"byte_end":68631,"line_start":1131,"line_end":1131,"column_start":5,"column_end":81}},{"value":"/ the local interface with which the system should join the multicast","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":68636,"byte_end":68707,"line_start":1132,"line_end":1132,"column_start":5,"column_end":76}},{"value":"/ group. See [`InterfaceIndexOrAddress`].","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":68712,"byte_end":68755,"line_start":1133,"line_end":1133,"column_start":5,"column_end":48}},{"value":"cfg(not(any(target_os = \"haiku\", target_os = \"illumos\", target_os =\n\"netbsd\", target_os = \"openbsd\", target_os = \"redox\", target_os =\n\"solaris\",)))","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":68760,"byte_end":68964,"line_start":1134,"line_end":1141,"column_start":5,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":272},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":69825,"byte_end":69845,"line_start":1171,"line_end":1171,"column_start":12,"column_end":32},"name":"leave_multicast_v4_n","qualname":"<Socket>::leave_multicast_v4_n","value":"fn leave_multicast_v4_n(&Self, &Ipv4Addr, &InterfaceIndexOrAddress)\n-> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Leave a multicast group using `IP_DROP_MEMBERSHIP` option on this socket.","sig":null,"attributes":[{"value":"/ Leave a multicast group using `IP_DROP_MEMBERSHIP` option on this socket.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":69373,"byte_end":69450,"line_start":1158,"line_end":1158,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":69455,"byte_end":69458,"line_start":1159,"line_end":1159,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`join_multicast_v4_n`].","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":69463,"byte_end":69535,"line_start":1160,"line_end":1160,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":69540,"byte_end":69543,"line_start":1161,"line_end":1161,"column_start":5,"column_end":8}},{"value":"/ [`join_multicast_v4_n`]: Socket::join_multicast_v4_n","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":69548,"byte_end":69604,"line_start":1162,"line_end":1162,"column_start":5,"column_end":61}},{"value":"cfg(not(any(target_os = \"haiku\", target_os = \"illumos\", target_os =\n\"netbsd\", target_os = \"openbsd\", target_os = \"redox\", target_os =\n\"solaris\",)))","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":69609,"byte_end":69813,"line_start":1163,"line_end":1170,"column_start":5,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":273},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":70895,"byte_end":70906,"line_start":1200,"line_end":1200,"column_start":12,"column_end":23},"name":"join_ssm_v4","qualname":"<Socket>::join_ssm_v4","value":"fn join_ssm_v4(&Self, &Ipv4Addr, &Ipv4Addr, &Ipv4Addr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Join a multicast SSM channel using `IP_ADD_SOURCE_MEMBERSHIP` option on this socket.","sig":null,"attributes":[{"value":"/ Join a multicast SSM channel using `IP_ADD_SOURCE_MEMBERSHIP` option on this socket.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":70224,"byte_end":70312,"line_start":1187,"line_end":1187,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":70317,"byte_end":70320,"line_start":1188,"line_end":1188,"column_start":5,"column_end":8}},{"value":"/ This function specifies a new multicast channel for this socket to join.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":70325,"byte_end":70401,"line_start":1189,"line_end":1189,"column_start":5,"column_end":81}},{"value":"/ The group must be a valid SSM group address, the source must be the address of the sender","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":70406,"byte_end":70499,"line_start":1190,"line_end":1190,"column_start":5,"column_end":98}},{"value":"/ and `interface` is the address of the local interface with which the system should join the","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":70504,"byte_end":70599,"line_start":1191,"line_end":1191,"column_start":5,"column_end":100}},{"value":"/ multicast group. If it's [`Ipv4Addr::UNSPECIFIED`] (`INADDR_ANY`) then","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":70604,"byte_end":70678,"line_start":1192,"line_end":1192,"column_start":5,"column_end":79}},{"value":"/ an appropriate interface is chosen by the system.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":70683,"byte_end":70736,"line_start":1193,"line_end":1193,"column_start":5,"column_end":58}},{"value":"cfg(not(any(target_os = \"haiku\", target_os = \"netbsd\", target_os = \"redox\",\ntarget_os = \"fuchsia\",)))","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":70741,"byte_end":70883,"line_start":1194,"line_end":1199,"column_start":5,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":274},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":71825,"byte_end":71837,"line_start":1232,"line_end":1232,"column_start":12,"column_end":24},"name":"leave_ssm_v4","qualname":"<Socket>::leave_ssm_v4","value":"fn leave_ssm_v4(&Self, &Ipv4Addr, &Ipv4Addr, &Ipv4Addr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Leave a multicast group using `IP_DROP_SOURCE_MEMBERSHIP` option on this socket.","sig":null,"attributes":[{"value":"/ Leave a multicast group using `IP_DROP_SOURCE_MEMBERSHIP` option on this socket.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":71452,"byte_end":71536,"line_start":1221,"line_end":1221,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":71541,"byte_end":71544,"line_start":1222,"line_end":1222,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`join_ssm_v4`].","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":71549,"byte_end":71613,"line_start":1223,"line_end":1223,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":71618,"byte_end":71621,"line_start":1224,"line_end":1224,"column_start":5,"column_end":8}},{"value":"/ [`join_ssm_v4`]: Socket::join_ssm_v4","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":71626,"byte_end":71666,"line_start":1225,"line_end":1225,"column_start":5,"column_end":45}},{"value":"cfg(not(any(target_os = \"haiku\", target_os = \"netbsd\", target_os = \"redox\",\ntarget_os = \"fuchsia\",)))","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":71671,"byte_end":71813,"line_start":1226,"line_end":1231,"column_start":5,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":275},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":72616,"byte_end":72631,"line_start":1258,"line_end":1258,"column_start":12,"column_end":27},"name":"multicast_if_v4","qualname":"<Socket>::multicast_if_v4","value":"fn multicast_if_v4(&Self) -> io::Result<Ipv4Addr>","parent":null,"children":[],"decl_id":null,"docs":" Get the value of the `IP_MULTICAST_IF` option for this socket.","sig":null,"attributes":[{"value":"/ Get the value of the `IP_MULTICAST_IF` option for this socket.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":72384,"byte_end":72450,"line_start":1253,"line_end":1253,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":72455,"byte_end":72458,"line_start":1254,"line_end":1254,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_multicast_if_v4`].","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":72463,"byte_end":72535,"line_start":1255,"line_end":1255,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":72540,"byte_end":72543,"line_start":1256,"line_end":1256,"column_start":5,"column_end":8}},{"value":"/ [`set_multicast_if_v4`]: Socket::set_multicast_if_v4","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":72548,"byte_end":72604,"line_start":1257,"line_end":1257,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":276},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":72959,"byte_end":72978,"line_start":1267,"line_end":1267,"column_start":12,"column_end":31},"name":"set_multicast_if_v4","qualname":"<Socket>::set_multicast_if_v4","value":"fn set_multicast_if_v4(&Self, &Ipv4Addr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the value of the `IP_MULTICAST_IF` option for this socket.","sig":null,"attributes":[{"value":"/ Set the value of the `IP_MULTICAST_IF` option for this socket.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":72803,"byte_end":72869,"line_start":1264,"line_end":1264,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":72874,"byte_end":72877,"line_start":1265,"line_end":1265,"column_start":5,"column_end":8}},{"value":"/ Specifies the interface to use for routing multicast packets.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":72882,"byte_end":72947,"line_start":1266,"line_end":1266,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":277},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":73525,"byte_end":73542,"line_start":1284,"line_end":1284,"column_start":12,"column_end":29},"name":"multicast_loop_v4","qualname":"<Socket>::multicast_loop_v4","value":"fn multicast_loop_v4(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Get the value of the `IP_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Get the value of the `IP_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":73285,"byte_end":73353,"line_start":1279,"line_end":1279,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":73358,"byte_end":73361,"line_start":1280,"line_end":1280,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_multicast_loop_v4`].","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":73366,"byte_end":73440,"line_start":1281,"line_end":1281,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":73445,"byte_end":73448,"line_start":1282,"line_end":1282,"column_start":5,"column_end":8}},{"value":"/ [`set_multicast_loop_v4`]: Socket::set_multicast_loop_v4","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":73453,"byte_end":73513,"line_start":1283,"line_end":1283,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":279},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":73974,"byte_end":73995,"line_start":1295,"line_end":1295,"column_start":12,"column_end":33},"name":"set_multicast_loop_v4","qualname":"<Socket>::set_multicast_loop_v4","value":"fn set_multicast_loop_v4(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the value of the `IP_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Set the value of the `IP_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":73743,"byte_end":73811,"line_start":1291,"line_end":1291,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":73816,"byte_end":73819,"line_start":1292,"line_end":1292,"column_start":5,"column_end":8}},{"value":"/ If enabled, multicast packets will be looped back to the local socket.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":73824,"byte_end":73898,"line_start":1293,"line_end":1293,"column_start":5,"column_end":79}},{"value":"/ Note that this may not have any affect on IPv6 sockets.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":73903,"byte_end":73962,"line_start":1294,"line_end":1294,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":280},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":74488,"byte_end":74504,"line_start":1311,"line_end":1311,"column_start":12,"column_end":28},"name":"multicast_ttl_v4","qualname":"<Socket>::multicast_ttl_v4","value":"fn multicast_ttl_v4(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Get the value of the `IP_MULTICAST_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Get the value of the `IP_MULTICAST_TTL` option for this socket.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":74252,"byte_end":74319,"line_start":1306,"line_end":1306,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":74324,"byte_end":74327,"line_start":1307,"line_end":1307,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_multicast_ttl_v4`].","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":74332,"byte_end":74405,"line_start":1308,"line_end":1308,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":74410,"byte_end":74413,"line_start":1309,"line_end":1309,"column_start":5,"column_end":8}},{"value":"/ [`set_multicast_ttl_v4`]: Socket::set_multicast_ttl_v4","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":74418,"byte_end":74476,"line_start":1310,"line_end":1310,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":282},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":75077,"byte_end":75097,"line_start":1325,"line_end":1325,"column_start":12,"column_end":32},"name":"set_multicast_ttl_v4","qualname":"<Socket>::set_multicast_ttl_v4","value":"fn set_multicast_ttl_v4(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the value of the `IP_MULTICAST_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Set the value of the `IP_MULTICAST_TTL` option for this socket.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":74697,"byte_end":74764,"line_start":1318,"line_end":1318,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":74769,"byte_end":74772,"line_start":1319,"line_end":1319,"column_start":5,"column_end":8}},{"value":"/ Indicates the time-to-live value of outgoing multicast packets for","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":74777,"byte_end":74847,"line_start":1320,"line_end":1320,"column_start":5,"column_end":75}},{"value":"/ this socket. The default value is 1 which means that multicast packets","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":74852,"byte_end":74926,"line_start":1321,"line_end":1321,"column_start":5,"column_end":79}},{"value":"/ don't leave the local network unless explicitly requested.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":74931,"byte_end":74993,"line_start":1322,"line_end":1322,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":74998,"byte_end":75001,"line_start":1323,"line_end":1323,"column_start":5,"column_end":8}},{"value":"/ Note that this may not have any affect on IPv6 sockets.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":75006,"byte_end":75065,"line_start":1324,"line_end":1324,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":283},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":75531,"byte_end":75534,"line_start":1341,"line_end":1341,"column_start":12,"column_end":15},"name":"ttl","qualname":"<Socket>::ttl","value":"fn ttl(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Get the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Get the value of the `IP_TTL` option for this socket.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":75344,"byte_end":75401,"line_start":1336,"line_end":1336,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":75406,"byte_end":75409,"line_start":1337,"line_end":1337,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`].","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":75414,"byte_end":75474,"line_start":1338,"line_end":1338,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":75479,"byte_end":75482,"line_start":1339,"line_end":1339,"column_start":5,"column_end":8}},{"value":"/ [`set_ttl`]: Socket::set_ttl","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":75487,"byte_end":75519,"line_start":1340,"line_end":1340,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":285},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":75884,"byte_end":75891,"line_start":1351,"line_end":1351,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<Socket>::set_ttl","value":"fn set_ttl(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Set the value of the `IP_TTL` option for this socket.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":75700,"byte_end":75757,"line_start":1347,"line_end":1347,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":75762,"byte_end":75765,"line_start":1348,"line_end":1348,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":75770,"byte_end":75846,"line_start":1349,"line_end":1349,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":75851,"byte_end":75872,"line_start":1350,"line_end":1350,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":286},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":76540,"byte_end":76547,"line_start":1368,"line_end":1368,"column_start":12,"column_end":19},"name":"set_tos","qualname":"<Socket>::set_tos","value":"fn set_tos(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the value of the `IP_TOS` option for this socket.","sig":null,"attributes":[{"value":"/ Set the value of the `IP_TOS` option for this socket.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":76029,"byte_end":76086,"line_start":1355,"line_end":1355,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":76091,"byte_end":76094,"line_start":1356,"line_end":1356,"column_start":5,"column_end":8}},{"value":"/ This value sets the type-of-service field that is used in every packet","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":76099,"byte_end":76173,"line_start":1357,"line_end":1357,"column_start":5,"column_end":79}},{"value":"/ sent from this socket.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":76178,"byte_end":76204,"line_start":1358,"line_end":1358,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":76209,"byte_end":76212,"line_start":1359,"line_end":1359,"column_start":5,"column_end":8}},{"value":"/ NOTE: <https://docs.microsoft.com/en-us/windows/win32/winsock/ipproto-ip-socket-options>","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":76217,"byte_end":76309,"line_start":1360,"line_end":1360,"column_start":5,"column_end":97}},{"value":"/ documents that not all versions of windows support `IP_TOS`.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":76314,"byte_end":76378,"line_start":1361,"line_end":1361,"column_start":5,"column_end":69}},{"value":"cfg(not(any(target_os = \"fuchsia\", target_os = \"redox\", target_os =\n\"solaris\", target_os = \"illumos\",)))","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":76383,"byte_end":76528,"line_start":1362,"line_end":1367,"column_start":5,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":287},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":77196,"byte_end":77199,"line_start":1386,"line_end":1386,"column_start":12,"column_end":15},"name":"tos","qualname":"<Socket>::tos","value":"fn tos(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Get the value of the `IP_TOS` option for this socket.","sig":null,"attributes":[{"value":"/ Get the value of the `IP_TOS` option for this socket.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":76685,"byte_end":76742,"line_start":1372,"line_end":1372,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":76747,"byte_end":76750,"line_start":1373,"line_end":1373,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_tos`].","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":76755,"byte_end":76815,"line_start":1374,"line_end":1374,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":76820,"byte_end":76823,"line_start":1375,"line_end":1375,"column_start":5,"column_end":8}},{"value":"/ NOTE: <https://docs.microsoft.com/en-us/windows/win32/winsock/ipproto-ip-socket-options>","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":76828,"byte_end":76920,"line_start":1376,"line_end":1376,"column_start":5,"column_end":97}},{"value":"/ documents that not all versions of windows support `IP_TOS`.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":76925,"byte_end":76989,"line_start":1377,"line_end":1377,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":76994,"byte_end":76997,"line_start":1378,"line_end":1378,"column_start":5,"column_end":8}},{"value":"/ [`set_tos`]: Socket::set_tos","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":77002,"byte_end":77034,"line_start":1379,"line_end":1379,"column_start":5,"column_end":37}},{"value":"cfg(not(any(target_os = \"fuchsia\", target_os = \"redox\", target_os =\n\"solaris\", target_os = \"illumos\",)))","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":77039,"byte_end":77184,"line_start":1380,"line_end":1385,"column_start":5,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":289},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":77880,"byte_end":77892,"line_start":1406,"line_end":1406,"column_start":12,"column_end":24},"name":"set_recv_tos","qualname":"<Socket>::set_recv_tos","value":"fn set_recv_tos(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the value of the `IP_RECVTOS` option for this socket.","sig":null,"attributes":[{"value":"/ Set the value of the `IP_RECVTOS` option for this socket.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":77365,"byte_end":77426,"line_start":1392,"line_end":1392,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":77431,"byte_end":77434,"line_start":1393,"line_end":1393,"column_start":5,"column_end":8}},{"value":"/ If enabled, the IP_TOS ancillary message is passed with","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":77439,"byte_end":77498,"line_start":1394,"line_end":1394,"column_start":5,"column_end":64}},{"value":"/ incoming packets. It contains a byte which specifies the","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":77503,"byte_end":77563,"line_start":1395,"line_end":1395,"column_start":5,"column_end":65}},{"value":"/ Type of Service/Precedence field of the packet header.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":77568,"byte_end":77626,"line_start":1396,"line_end":1396,"column_start":5,"column_end":63}},{"value":"cfg(not(any(target_os = \"fuchsia\", target_os = \"illumos\", target_os =\n\"netbsd\", target_os = \"openbsd\", target_os = \"redox\", target_os = \"solaris\",\ntarget_os = \"windows\",)))","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":77631,"byte_end":77868,"line_start":1397,"line_end":1405,"column_start":5,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":290},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":78646,"byte_end":78654,"line_start":1433,"line_end":1433,"column_start":12,"column_end":20},"name":"recv_tos","qualname":"<Socket>::recv_tos","value":"fn recv_tos(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Get the value of the `IP_RECVTOS` option for this socket.","sig":null,"attributes":[{"value":"/ Get the value of the `IP_RECVTOS` option for this socket.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":78198,"byte_end":78259,"line_start":1419,"line_end":1419,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":78264,"byte_end":78267,"line_start":1420,"line_end":1420,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_recv_tos`].","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":78272,"byte_end":78337,"line_start":1421,"line_end":1421,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":78342,"byte_end":78345,"line_start":1422,"line_end":1422,"column_start":5,"column_end":8}},{"value":"/ [`set_recv_tos`]: Socket::set_recv_tos","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":78350,"byte_end":78392,"line_start":1423,"line_end":1423,"column_start":5,"column_end":47}},{"value":"cfg(not(any(target_os = \"fuchsia\", target_os = \"illumos\", target_os =\n\"netbsd\", target_os = \"openbsd\", target_os = \"redox\", target_os = \"solaris\",\ntarget_os = \"windows\",)))","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":78397,"byte_end":78634,"line_start":1424,"line_end":1432,"column_start":5,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":293},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":79568,"byte_end":79585,"line_start":1454,"line_end":1454,"column_start":12,"column_end":29},"name":"join_multicast_v6","qualname":"<Socket>::join_multicast_v6","value":"fn join_multicast_v6(&Self, &Ipv6Addr, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Join a multicast group using `IPV6_ADD_MEMBERSHIP` option on this socket.","sig":null,"attributes":[{"value":"/ Join a multicast group using `IPV6_ADD_MEMBERSHIP` option on this socket.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":79171,"byte_end":79248,"line_start":1447,"line_end":1447,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":79253,"byte_end":79256,"line_start":1448,"line_end":1448,"column_start":5,"column_end":8}},{"value":"/ Some OSs use `IPV6_JOIN_GROUP` for this option.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":79261,"byte_end":79312,"line_start":1449,"line_end":1449,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":79317,"byte_end":79320,"line_start":1450,"line_end":1450,"column_start":5,"column_end":8}},{"value":"/ This function specifies a new multicast group for this socket to join.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":79325,"byte_end":79399,"line_start":1451,"line_end":1451,"column_start":5,"column_end":79}},{"value":"/ The address must be a valid multicast address, and `interface` is the","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":79404,"byte_end":79477,"line_start":1452,"line_end":1452,"column_start":5,"column_end":78}},{"value":"/ index of the interface to join/leave (or 0 to indicate any interface).","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":79482,"byte_end":79556,"line_start":1453,"line_end":1453,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":294},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":80376,"byte_end":80394,"line_start":1477,"line_end":1477,"column_start":12,"column_end":30},"name":"leave_multicast_v6","qualname":"<Socket>::leave_multicast_v6","value":"fn leave_multicast_v6(&Self, &Ipv6Addr, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Leave a multicast group using `IPV6_DROP_MEMBERSHIP` option on this socket.","sig":null,"attributes":[{"value":"/ Leave a multicast group using `IPV6_DROP_MEMBERSHIP` option on this socket.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":80072,"byte_end":80151,"line_start":1470,"line_end":1470,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":80156,"byte_end":80159,"line_start":1471,"line_end":1471,"column_start":5,"column_end":8}},{"value":"/ Some OSs use `IPV6_LEAVE_GROUP` for this option.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":80164,"byte_end":80216,"line_start":1472,"line_end":1472,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":80221,"byte_end":80224,"line_start":1473,"line_end":1473,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`join_multicast_v6`].","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":80229,"byte_end":80299,"line_start":1474,"line_end":1474,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":80304,"byte_end":80307,"line_start":1475,"line_end":1475,"column_start":5,"column_end":8}},{"value":"/ [`join_multicast_v6`]: Socket::join_multicast_v6","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":80312,"byte_end":80364,"line_start":1476,"line_end":1476,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":295},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":81123,"byte_end":81140,"line_start":1498,"line_end":1498,"column_start":12,"column_end":29},"name":"multicast_hops_v6","qualname":"<Socket>::multicast_hops_v6","value":"fn multicast_hops_v6(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Get the value of the `IPV6_MULTICAST_HOPS` option for this socket","sig":null,"attributes":[{"value":"/ Get the value of the `IPV6_MULTICAST_HOPS` option for this socket","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":80882,"byte_end":80951,"line_start":1493,"line_end":1493,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":80956,"byte_end":80959,"line_start":1494,"line_end":1494,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_multicast_hops_v6`].","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":80964,"byte_end":81038,"line_start":1495,"line_end":1495,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":81043,"byte_end":81046,"line_start":1496,"line_end":1496,"column_start":5,"column_end":8}},{"value":"/ [`set_multicast_hops_v6`]: Socket::set_multicast_hops_v6","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":81051,"byte_end":81111,"line_start":1497,"line_end":1497,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":297},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":81652,"byte_end":81673,"line_start":1510,"line_end":1510,"column_start":12,"column_end":33},"name":"set_multicast_hops_v6","qualname":"<Socket>::set_multicast_hops_v6","value":"fn set_multicast_hops_v6(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the value of the `IPV6_MULTICAST_HOPS` option for this socket","sig":null,"attributes":[{"value":"/ Set the value of the `IPV6_MULTICAST_HOPS` option for this socket","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":81340,"byte_end":81409,"line_start":1505,"line_end":1505,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":81414,"byte_end":81417,"line_start":1506,"line_end":1506,"column_start":5,"column_end":8}},{"value":"/ Indicates the number of \"routers\" multicast packets will transit for","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":81422,"byte_end":81494,"line_start":1507,"line_end":1507,"column_start":5,"column_end":77}},{"value":"/ this socket. The default value is 1 which means that multicast packets","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":81499,"byte_end":81573,"line_start":1508,"line_end":1508,"column_start":5,"column_end":79}},{"value":"/ don't leave the local network unless explicitly requested.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":81578,"byte_end":81640,"line_start":1509,"line_end":1509,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":298},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":82161,"byte_end":82176,"line_start":1526,"line_end":1526,"column_start":12,"column_end":27},"name":"multicast_if_v6","qualname":"<Socket>::multicast_if_v6","value":"fn multicast_if_v6(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Get the value of the `IPV6_MULTICAST_IF` option for this socket.","sig":null,"attributes":[{"value":"/ Get the value of the `IPV6_MULTICAST_IF` option for this socket.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":81927,"byte_end":81995,"line_start":1521,"line_end":1521,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":82000,"byte_end":82003,"line_start":1522,"line_end":1522,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_multicast_if_v6`].","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":82008,"byte_end":82080,"line_start":1523,"line_end":1523,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":82085,"byte_end":82088,"line_start":1524,"line_end":1524,"column_start":5,"column_end":8}},{"value":"/ [`set_multicast_if_v6`]: Socket::set_multicast_if_v6","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":82093,"byte_end":82149,"line_start":1525,"line_end":1525,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":300},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":82659,"byte_end":82678,"line_start":1538,"line_end":1538,"column_start":12,"column_end":31},"name":"set_multicast_if_v6","qualname":"<Socket>::set_multicast_if_v6","value":"fn set_multicast_if_v6(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the value of the `IPV6_MULTICAST_IF` option for this socket.","sig":null,"attributes":[{"value":"/ Set the value of the `IPV6_MULTICAST_IF` option for this socket.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":82384,"byte_end":82452,"line_start":1533,"line_end":1533,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":82457,"byte_end":82460,"line_start":1534,"line_end":1534,"column_start":5,"column_end":8}},{"value":"/ Specifies the interface to use for routing multicast packets. Unlike","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":82465,"byte_end":82537,"line_start":1535,"line_end":1535,"column_start":5,"column_end":77}},{"value":"/ ipv4, this is generally required in ipv6 contexts where network routing","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":82542,"byte_end":82617,"line_start":1536,"line_end":1536,"column_start":5,"column_end":80}},{"value":"/ prefixes may overlap.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":82622,"byte_end":82647,"line_start":1537,"line_end":1537,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":301},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":83182,"byte_end":83199,"line_start":1554,"line_end":1554,"column_start":12,"column_end":29},"name":"multicast_loop_v6","qualname":"<Socket>::multicast_loop_v6","value":"fn multicast_loop_v6(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Get the value of the `IPV6_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Get the value of the `IPV6_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":82940,"byte_end":83010,"line_start":1549,"line_end":1549,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":83015,"byte_end":83018,"line_start":1550,"line_end":1550,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_multicast_loop_v6`].","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":83023,"byte_end":83097,"line_start":1551,"line_end":1551,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":83102,"byte_end":83105,"line_start":1552,"line_end":1552,"column_start":5,"column_end":8}},{"value":"/ [`set_multicast_loop_v6`]: Socket::set_multicast_loop_v6","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":83110,"byte_end":83170,"line_start":1553,"line_end":1553,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":303},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":83639,"byte_end":83660,"line_start":1565,"line_end":1565,"column_start":12,"column_end":33},"name":"set_multicast_loop_v6","qualname":"<Socket>::set_multicast_loop_v6","value":"fn set_multicast_loop_v6(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the value of the `IPV6_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Set the value of the `IPV6_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":83404,"byte_end":83474,"line_start":1561,"line_end":1561,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":83479,"byte_end":83482,"line_start":1562,"line_end":1562,"column_start":5,"column_end":8}},{"value":"/ Controls whether this socket sees the multicast packets it sends itself.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":83487,"byte_end":83563,"line_start":1563,"line_end":1563,"column_start":5,"column_end":81}},{"value":"/ Note that this may not have any affect on IPv4 sockets.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":83568,"byte_end":83627,"line_start":1564,"line_end":1564,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":304},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":84066,"byte_end":84081,"line_start":1579,"line_end":1579,"column_start":12,"column_end":27},"name":"unicast_hops_v6","qualname":"<Socket>::unicast_hops_v6","value":"fn unicast_hops_v6(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Get the value of the `IPV6_UNICAST_HOPS` option for this socket.","sig":null,"attributes":[{"value":"/ Get the value of the `IPV6_UNICAST_HOPS` option for this socket.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":83921,"byte_end":83989,"line_start":1576,"line_end":1576,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":83994,"byte_end":83997,"line_start":1577,"line_end":1577,"column_start":5,"column_end":8}},{"value":"/ Specifies the hop limit for ipv6 unicast packets","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":84002,"byte_end":84054,"line_start":1578,"line_end":1578,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":306},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":84424,"byte_end":84443,"line_start":1589,"line_end":1589,"column_start":12,"column_end":31},"name":"set_unicast_hops_v6","qualname":"<Socket>::set_unicast_hops_v6","value":"fn set_unicast_hops_v6(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the value for the `IPV6_UNICAST_HOPS` option on this socket.","sig":null,"attributes":[{"value":"/ Set the value for the `IPV6_UNICAST_HOPS` option on this socket.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":84279,"byte_end":84347,"line_start":1586,"line_end":1586,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":84352,"byte_end":84355,"line_start":1587,"line_end":1587,"column_start":5,"column_end":8}},{"value":"/ Specifies the hop limit for ipv6 unicast packets","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":84360,"byte_end":84412,"line_start":1588,"line_end":1588,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":307},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":84899,"byte_end":84906,"line_start":1605,"line_end":1605,"column_start":12,"column_end":19},"name":"only_v6","qualname":"<Socket>::only_v6","value":"fn only_v6(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Get the value of the `IPV6_V6ONLY` option for this socket.","sig":null,"attributes":[{"value":"/ Get the value of the `IPV6_V6ONLY` option for this socket.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":84695,"byte_end":84757,"line_start":1600,"line_end":1600,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":84762,"byte_end":84765,"line_start":1601,"line_end":1601,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_only_v6`].","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":84770,"byte_end":84834,"line_start":1602,"line_end":1602,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":84839,"byte_end":84842,"line_start":1603,"line_end":1603,"column_start":5,"column_end":8}},{"value":"/ [`set_only_v6`]: Socket::set_only_v6","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":84847,"byte_end":84887,"line_start":1604,"line_end":1604,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":309},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":85533,"byte_end":85544,"line_start":1620,"line_end":1620,"column_start":12,"column_end":23},"name":"set_only_v6","qualname":"<Socket>::set_only_v6","value":"fn set_only_v6(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the value for the `IPV6_V6ONLY` option on this socket.","sig":null,"attributes":[{"value":"/ Set the value for the `IPV6_V6ONLY` option on this socket.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":85103,"byte_end":85165,"line_start":1612,"line_end":1612,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":85170,"byte_end":85173,"line_start":1613,"line_end":1613,"column_start":5,"column_end":8}},{"value":"/ If this is set to `true` then the socket is restricted to sending and","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":85178,"byte_end":85251,"line_start":1614,"line_end":1614,"column_start":5,"column_end":78}},{"value":"/ receiving IPv6 packets only. In this case two IPv4 and IPv6 applications","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":85256,"byte_end":85332,"line_start":1615,"line_end":1615,"column_start":5,"column_end":81}},{"value":"/ can bind the same port at the same time.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":85337,"byte_end":85381,"line_start":1616,"line_end":1616,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":85386,"byte_end":85389,"line_start":1617,"line_end":1617,"column_start":5,"column_end":8}},{"value":"/ If this is set to `false` then the socket can be used to send and","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":85394,"byte_end":85463,"line_start":1618,"line_end":1618,"column_start":5,"column_end":74}},{"value":"/ receive packets from an IPv4-mapped IPv6 address.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":85468,"byte_end":85521,"line_start":1619,"line_end":1619,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":311},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":86675,"byte_end":86689,"line_start":1656,"line_end":1656,"column_start":12,"column_end":26},"name":"keepalive_time","qualname":"<Socket>::keepalive_time","value":"fn keepalive_time(&Self) -> io::Result<Duration>","parent":null,"children":[],"decl_id":null,"docs":" Get the value of the `TCP_KEEPIDLE` option on this socket.","sig":null,"attributes":[{"value":"/ Get the value of the `TCP_KEEPIDLE` option on this socket.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":86115,"byte_end":86177,"line_start":1638,"line_end":1638,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":86182,"byte_end":86185,"line_start":1639,"line_end":1639,"column_start":5,"column_end":8}},{"value":"/ This returns the value of `TCP_KEEPALIVE` on macOS and iOS and `TCP_KEEPIDLE` on all other","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":86190,"byte_end":86284,"line_start":1640,"line_end":1640,"column_start":5,"column_end":99}},{"value":"/ supported Unix operating systems.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":86289,"byte_end":86326,"line_start":1641,"line_end":1641,"column_start":5,"column_end":42}},{"value":"cfg(any(doc,\nall(feature = \"all\",\nnot(any(windows, target_os = \"haiku\", target_os = \"openbsd\")))))","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":86331,"byte_end":86488,"line_start":1642,"line_end":1648,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":312},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":87814,"byte_end":87832,"line_start":1695,"line_end":1695,"column_start":12,"column_end":30},"name":"keepalive_interval","qualname":"<Socket>::keepalive_interval","value":"fn keepalive_interval(&Self) -> io::Result<Duration>","parent":null,"children":[],"decl_id":null,"docs":" Get the value of the `TCP_KEEPINTVL` option on this socket.","sig":null,"attributes":[{"value":"/ Get the value of the `TCP_KEEPINTVL` option on this socket.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":86777,"byte_end":86840,"line_start":1660,"line_end":1660,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":86845,"byte_end":86848,"line_start":1661,"line_end":1661,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_tcp_keepalive`].","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":86853,"byte_end":86923,"line_start":1662,"line_end":1662,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":86928,"byte_end":86931,"line_start":1663,"line_end":1663,"column_start":5,"column_end":8}},{"value":"/ [`set_tcp_keepalive`]: Socket::set_tcp_keepalive","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":86936,"byte_end":86988,"line_start":1664,"line_end":1664,"column_start":5,"column_end":57}},{"value":"cfg(all(feature = \"all\",\nany(doc, target_os = \"android\", target_os = \"dragonfly\", target_os =\n\"freebsd\", target_os = \"fuchsia\", target_os = \"illumos\", target_os = \"linux\",\ntarget_os = \"netbsd\", target_vendor = \"apple\",)))","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":86993,"byte_end":87357,"line_start":1665,"line_end":1678,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":314},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":89086,"byte_end":89103,"line_start":1737,"line_end":1737,"column_start":12,"column_end":29},"name":"keepalive_retries","qualname":"<Socket>::keepalive_retries","value":"fn keepalive_retries(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Get the value of the `TCP_KEEPCNT` option on this socket.","sig":null,"attributes":[{"value":"/ Get the value of the `TCP_KEEPCNT` option on this socket.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":88051,"byte_end":88112,"line_start":1702,"line_end":1702,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":88117,"byte_end":88120,"line_start":1703,"line_end":1703,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_tcp_keepalive`].","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":88125,"byte_end":88195,"line_start":1704,"line_end":1704,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":88200,"byte_end":88203,"line_start":1705,"line_end":1705,"column_start":5,"column_end":8}},{"value":"/ [`set_tcp_keepalive`]: Socket::set_tcp_keepalive","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":88208,"byte_end":88260,"line_start":1706,"line_end":1706,"column_start":5,"column_end":57}},{"value":"cfg(all(feature = \"all\",\nany(doc, target_os = \"android\", target_os = \"dragonfly\", target_os =\n\"freebsd\", target_os = \"fuchsia\", target_os = \"illumos\", target_os = \"linux\",\ntarget_os = \"netbsd\", target_vendor = \"apple\",)))","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":88265,"byte_end":88629,"line_start":1707,"line_end":1720,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":316},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":90886,"byte_end":90903,"line_start":1782,"line_end":1782,"column_start":12,"column_end":29},"name":"set_tcp_keepalive","qualname":"<Socket>::set_tcp_keepalive","value":"fn set_tcp_keepalive(&Self, &TcpKeepalive) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set parameters configuring TCP keepalive probes for this socket.","sig":null,"attributes":[{"value":"/ Set parameters configuring TCP keepalive probes for this socket.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":89300,"byte_end":89368,"line_start":1744,"line_end":1744,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":89373,"byte_end":89376,"line_start":1745,"line_end":1745,"column_start":5,"column_end":8}},{"value":"/ The supported parameters depend on the operating system, and are","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":89381,"byte_end":89449,"line_start":1746,"line_end":1746,"column_start":5,"column_end":73}},{"value":"/ configured using the [`TcpKeepalive`] struct. At a minimum, all systems","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":89454,"byte_end":89529,"line_start":1747,"line_end":1747,"column_start":5,"column_end":80}},{"value":"/ support configuring the [keepalive time]: the time after which the OS","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":89534,"byte_end":89607,"line_start":1748,"line_end":1748,"column_start":5,"column_end":78}},{"value":"/ will start sending keepalive messages on an idle connection.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":89612,"byte_end":89676,"line_start":1749,"line_end":1749,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":89681,"byte_end":89684,"line_start":1750,"line_end":1750,"column_start":5,"column_end":8}},{"value":"/ [keepalive time]: TcpKeepalive::with_time","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":89689,"byte_end":89734,"line_start":1751,"line_end":1751,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":89739,"byte_end":89742,"line_start":1752,"line_end":1752,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":89747,"byte_end":89758,"line_start":1753,"line_end":1753,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":89763,"byte_end":89766,"line_start":1754,"line_end":1754,"column_start":5,"column_end":8}},{"value":"/ * This will enable `SO_KEEPALIVE` on this socket, if it is not already","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":89771,"byte_end":89845,"line_start":1755,"line_end":1755,"column_start":5,"column_end":79}},{"value":"/   enabled.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":89850,"byte_end":89864,"line_start":1756,"line_end":1756,"column_start":5,"column_end":19}},{"value":"/ * On some platforms, such as Windows, any keepalive parameters *not*","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":89869,"byte_end":89941,"line_start":1757,"line_end":1757,"column_start":5,"column_end":77}},{"value":"/   configured by the `TcpKeepalive` struct passed to this function may be","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":89946,"byte_end":90022,"line_start":1758,"line_end":1758,"column_start":5,"column_end":81}},{"value":"/   overwritten with their default values. Therefore, this function should","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":90027,"byte_end":90103,"line_start":1759,"line_end":1759,"column_start":5,"column_end":81}},{"value":"/   either only be called once per socket, or the same parameters should","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":90108,"byte_end":90182,"line_start":1760,"line_end":1760,"column_start":5,"column_end":79}},{"value":"/   be passed every time it is called.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":90187,"byte_end":90227,"line_start":1761,"line_end":1761,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":90232,"byte_end":90235,"line_start":1762,"line_end":1762,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":90240,"byte_end":90254,"line_start":1763,"line_end":1763,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":90259,"byte_end":90262,"line_start":1764,"line_end":1764,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":90267,"byte_end":90274,"line_start":1765,"line_end":1765,"column_start":5,"column_end":12}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":90279,"byte_end":90307,"line_start":1766,"line_end":1766,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":90312,"byte_end":90315,"line_start":1767,"line_end":1767,"column_start":5,"column_end":8}},{"value":"/ use socket2::{Socket, TcpKeepalive, Domain, Type};","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":90320,"byte_end":90374,"line_start":1768,"line_end":1768,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":90379,"byte_end":90382,"line_start":1769,"line_end":1769,"column_start":5,"column_end":8}},{"value":"/ # fn main() -> std::io::Result<()> {","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":90387,"byte_end":90427,"line_start":1770,"line_end":1770,"column_start":5,"column_end":45}},{"value":"/ let socket = Socket::new(Domain::IPV4, Type::STREAM, None)?;","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":90432,"byte_end":90496,"line_start":1771,"line_end":1771,"column_start":5,"column_end":69}},{"value":"/ let keepalive = TcpKeepalive::new()","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":90501,"byte_end":90540,"line_start":1772,"line_end":1772,"column_start":5,"column_end":44}},{"value":"/     .with_time(Duration::from_secs(4));","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":90545,"byte_end":90588,"line_start":1773,"line_end":1773,"column_start":5,"column_end":48}},{"value":"/     // Depending on the target operating system, we may also be able to","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":90593,"byte_end":90668,"line_start":1774,"line_end":1774,"column_start":5,"column_end":80}},{"value":"/     // configure the keepalive probe interval and/or the number of","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":90673,"byte_end":90743,"line_start":1775,"line_end":1775,"column_start":5,"column_end":75}},{"value":"/     // retries here as well.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":90748,"byte_end":90780,"line_start":1776,"line_end":1776,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":90785,"byte_end":90788,"line_start":1777,"line_end":1777,"column_start":5,"column_end":8}},{"value":"/ socket.set_tcp_keepalive(&keepalive)?;","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":90793,"byte_end":90835,"line_start":1778,"line_end":1778,"column_start":5,"column_end":47}},{"value":"/ # Ok(()) }","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":90840,"byte_end":90854,"line_start":1779,"line_end":1779,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":90859,"byte_end":90866,"line_start":1780,"line_end":1780,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":90871,"byte_end":90874,"line_start":1781,"line_end":1781,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":317},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":91257,"byte_end":91264,"line_start":1792,"line_end":1792,"column_start":12,"column_end":19},"name":"nodelay","qualname":"<Socket>::nodelay","value":"fn nodelay(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Get the value of the `TCP_NODELAY` option on this socket.","sig":null,"attributes":[{"value":"/ Get the value of the `TCP_NODELAY` option on this socket.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":91054,"byte_end":91115,"line_start":1787,"line_end":1787,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":91120,"byte_end":91123,"line_start":1788,"line_end":1788,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_nodelay`].","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":91128,"byte_end":91192,"line_start":1789,"line_end":1789,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":91197,"byte_end":91200,"line_start":1790,"line_end":1790,"column_start":5,"column_end":8}},{"value":"/ [`set_nodelay`]: Socket::set_nodelay","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":91205,"byte_end":91245,"line_start":1791,"line_end":1791,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":319},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":91873,"byte_end":91884,"line_start":1806,"line_end":1806,"column_start":12,"column_end":23},"name":"set_nodelay","qualname":"<Socket>::set_nodelay","value":"fn set_nodelay(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the value of the `TCP_NODELAY` option on this socket.","sig":null,"attributes":[{"value":"/ Set the value of the `TCP_NODELAY` option on this socket.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":91459,"byte_end":91520,"line_start":1799,"line_end":1799,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":91525,"byte_end":91528,"line_start":1800,"line_end":1800,"column_start":5,"column_end":8}},{"value":"/ If set, this option disables the Nagle algorithm. This means that","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":91533,"byte_end":91602,"line_start":1801,"line_end":1801,"column_start":5,"column_end":74}},{"value":"/ segments are always sent as soon as possible, even if there is only a","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":91607,"byte_end":91680,"line_start":1802,"line_end":1802,"column_start":5,"column_end":78}},{"value":"/ small amount of data. When not set, data is buffered until there is a","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":91685,"byte_end":91758,"line_start":1803,"line_end":1803,"column_start":5,"column_end":78}},{"value":"/ sufficient amount to send out, thereby avoiding the frequent sending of","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":91763,"byte_end":91838,"line_start":1804,"line_end":1804,"column_start":5,"column_end":80}},{"value":"/ small packets.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":91843,"byte_end":91861,"line_start":1805,"line_end":1805,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":321},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":92164,"byte_end":92168,"line_start":1819,"line_end":1819,"column_start":8,"column_end":12},"name":"read","qualname":"<Socket as std::io::Read>::read","value":"fn read(&mut Self, &mut [u8]) -> io::Result<usize>","parent":{"krate":1,"index":4543},"children":[],"decl_id":{"krate":1,"index":4544},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":322},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":92514,"byte_end":92527,"line_start":1827,"line_end":1827,"column_start":8,"column_end":21},"name":"read_vectored","qualname":"<Socket as std::io::Read>::read_vectored","value":"fn read_vectored(&mut Self, &mut [IoSliceMut]) -> io::Result<usize>","parent":{"krate":1,"index":4543},"children":[],"decl_id":{"krate":1,"index":4545},"docs":"","sig":null,"attributes":[{"value":"cfg(not(target_os = \"redox\"))","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":92474,"byte_end":92506,"line_start":1826,"line_end":1826,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":326},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":93089,"byte_end":93093,"line_start":1838,"line_end":1838,"column_start":8,"column_end":12},"name":"read","qualname":"<&'a Socket as std::io::Read>::read","value":"fn read(&mut Self, &mut [u8]) -> io::Result<usize>","parent":{"krate":1,"index":4543},"children":[],"decl_id":{"krate":1,"index":4544},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":327},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":93347,"byte_end":93360,"line_start":1845,"line_end":1845,"column_start":8,"column_end":21},"name":"read_vectored","qualname":"<&'a Socket as std::io::Read>::read_vectored","value":"fn read_vectored(&mut Self, &mut [IoSliceMut]) -> io::Result<usize>","parent":{"krate":1,"index":4543},"children":[],"decl_id":{"krate":1,"index":4545},"docs":"","sig":null,"attributes":[{"value":"cfg(not(target_os = \"redox\"))","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":93307,"byte_end":93339,"line_start":1844,"line_end":1844,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":330},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":93661,"byte_end":93666,"line_start":1853,"line_end":1853,"column_start":8,"column_end":13},"name":"write","qualname":"<Socket as std::io::Write>::write","value":"fn write(&mut Self, &[u8]) -> io::Result<usize>","parent":{"krate":1,"index":4600},"children":[],"decl_id":{"krate":1,"index":4601},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":331},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":93787,"byte_end":93801,"line_start":1858,"line_end":1858,"column_start":8,"column_end":22},"name":"write_vectored","qualname":"<Socket as std::io::Write>::write_vectored","value":"fn write_vectored(&mut Self, &[IoSlice]) -> io::Result<usize>","parent":{"krate":1,"index":4600},"children":[],"decl_id":{"krate":1,"index":4602},"docs":"","sig":null,"attributes":[{"value":"cfg(not(target_os = \"redox\"))","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":93747,"byte_end":93779,"line_start":1857,"line_end":1857,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":332},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":93905,"byte_end":93910,"line_start":1862,"line_end":1862,"column_start":8,"column_end":13},"name":"flush","qualname":"<Socket as std::io::Write>::flush","value":"fn flush(&mut Self) -> io::Result<()>","parent":{"krate":1,"index":4600},"children":[],"decl_id":{"krate":1,"index":4605},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":335},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":94005,"byte_end":94010,"line_start":1868,"line_end":1868,"column_start":8,"column_end":13},"name":"write","qualname":"<&'a Socket as std::io::Write>::write","value":"fn write(&mut Self, &[u8]) -> io::Result<usize>","parent":{"krate":1,"index":4600},"children":[],"decl_id":{"krate":1,"index":4601},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":336},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":94131,"byte_end":94145,"line_start":1873,"line_end":1873,"column_start":8,"column_end":22},"name":"write_vectored","qualname":"<&'a Socket as std::io::Write>::write_vectored","value":"fn write_vectored(&mut Self, &[IoSlice]) -> io::Result<usize>","parent":{"krate":1,"index":4600},"children":[],"decl_id":{"krate":1,"index":4602},"docs":"","sig":null,"attributes":[{"value":"cfg(not(target_os = \"redox\"))","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":94091,"byte_end":94123,"line_start":1872,"line_end":1872,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":337},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":94249,"byte_end":94254,"line_start":1877,"line_end":1877,"column_start":8,"column_end":13},"name":"flush","qualname":"<&'a Socket as std::io::Write>::flush","value":"fn flush(&mut Self) -> io::Result<()>","parent":{"krate":1,"index":4600},"children":[],"decl_id":{"krate":1,"index":4605},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":339},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":94346,"byte_end":94349,"line_start":1883,"line_end":1883,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Socket as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10108},"children":[],"decl_id":{"krate":2,"index":10109},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":363},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockref.rs","byte_start":97905,"byte_end":97912,"line_start":85,"line_end":85,"column_start":12,"column_end":19},"name":"SockRef","qualname":"::sockref::SockRef","value":"SockRef {  }","parent":null,"children":[{"krate":0,"index":365},{"krate":0,"index":366}],"decl_id":null,"docs":" A reference to a [`Socket`] that can be used to configure socket types other\n than the `Socket` type itself.","sig":null,"attributes":[{"value":"/ A reference to a [`Socket`] that can be used to configure socket types other","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockref.rs","byte_start":95057,"byte_end":95137,"line_start":12,"line_end":12,"column_start":1,"column_end":81}},{"value":"/ than the `Socket` type itself.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockref.rs","byte_start":95138,"byte_end":95172,"line_start":13,"line_end":13,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockref.rs","byte_start":95173,"byte_end":95176,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ This allows for example a [`TcpStream`], found in the standard library, to","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockref.rs","byte_start":95177,"byte_end":95255,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/ be configured using all the additional methods found in the [`Socket`] API.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockref.rs","byte_start":95256,"byte_end":95335,"line_start":16,"line_end":16,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockref.rs","byte_start":95336,"byte_end":95339,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ `SockRef` can be created from any socket type that implements [`AsRawFd`]","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockref.rs","byte_start":95340,"byte_end":95417,"line_start":18,"line_end":18,"column_start":1,"column_end":78}},{"value":"/ (Unix) or [`AsRawSocket`] (Windows) using the [`From`] implementation, but","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockref.rs","byte_start":95418,"byte_end":95496,"line_start":19,"line_end":19,"column_start":1,"column_end":79}},{"value":"/ the caller must ensure the file descriptor/socket is a valid.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockref.rs","byte_start":95497,"byte_end":95562,"line_start":20,"line_end":20,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockref.rs","byte_start":95563,"byte_end":95566,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ [`TcpStream`]: std::net::TcpStream","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockref.rs","byte_start":95567,"byte_end":95605,"line_start":22,"line_end":22,"column_start":1,"column_end":39}},{"value":"/ [`AsRawFd`]: https://doc.rust-lang.org/stable/std/os/unix/io/trait.AsRawFd.html","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockref.rs","byte_start":95679,"byte_end":95762,"line_start":24,"line_end":24,"column_start":1,"column_end":84}},{"value":"/ [`AsRawSocket`]: https://doc.rust-lang.org/stable/std/os/windows/io/trait.AsRawSocket.html","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockref.rs","byte_start":95763,"byte_end":95857,"line_start":25,"line_end":25,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockref.rs","byte_start":95858,"byte_end":95861,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockref.rs","byte_start":95862,"byte_end":95876,"line_start":27,"line_end":27,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockref.rs","byte_start":95877,"byte_end":95880,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ Below is an example of converting a [`TcpStream`] into a [`SockRef`].","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockref.rs","byte_start":95881,"byte_end":95954,"line_start":29,"line_end":29,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockref.rs","byte_start":95955,"byte_end":95958,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockref.rs","byte_start":95959,"byte_end":95966,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"/ use std::net::{TcpStream, SocketAddr};","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockref.rs","byte_start":95967,"byte_end":96009,"line_start":32,"line_end":32,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockref.rs","byte_start":96010,"byte_end":96013,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ use socket2::SockRef;","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockref.rs","byte_start":96014,"byte_end":96039,"line_start":34,"line_end":34,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockref.rs","byte_start":96040,"byte_end":96043,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockref.rs","byte_start":96044,"byte_end":96103,"line_start":36,"line_end":36,"column_start":1,"column_end":60}},{"value":"/ // Create `TcpStream` from the standard library.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockref.rs","byte_start":96104,"byte_end":96156,"line_start":37,"line_end":37,"column_start":1,"column_end":53}},{"value":"/ let address: SocketAddr = \"127.0.0.1:1234\".parse()?;","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockref.rs","byte_start":96157,"byte_end":96213,"line_start":38,"line_end":38,"column_start":1,"column_end":57}},{"value":"/ # let b1 = std::sync::Arc::new(std::sync::Barrier::new(2));","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockref.rs","byte_start":96214,"byte_end":96277,"line_start":39,"line_end":39,"column_start":1,"column_end":64}},{"value":"/ # let b2 = b1.clone();","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockref.rs","byte_start":96278,"byte_end":96304,"line_start":40,"line_end":40,"column_start":1,"column_end":27}},{"value":"/ # let handle = std::thread::spawn(move || {","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockref.rs","byte_start":96305,"byte_end":96352,"line_start":41,"line_end":41,"column_start":1,"column_end":48}},{"value":"/ #    let listener = std::net::TcpListener::bind(address).unwrap();","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockref.rs","byte_start":96353,"byte_end":96423,"line_start":42,"line_end":42,"column_start":1,"column_end":71}},{"value":"/ #    b2.wait();","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockref.rs","byte_start":96424,"byte_end":96443,"line_start":43,"line_end":43,"column_start":1,"column_end":20}},{"value":"/ #    let (stream, _) = listener.accept().unwrap();","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockref.rs","byte_start":96444,"byte_end":96498,"line_start":44,"line_end":44,"column_start":1,"column_end":55}},{"value":"/ #    std::thread::sleep(std::time::Duration::from_millis(10));","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockref.rs","byte_start":96499,"byte_end":96565,"line_start":45,"line_end":45,"column_start":1,"column_end":67}},{"value":"/ #    drop(stream);","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockref.rs","byte_start":96566,"byte_end":96588,"line_start":46,"line_end":46,"column_start":1,"column_end":23}},{"value":"/ # });","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockref.rs","byte_start":96589,"byte_end":96598,"line_start":47,"line_end":47,"column_start":1,"column_end":10}},{"value":"/ # b1.wait();","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockref.rs","byte_start":96599,"byte_end":96615,"line_start":48,"line_end":48,"column_start":1,"column_end":17}},{"value":"/ let stream = TcpStream::connect(address)?;","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockref.rs","byte_start":96616,"byte_end":96662,"line_start":49,"line_end":49,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockref.rs","byte_start":96663,"byte_end":96666,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ // Create a `SockRef`erence to the stream.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockref.rs","byte_start":96667,"byte_end":96713,"line_start":51,"line_end":51,"column_start":1,"column_end":47}},{"value":"/ let socket_ref = SockRef::from(&stream);","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockref.rs","byte_start":96714,"byte_end":96758,"line_start":52,"line_end":52,"column_start":1,"column_end":45}},{"value":"/ // Use `Socket::set_nodelay` on the stream.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockref.rs","byte_start":96759,"byte_end":96806,"line_start":53,"line_end":53,"column_start":1,"column_end":48}},{"value":"/ socket_ref.set_nodelay(true)?;","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockref.rs","byte_start":96807,"byte_end":96841,"line_start":54,"line_end":54,"column_start":1,"column_end":35}},{"value":"/ drop(socket_ref);","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockref.rs","byte_start":96842,"byte_end":96863,"line_start":55,"line_end":55,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockref.rs","byte_start":96864,"byte_end":96867,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(stream.nodelay()?, true);","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockref.rs","byte_start":96868,"byte_end":96908,"line_start":57,"line_end":57,"column_start":1,"column_end":41}},{"value":"/ # handle.join().unwrap();","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockref.rs","byte_start":96909,"byte_end":96938,"line_start":58,"line_end":58,"column_start":1,"column_end":30}},{"value":"/ # Ok(())","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockref.rs","byte_start":96939,"byte_end":96951,"line_start":59,"line_end":59,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockref.rs","byte_start":96952,"byte_end":96959,"line_start":60,"line_end":60,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockref.rs","byte_start":96960,"byte_end":96967,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockref.rs","byte_start":96968,"byte_end":96971,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ Below is an example of **incorrect usage** of `SockRef::from`, which is","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockref.rs","byte_start":96972,"byte_end":97047,"line_start":63,"line_end":63,"column_start":1,"column_end":76}},{"value":"/ currently possible (but not intended and will be fixed in future versions).","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockref.rs","byte_start":97048,"byte_end":97127,"line_start":64,"line_end":64,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockref.rs","byte_start":97128,"byte_end":97131,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ ```compile_fail","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockref.rs","byte_start":97132,"byte_end":97151,"line_start":66,"line_end":66,"column_start":1,"column_end":20}},{"value":"/ use socket2::SockRef;","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockref.rs","byte_start":97152,"byte_end":97177,"line_start":67,"line_end":67,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockref.rs","byte_start":97178,"byte_end":97181,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockref.rs","byte_start":97182,"byte_end":97241,"line_start":69,"line_end":69,"column_start":1,"column_end":60}},{"value":"/ /// THIS USAGE IS NOT VALID!","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockref.rs","byte_start":97242,"byte_end":97274,"line_start":70,"line_end":70,"column_start":1,"column_end":33}},{"value":"/ let socket_ref = SockRef::from(&123);","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockref.rs","byte_start":97275,"byte_end":97316,"line_start":71,"line_end":71,"column_start":1,"column_end":42}},{"value":"/ // The above line is overseen possibility when using `SockRef::from`, it","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockref.rs","byte_start":97317,"byte_end":97393,"line_start":72,"line_end":72,"column_start":1,"column_end":77}},{"value":"/ // uses the `RawFd` (on Unix), which is a type alias for `c_int`/`i32`,","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockref.rs","byte_start":97394,"byte_end":97469,"line_start":73,"line_end":73,"column_start":1,"column_end":76}},{"value":"/ // which implements `AsRawFd`. However it may be clear that this usage is","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockref.rs","byte_start":97470,"byte_end":97547,"line_start":74,"line_end":74,"column_start":1,"column_end":78}},{"value":"/ // invalid as it doesn't guarantee that `123` is a valid file descriptor.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockref.rs","byte_start":97548,"byte_end":97625,"line_start":75,"line_end":75,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockref.rs","byte_start":97626,"byte_end":97629,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ // Using `Socket::set_nodelay` now will call it on a file descriptor we","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockref.rs","byte_start":97630,"byte_end":97705,"line_start":77,"line_end":77,"column_start":1,"column_end":76}},{"value":"/ // don't own! We don't even not if the file descriptor is valid or a socket.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockref.rs","byte_start":97706,"byte_end":97786,"line_start":78,"line_end":78,"column_start":1,"column_end":81}},{"value":"/ socket_ref.set_nodelay(true)?;","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockref.rs","byte_start":97787,"byte_end":97821,"line_start":79,"line_end":79,"column_start":1,"column_end":35}},{"value":"/ drop(socket_ref);","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockref.rs","byte_start":97822,"byte_end":97843,"line_start":80,"line_end":80,"column_start":1,"column_end":22}},{"value":"/ # Ok(())","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockref.rs","byte_start":97844,"byte_end":97856,"line_start":81,"line_end":81,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockref.rs","byte_start":97857,"byte_end":97864,"line_start":82,"line_end":82,"column_start":1,"column_end":8}},{"value":"/ # DO_NOT_COMPILE","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockref.rs","byte_start":97865,"byte_end":97885,"line_start":83,"line_end":83,"column_start":1,"column_end":21}},{"value":"/ ```","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockref.rs","byte_start":97886,"byte_end":97893,"line_start":84,"line_end":84,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":370},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockref.rs","byte_start":98404,"byte_end":98409,"line_start":98,"line_end":98,"column_start":8,"column_end":13},"name":"deref","qualname":"<SockRef as std::ops::Deref>::deref","value":"fn deref(&Self) -> &Self::Target","parent":{"krate":2,"index":3398},"children":[],"decl_id":{"krate":2,"index":3400},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":374},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockref.rs","byte_start":98724,"byte_end":98728,"line_start":111,"line_end":111,"column_start":8,"column_end":12},"name":"from","qualname":"<SockRef as std::convert::From>::from","value":"fn from(&'s S) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":" The caller must ensure `S` is actually a socket.\n","sig":null,"attributes":[{"value":"/ The caller must ensure `S` is actually a socket.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockref.rs","byte_start":98664,"byte_end":98716,"line_start":110,"line_end":110,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":376},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockref.rs","byte_start":99565,"byte_end":99568,"line_start":140,"line_end":140,"column_start":8,"column_end":11},"name":"fmt","qualname":"<SockRef as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10108},"children":[],"decl_id":{"krate":2,"index":10109},"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":682},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":106668,"byte_end":106672,"line_start":227,"line_end":227,"column_start":15,"column_end":19},"name":"UNIX","qualname":"::sys::<impl Domain>::UNIX","value":"Domain","parent":{"krate":0,"index":681},"children":[],"decl_id":null,"docs":" Domain for Unix socket communication, corresponding to `AF_UNIX`.\n","sig":null,"attributes":[{"value":"/ Domain for Unix socket communication, corresponding to `AF_UNIX`.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":106544,"byte_end":106613,"line_start":225,"line_end":225,"column_start":5,"column_end":74}}]},{"kind":"Const","id":{"krate":0,"index":683},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":107109,"byte_end":107115,"line_start":241,"line_end":241,"column_start":15,"column_end":21},"name":"PACKET","qualname":"::sys::<impl Domain>::PACKET","value":"Domain","parent":{"krate":0,"index":681},"children":[],"decl_id":null,"docs":" Domain for low-level packet interface, corresponding to `AF_PACKET`.\n","sig":null,"attributes":[{"value":"/ Domain for low-level packet interface, corresponding to `AF_PACKET`.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":106711,"byte_end":106783,"line_start":229,"line_end":229,"column_start":5,"column_end":77}},{"value":"cfg(all(feature = \"all\",\nany(target_os = \"android\", target_os = \"fuchsia\", target_os = \"linux\")))","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":106788,"byte_end":106910,"line_start":230,"line_end":233,"column_start":5,"column_end":8}}]},{"kind":"Const","id":{"krate":0,"index":684},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":107450,"byte_end":107455,"line_start":249,"line_end":249,"column_start":15,"column_end":20},"name":"VSOCK","qualname":"::sys::<impl Domain>::VSOCK","value":"Domain","parent":{"krate":0,"index":681},"children":[],"decl_id":null,"docs":" Domain for low-level VSOCK interface, corresponding to `AF_VSOCK`.\n","sig":null,"attributes":[{"value":"/ Domain for low-level VSOCK interface, corresponding to `AF_VSOCK`.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":107156,"byte_end":107226,"line_start":243,"line_end":243,"column_start":5,"column_end":75}},{"value":"cfg(all(feature = \"all\", any(target_os = \"android\", target_os = \"linux\")))","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":107231,"byte_end":107308,"line_start":244,"line_end":244,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":686},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":108886,"byte_end":108897,"line_start":301,"line_end":301,"column_start":18,"column_end":29},"name":"nonblocking","qualname":"<Type>::nonblocking","value":"const fn nonblocking(Self) -> Type","parent":null,"children":[],"decl_id":null,"docs":" Set `SOCK_NONBLOCK` on the `Type`.\n","sig":null,"attributes":[{"value":"/ Set `SOCK_NONBLOCK` on the `Type`.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":108039,"byte_end":108077,"line_start":271,"line_end":271,"column_start":5,"column_end":43}},{"value":"cfg(all(feature = \"all\",\nany(target_os = \"android\", target_os = \"dragonfly\", target_os = \"freebsd\",\ntarget_os = \"fuchsia\", target_os = \"illumos\", target_os = \"linux\", target_os =\n\"netbsd\", target_os = \"openbsd\")))","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":108082,"byte_end":108426,"line_start":272,"line_end":284,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":687},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":109814,"byte_end":109821,"line_start":335,"line_end":335,"column_start":18,"column_end":25},"name":"cloexec","qualname":"<Type>::cloexec","value":"const fn cloexec(Self) -> Type","parent":null,"children":[],"decl_id":null,"docs":" Set `SOCK_CLOEXEC` on the `Type`.\n","sig":null,"attributes":[{"value":"/ Set `SOCK_CLOEXEC` on the `Type`.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":108968,"byte_end":109005,"line_start":305,"line_end":305,"column_start":5,"column_end":42}},{"value":"cfg(all(feature = \"all\",\nany(target_os = \"android\", target_os = \"dragonfly\", target_os = \"freebsd\",\ntarget_os = \"fuchsia\", target_os = \"illumos\", target_os = \"linux\", target_os =\n\"netbsd\", target_os = \"openbsd\")))","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":109010,"byte_end":109354,"line_start":306,"line_end":318,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":690},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":111621,"byte_end":111637,"line_start":405,"line_end":405,"column_start":18,"column_end":34},"name":"is_end_of_record","qualname":"<RecvFlags>::is_end_of_record","value":"const fn is_end_of_record(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if the message terminates a record.","sig":null,"attributes":[{"value":"/ Check if the message terminates a record.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":111257,"byte_end":111302,"line_start":398,"line_end":398,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":111307,"byte_end":111310,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ Not all socket types support the notion of records.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":111315,"byte_end":111370,"line_start":400,"line_end":400,"column_start":5,"column_end":60}},{"value":"/ For socket types that do support it (such as [`SEQPACKET`][Type::SEQPACKET]),","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":111375,"byte_end":111456,"line_start":401,"line_end":401,"column_start":5,"column_end":86}},{"value":"/ a record is terminated by sending a message with the end-of-record flag set.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":111461,"byte_end":111541,"line_start":402,"line_end":402,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":111546,"byte_end":111549,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ On Unix this corresponds to the MSG_EOR flag.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":111554,"byte_end":111603,"line_start":404,"line_end":404,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":691},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":111958,"byte_end":111972,"line_start":415,"line_end":415,"column_start":18,"column_end":32},"name":"is_out_of_band","qualname":"<RecvFlags>::is_out_of_band","value":"const fn is_out_of_band(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if the message contains out-of-band data.","sig":null,"attributes":[{"value":"/ Check if the message contains out-of-band data.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":111701,"byte_end":111752,"line_start":409,"line_end":409,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":111757,"byte_end":111760,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ This is useful for protocols where you receive out-of-band data","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":111765,"byte_end":111832,"line_start":411,"line_end":411,"column_start":5,"column_end":72}},{"value":"/ mixed in with the normal data stream.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":111837,"byte_end":111878,"line_start":412,"line_end":412,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":111883,"byte_end":111886,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ On Unix this corresponds to the MSG_OOB flag.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":111891,"byte_end":111940,"line_start":414,"line_end":414,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":693},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":112111,"byte_end":112114,"line_start":422,"line_end":422,"column_start":8,"column_end":11},"name":"fmt","qualname":"<RecvFlags as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut std::fmt::Formatter) -> std::fmt::Result","parent":{"krate":2,"index":10108},"children":[],"decl_id":{"krate":2,"index":10109},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":708},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":113707,"byte_end":113711,"line_start":471,"line_end":471,"column_start":12,"column_end":16},"name":"unix","qualname":"<SockAddr>::unix","value":"fn unix<P>(P) -> io::Result<SockAddr> where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `SockAddr` with the family `AF_UNIX` and the provided path.","sig":null,"attributes":[{"value":"/ Constructs a `SockAddr` with the family `AF_UNIX` and the provided path.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":113344,"byte_end":113420,"line_start":463,"line_end":463,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":113425,"byte_end":113428,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":113433,"byte_end":113446,"line_start":465,"line_end":465,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":113451,"byte_end":113454,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ Returns an error if the path is longer than `SUN_LEN`.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":113459,"byte_end":113517,"line_start":467,"line_end":467,"column_start":5,"column_end":63}},{"value":"cfg(feature = \"all\")","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":113522,"byte_end":113545,"line_start":468,"line_end":468,"column_start":5,"column_end":28}},{"value":"allow(unused_unsafe)","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":113612,"byte_end":113635,"line_start":470,"line_end":470,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":713},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":116389,"byte_end":116394,"line_start":540,"line_end":540,"column_start":12,"column_end":17},"name":"vsock","qualname":"<SockAddr>::vsock","value":"fn vsock(u32, u32) -> io::Result<SockAddr>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `SockAddr` with the family `AF_VSOCK` and the provided CID/port.","sig":null,"attributes":[{"value":"/ Constructs a `SockAddr` with the family `AF_VSOCK` and the provided CID/port.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":115856,"byte_end":115937,"line_start":528,"line_end":528,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":115942,"byte_end":115945,"line_start":529,"line_end":529,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":115950,"byte_end":115962,"line_start":530,"line_end":530,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":115967,"byte_end":115970,"line_start":531,"line_end":531,"column_start":5,"column_end":8}},{"value":"/ This function can never fail. In a future version of this library it will be made","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":115975,"byte_end":116060,"line_start":532,"line_end":532,"column_start":5,"column_end":90}},{"value":"/ infallible.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":116065,"byte_end":116080,"line_start":533,"line_end":533,"column_start":5,"column_end":20}},{"value":"allow(unused_unsafe)","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":116085,"byte_end":116108,"line_start":534,"line_end":534,"column_start":5,"column_end":28}},{"value":"cfg(all(feature = \"all\", any(target_os = \"android\", target_os = \"linux\")))","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":116173,"byte_end":116250,"line_start":535,"line_end":535,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":716},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":117411,"byte_end":117424,"line_start":567,"line_end":567,"column_start":12,"column_end":25},"name":"vsock_address","qualname":"<SockAddr>::vsock_address","value":"fn vsock_address(&Self) -> Option<(u32, u32)>","parent":null,"children":[],"decl_id":null,"docs":" Returns this address VSOCK CID/port if it is in the `AF_VSOCK` family,\n otherwise return `None`.\n","sig":null,"attributes":[{"value":"/ Returns this address VSOCK CID/port if it is in the `AF_VSOCK` family,","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":117083,"byte_end":117157,"line_start":560,"line_end":560,"column_start":5,"column_end":79}},{"value":"/ otherwise return `None`.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":117162,"byte_end":117190,"line_start":561,"line_end":561,"column_start":5,"column_end":33}},{"value":"cfg(all(feature = \"all\", any(target_os = \"android\", target_os = \"linux\")))","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":117195,"byte_end":117272,"line_start":562,"line_end":562,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":791},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":133562,"byte_end":133569,"line_start":1085,"line_end":1085,"column_start":12,"column_end":19},"name":"accept4","qualname":"<crate::Socket>::accept4","value":"fn accept4(&Self, c_int) -> io::Result<(crate::Socket, SockAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Accept a new incoming connection from this listener.","sig":null,"attributes":[{"value":"/ Accept a new incoming connection from this listener.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":132414,"byte_end":132470,"line_start":1049,"line_end":1049,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":132475,"byte_end":132478,"line_start":1050,"line_end":1050,"column_start":5,"column_end":8}},{"value":"/ This function directly corresponds to the `accept4(2)` function.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":132483,"byte_end":132551,"line_start":1051,"line_end":1051,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":132556,"byte_end":132559,"line_start":1052,"line_end":1052,"column_start":5,"column_end":8}},{"value":"/ This function will block the calling thread until a new connection is","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":132564,"byte_end":132637,"line_start":1053,"line_end":1053,"column_start":5,"column_end":78}},{"value":"/ established. When established, the corresponding `Socket` and the remote","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":132642,"byte_end":132718,"line_start":1054,"line_end":1054,"column_start":5,"column_end":81}},{"value":"/ peer's address will be returned.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":132723,"byte_end":132759,"line_start":1055,"line_end":1055,"column_start":5,"column_end":41}},{"value":"cfg(all(feature = \"all\",\nany(target_os = \"android\", target_os = \"dragonfly\", target_os = \"freebsd\",\ntarget_os = \"fuchsia\", target_os = \"illumos\", target_os = \"linux\", target_os =\n\"netbsd\", target_os = \"openbsd\")))","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":132764,"byte_end":133108,"line_start":1056,"line_end":1068,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":794},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":134547,"byte_end":134558,"line_start":1116,"line_end":1116,"column_start":12,"column_end":23},"name":"set_cloexec","qualname":"<crate::Socket>::set_cloexec","value":"fn set_cloexec(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets `CLOEXEC` on the socket.","sig":null,"attributes":[{"value":"/ Sets `CLOEXEC` on the socket.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":134318,"byte_end":134351,"line_start":1109,"line_end":1109,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":134356,"byte_end":134359,"line_start":1110,"line_end":1110,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":134364,"byte_end":134375,"line_start":1111,"line_end":1111,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":134380,"byte_end":134383,"line_start":1112,"line_end":1112,"column_start":5,"column_end":8}},{"value":"/ On supported platforms you can use [`Type::cloexec`].","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":134388,"byte_end":134445,"line_start":1113,"line_end":1113,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"all\")","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":134450,"byte_end":134473,"line_start":1114,"line_end":1114,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":796},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":136104,"byte_end":136107,"line_start":1164,"line_end":1164,"column_start":12,"column_end":15},"name":"mss","qualname":"<crate::Socket>::mss","value":"fn mss(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `TCP_MAXSEG` option on this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `TCP_MAXSEG` option on this socket.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":135759,"byte_end":135820,"line_start":1157,"line_end":1157,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":135825,"byte_end":135828,"line_start":1158,"line_end":1158,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_mss`].","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":135833,"byte_end":135893,"line_start":1159,"line_end":1159,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":135898,"byte_end":135901,"line_start":1160,"line_end":1160,"column_start":5,"column_end":8}},{"value":"/ [`set_mss`]: crate::Socket::set_mss","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":135906,"byte_end":135945,"line_start":1161,"line_end":1161,"column_start":5,"column_end":44}},{"value":"cfg(all(feature = \"all\", not(target_os = \"redox\")))","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":135950,"byte_end":136004,"line_start":1162,"line_end":1162,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":798},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":136640,"byte_end":136647,"line_start":1177,"line_end":1177,"column_start":12,"column_end":19},"name":"set_mss","qualname":"<crate::Socket>::set_mss","value":"fn set_mss(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `TCP_MAXSEG` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `TCP_MAXSEG` option on this socket.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":136297,"byte_end":136358,"line_start":1171,"line_end":1171,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":136363,"byte_end":136366,"line_start":1172,"line_end":1172,"column_start":5,"column_end":8}},{"value":"/ The `TCP_MAXSEG` option denotes the TCP Maximum Segment Size and is only","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":136371,"byte_end":136447,"line_start":1173,"line_end":1173,"column_start":5,"column_end":81}},{"value":"/ available on TCP sockets.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":136452,"byte_end":136481,"line_start":1174,"line_end":1174,"column_start":5,"column_end":34}},{"value":"cfg(all(feature = \"all\", not(target_os = \"redox\")))","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":136486,"byte_end":136540,"line_start":1175,"line_end":1175,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":799},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":137520,"byte_end":137531,"line_start":1211,"line_end":1211,"column_start":12,"column_end":23},"name":"is_listener","qualname":"<crate::Socket>::is_listener","value":"fn is_listener(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `listen(2)` was called on this socket by checking the\n `SO_ACCEPTCONN` option on this socket.\n","sig":null,"attributes":[{"value":"/ Returns `true` if `listen(2)` was called on this socket by checking the","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":136891,"byte_end":136966,"line_start":1188,"line_end":1188,"column_start":5,"column_end":80}},{"value":"/ `SO_ACCEPTCONN` option on this socket.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":136971,"byte_end":137013,"line_start":1189,"line_end":1189,"column_start":5,"column_end":47}},{"value":"cfg(all(feature = \"all\",\nany(target_os = \"android\", target_os = \"freebsd\", target_os = \"fuchsia\",\ntarget_os = \"linux\",)))","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":137018,"byte_end":137222,"line_start":1190,"line_end":1198,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":801},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":138345,"byte_end":138351,"line_start":1240,"line_end":1240,"column_start":12,"column_end":18},"name":"domain","qualname":"<crate::Socket>::domain","value":"fn domain(&Self) -> io::Result<Domain>","parent":null,"children":[],"decl_id":null,"docs":" Returns the [`Domain`] of this socket by checking the `SO_DOMAIN` option\n on this socket.\n","sig":null,"attributes":[{"value":"/ Returns the [`Domain`] of this socket by checking the `SO_DOMAIN` option","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":137718,"byte_end":137794,"line_start":1218,"line_end":1218,"column_start":5,"column_end":81}},{"value":"/ on this socket.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":137799,"byte_end":137818,"line_start":1219,"line_end":1219,"column_start":5,"column_end":24}},{"value":"cfg(all(feature = \"all\",\nany(target_os = \"android\", target_os = \"fuchsia\", target_os = \"linux\",)))","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":137823,"byte_end":138064,"line_start":1220,"line_end":1229,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":802},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":139106,"byte_end":139114,"line_start":1267,"line_end":1267,"column_start":12,"column_end":20},"name":"protocol","qualname":"<crate::Socket>::protocol","value":"fn protocol(&Self) -> io::Result<Option<Protocol>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the [`Protocol`] of this socket by checking the `SO_PROTOCOL`\n option on this socket.\n","sig":null,"attributes":[{"value":"/ Returns the [`Protocol`] of this socket by checking the `SO_PROTOCOL`","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":138495,"byte_end":138568,"line_start":1244,"line_end":1244,"column_start":5,"column_end":78}},{"value":"/ option on this socket.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":138573,"byte_end":138599,"line_start":1245,"line_end":1245,"column_start":5,"column_end":31}},{"value":"cfg(all(feature = \"all\",\nany(target_os = \"android\", target_os = \"freebsd\", target_os = \"fuchsia\",\ntarget_os = \"linux\",)))","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":138604,"byte_end":138808,"line_start":1246,"line_end":1254,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":804},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":139956,"byte_end":139960,"line_start":1294,"line_end":1294,"column_start":12,"column_end":16},"name":"mark","qualname":"<crate::Socket>::mark","value":"fn mark(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value for the `SO_MARK` option on this socket.","sig":null,"attributes":[{"value":"/ Gets the value for the `SO_MARK` option on this socket.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":139390,"byte_end":139449,"line_start":1277,"line_end":1277,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":139454,"byte_end":139457,"line_start":1278,"line_end":1278,"column_start":5,"column_end":8}},{"value":"/ This value gets the socket mark field for each packet sent through","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":139462,"byte_end":139532,"line_start":1279,"line_end":1279,"column_start":5,"column_end":75}},{"value":"/ this socket.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":139537,"byte_end":139553,"line_start":1280,"line_end":1280,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":139558,"byte_end":139561,"line_start":1281,"line_end":1281,"column_start":5,"column_end":8}},{"value":"/ On Linux this function requires the `CAP_NET_ADMIN` capability.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":139566,"byte_end":139633,"line_start":1282,"line_end":1282,"column_start":5,"column_end":72}},{"value":"cfg(all(feature = \"all\",\nany(target_os = \"android\", target_os = \"fuchsia\", target_os = \"linux\")))","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":139638,"byte_end":139760,"line_start":1283,"line_end":1286,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":806},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":140818,"byte_end":140826,"line_start":1319,"line_end":1319,"column_start":12,"column_end":20},"name":"set_mark","qualname":"<crate::Socket>::set_mark","value":"fn set_mark(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `SO_MARK` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `SO_MARK` option on this socket.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":140148,"byte_end":140207,"line_start":1301,"line_end":1301,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":140212,"byte_end":140215,"line_start":1302,"line_end":1302,"column_start":5,"column_end":8}},{"value":"/ This value sets the socket mark field for each packet sent through","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":140220,"byte_end":140290,"line_start":1303,"line_end":1303,"column_start":5,"column_end":75}},{"value":"/ this socket. Changing the mark can be used for mark-based routing","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":140295,"byte_end":140364,"line_start":1304,"line_end":1304,"column_start":5,"column_end":74}},{"value":"/ without netfilter or for packet filtering.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":140369,"byte_end":140415,"line_start":1305,"line_end":1305,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":140420,"byte_end":140423,"line_start":1306,"line_end":1306,"column_start":5,"column_end":8}},{"value":"/ On Linux this function requires the `CAP_NET_ADMIN` capability.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":140428,"byte_end":140495,"line_start":1307,"line_end":1307,"column_start":5,"column_end":72}},{"value":"cfg(all(feature = \"all\",\nany(target_os = \"android\", target_os = \"fuchsia\", target_os = \"linux\")))","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":140500,"byte_end":140622,"line_start":1308,"line_end":1311,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":807},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":141579,"byte_end":141583,"line_start":1346,"line_end":1346,"column_start":12,"column_end":16},"name":"cork","qualname":"<crate::Socket>::cork","value":"fn cork(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Get the value of the `TCP_CORK` option on this socket.","sig":null,"attributes":[{"value":"/ Get the value of the `TCP_CORK` option on this socket.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":141077,"byte_end":141135,"line_start":1330,"line_end":1330,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":141140,"byte_end":141143,"line_start":1331,"line_end":1331,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_cork`].","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":141148,"byte_end":141209,"line_start":1332,"line_end":1332,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":141214,"byte_end":141217,"line_start":1333,"line_end":1333,"column_start":5,"column_end":8}},{"value":"/ [`set_cork`]: Socket::set_cork","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":141222,"byte_end":141256,"line_start":1334,"line_end":1334,"column_start":5,"column_end":39}},{"value":"cfg(all(feature = \"all\",\nany(target_os = \"android\", target_os = \"fuchsia\", target_os = \"linux\")))","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":141261,"byte_end":141383,"line_start":1335,"line_end":1338,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":809},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":142464,"byte_end":142472,"line_start":1370,"line_end":1370,"column_start":12,"column_end":20},"name":"set_cork","qualname":"<crate::Socket>::set_cork","value":"fn set_cork(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the value of the `TCP_CORK` option on this socket.","sig":null,"attributes":[{"value":"/ Set the value of the `TCP_CORK` option on this socket.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":141771,"byte_end":141829,"line_start":1353,"line_end":1353,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":141834,"byte_end":141837,"line_start":1354,"line_end":1354,"column_start":5,"column_end":8}},{"value":"/ If set, don't send out partial frames. All queued partial frames are","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":141842,"byte_end":141914,"line_start":1355,"line_end":1355,"column_start":5,"column_end":77}},{"value":"/ sent when the option is cleared again. There is a 200 millisecond ceiling on","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":141919,"byte_end":141999,"line_start":1356,"line_end":1356,"column_start":5,"column_end":85}},{"value":"/ the time for which output is corked by `TCP_CORK`. If this ceiling is reached,","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":142004,"byte_end":142086,"line_start":1357,"line_end":1357,"column_start":5,"column_end":87}},{"value":"/ then queued data is automatically transmitted.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":142091,"byte_end":142141,"line_start":1358,"line_end":1358,"column_start":5,"column_end":55}},{"value":"cfg(all(feature = \"all\",\nany(target_os = \"android\", target_os = \"fuchsia\", target_os = \"linux\")))","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":142146,"byte_end":142268,"line_start":1359,"line_end":1362,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":810},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":143235,"byte_end":143243,"line_start":1397,"line_end":1397,"column_start":12,"column_end":20},"name":"quickack","qualname":"<crate::Socket>::quickack","value":"fn quickack(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Get the value of the `TCP_QUICKACK` option on this socket.","sig":null,"attributes":[{"value":"/ Get the value of the `TCP_QUICKACK` option on this socket.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":142717,"byte_end":142779,"line_start":1381,"line_end":1381,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":142784,"byte_end":142787,"line_start":1382,"line_end":1382,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_quickack`].","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":142792,"byte_end":142857,"line_start":1383,"line_end":1383,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":142862,"byte_end":142865,"line_start":1384,"line_end":1384,"column_start":5,"column_end":8}},{"value":"/ [`set_quickack`]: Socket::set_quickack","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":142870,"byte_end":142912,"line_start":1385,"line_end":1385,"column_start":5,"column_end":47}},{"value":"cfg(all(feature = \"all\",\nany(target_os = \"android\", target_os = \"fuchsia\", target_os = \"linux\")))","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":142917,"byte_end":143039,"line_start":1386,"line_end":1389,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":812},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":144246,"byte_end":144258,"line_start":1421,"line_end":1421,"column_start":12,"column_end":24},"name":"set_quickack","qualname":"<crate::Socket>::set_quickack","value":"fn set_quickack(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the value of the `TCP_QUICKACK` option on this socket.","sig":null,"attributes":[{"value":"/ Set the value of the `TCP_QUICKACK` option on this socket.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":143443,"byte_end":143505,"line_start":1404,"line_end":1404,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":143510,"byte_end":143513,"line_start":1405,"line_end":1405,"column_start":5,"column_end":8}},{"value":"/ If set, acks are sent immediately, rather than delayed if needed in accordance to normal","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":143518,"byte_end":143610,"line_start":1406,"line_end":1406,"column_start":5,"column_end":97}},{"value":"/ TCP operation. This flag is not permanent, it only enables a switch to or from quickack mode.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":143615,"byte_end":143712,"line_start":1407,"line_end":1407,"column_start":5,"column_end":102}},{"value":"/ Subsequent operation of the TCP protocol will once again enter/leave quickack mode depending on","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":143717,"byte_end":143816,"line_start":1408,"line_end":1408,"column_start":5,"column_end":104}},{"value":"/ internal protocol processing and factors such as delayed ack timeouts occurring and data transfer.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":143821,"byte_end":143923,"line_start":1409,"line_end":1409,"column_start":5,"column_end":107}},{"value":"cfg(all(feature = \"all\",\nany(target_os = \"android\", target_os = \"fuchsia\", target_os = \"linux\")))","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":143928,"byte_end":144050,"line_start":1410,"line_end":1413,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":813},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":145081,"byte_end":145101,"line_start":1448,"line_end":1448,"column_start":12,"column_end":32},"name":"thin_linear_timeouts","qualname":"<crate::Socket>::thin_linear_timeouts","value":"fn thin_linear_timeouts(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Get the value of the `TCP_THIN_LINEAR_TIMEOUTS` option on this socket.","sig":null,"attributes":[{"value":"/ Get the value of the `TCP_THIN_LINEAR_TIMEOUTS` option on this socket.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":144515,"byte_end":144589,"line_start":1432,"line_end":1432,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":144594,"byte_end":144597,"line_start":1433,"line_end":1433,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_thin_linear_timeouts`].","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":144602,"byte_end":144679,"line_start":1434,"line_end":1434,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":144684,"byte_end":144687,"line_start":1435,"line_end":1435,"column_start":5,"column_end":8}},{"value":"/ [`set_thin_linear_timeouts`]: Socket::set_thin_linear_timeouts","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":144692,"byte_end":144758,"line_start":1436,"line_end":1436,"column_start":5,"column_end":71}},{"value":"cfg(all(feature = \"all\",\nany(target_os = \"android\", target_os = \"fuchsia\", target_os = \"linux\")))","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":144763,"byte_end":144885,"line_start":1437,"line_end":1440,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":815},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":146143,"byte_end":146167,"line_start":1475,"line_end":1475,"column_start":12,"column_end":36},"name":"set_thin_linear_timeouts","qualname":"<crate::Socket>::set_thin_linear_timeouts","value":"fn set_thin_linear_timeouts(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the value of the `TCP_THIN_LINEAR_TIMEOUTS` option on this socket.","sig":null,"attributes":[{"value":"/ Set the value of the `TCP_THIN_LINEAR_TIMEOUTS` option on this socket.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":145372,"byte_end":145446,"line_start":1459,"line_end":1459,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":145451,"byte_end":145454,"line_start":1460,"line_end":1460,"column_start":5,"column_end":8}},{"value":"/ If set, the kernel will dynamically detect a thin-stream connection if there are less than four packets in flight.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":145459,"byte_end":145577,"line_start":1461,"line_end":1461,"column_start":5,"column_end":123}},{"value":"/ With less than four packets in flight the normal TCP fast retransmission will not be effective.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":145582,"byte_end":145681,"line_start":1462,"line_end":1462,"column_start":5,"column_end":104}},{"value":"/ The kernel will modify the retransmission to avoid the very high latencies that thin stream suffer because of exponential backoff.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":145686,"byte_end":145820,"line_start":1463,"line_end":1463,"column_start":5,"column_end":139}},{"value":"cfg(all(feature = \"all\",\nany(target_os = \"android\", target_os = \"fuchsia\", target_os = \"linux\")))","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":145825,"byte_end":145947,"line_start":1464,"line_end":1467,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":816},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":146901,"byte_end":146907,"line_start":1500,"line_end":1500,"column_start":12,"column_end":18},"name":"device","qualname":"<crate::Socket>::device","value":"fn device(&Self) -> io::Result<Option<Vec<u8>>>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value for the `SO_BINDTODEVICE` option on this socket.","sig":null,"attributes":[{"value":"/ Gets the value for the `SO_BINDTODEVICE` option on this socket.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":146436,"byte_end":146503,"line_start":1486,"line_end":1486,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":146508,"byte_end":146511,"line_start":1487,"line_end":1487,"column_start":5,"column_end":8}},{"value":"/ This value gets the socket binded device's interface name.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":146516,"byte_end":146578,"line_start":1488,"line_end":1488,"column_start":5,"column_end":67}},{"value":"cfg(all(feature = \"all\",\nany(target_os = \"android\", target_os = \"fuchsia\", target_os = \"linux\")))","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":146583,"byte_end":146705,"line_start":1489,"line_end":1492,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":818},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":148369,"byte_end":148380,"line_start":1539,"line_end":1539,"column_start":12,"column_end":23},"name":"bind_device","qualname":"<crate::Socket>::bind_device","value":"fn bind_device(&Self, Option<&[u8]>) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `SO_BINDTODEVICE` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `SO_BINDTODEVICE` option on this socket.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":147662,"byte_end":147729,"line_start":1521,"line_end":1521,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":147734,"byte_end":147737,"line_start":1522,"line_end":1522,"column_start":5,"column_end":8}},{"value":"/ If a socket is bound to an interface, only packets received from that","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":147742,"byte_end":147815,"line_start":1523,"line_end":1523,"column_start":5,"column_end":78}},{"value":"/ particular interface are processed by the socket. Note that this only","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":147820,"byte_end":147893,"line_start":1524,"line_end":1524,"column_start":5,"column_end":78}},{"value":"/ works for some socket types, particularly `AF_INET` sockets.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":147898,"byte_end":147962,"line_start":1525,"line_end":1525,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":147967,"byte_end":147970,"line_start":1526,"line_end":1526,"column_start":5,"column_end":8}},{"value":"/ If `interface` is `None` or an empty string it removes the binding.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":147975,"byte_end":148046,"line_start":1527,"line_end":1527,"column_start":5,"column_end":76}},{"value":"cfg(all(feature = \"all\",\nany(target_os = \"android\", target_os = \"fuchsia\", target_os = \"linux\")))","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":148051,"byte_end":148173,"line_start":1528,"line_end":1531,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":820},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":151241,"byte_end":151253,"line_start":1608,"line_end":1608,"column_start":12,"column_end":24},"name":"cpu_affinity","qualname":"<crate::Socket>::cpu_affinity","value":"fn cpu_affinity(&Self) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Get the value of the `SO_INCOMING_CPU` option on this socket.","sig":null,"attributes":[{"value":"/ Get the value of the `SO_INCOMING_CPU` option on this socket.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":150881,"byte_end":150946,"line_start":1601,"line_end":1601,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":150951,"byte_end":150954,"line_start":1602,"line_end":1602,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_cpu_affinity`].","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":150959,"byte_end":151028,"line_start":1603,"line_end":1603,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":151033,"byte_end":151036,"line_start":1604,"line_end":1604,"column_start":5,"column_end":8}},{"value":"/ [`set_cpu_affinity`]: crate::Socket::set_cpu_affinity","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":151041,"byte_end":151098,"line_start":1605,"line_end":1605,"column_start":5,"column_end":62}},{"value":"cfg(all(feature = \"all\", target_os = \"linux\"))","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":151103,"byte_end":151152,"line_start":1606,"line_end":1606,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":822},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":151709,"byte_end":151725,"line_start":1620,"line_end":1620,"column_start":12,"column_end":28},"name":"set_cpu_affinity","qualname":"<crate::Socket>::set_cpu_affinity","value":"fn set_cpu_affinity(&Self, usize) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set value for the `SO_INCOMING_CPU` option on this socket.","sig":null,"attributes":[{"value":"/ Set value for the `SO_INCOMING_CPU` option on this socket.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":151451,"byte_end":151513,"line_start":1615,"line_end":1615,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":151518,"byte_end":151521,"line_start":1616,"line_end":1616,"column_start":5,"column_end":8}},{"value":"/ Sets the CPU affinity of the socket.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":151526,"byte_end":151566,"line_start":1617,"line_end":1617,"column_start":5,"column_end":45}},{"value":"cfg(all(feature = \"all\", target_os = \"linux\"))","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":151571,"byte_end":151620,"line_start":1618,"line_end":1618,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":823},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":152492,"byte_end":152502,"line_start":1648,"line_end":1648,"column_start":12,"column_end":22},"name":"reuse_port","qualname":"<crate::Socket>::reuse_port","value":"fn reuse_port(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Get the value of the `SO_REUSEPORT` option on this socket.","sig":null,"attributes":[{"value":"/ Get the value of the `SO_REUSEPORT` option on this socket.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":151975,"byte_end":152037,"line_start":1631,"line_end":1631,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":152042,"byte_end":152045,"line_start":1632,"line_end":1632,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_reuse_port`].","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":152050,"byte_end":152117,"line_start":1633,"line_end":1633,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":152122,"byte_end":152125,"line_start":1634,"line_end":1634,"column_start":5,"column_end":8}},{"value":"/ [`set_reuse_port`]: crate::Socket::set_reuse_port","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":152130,"byte_end":152183,"line_start":1635,"line_end":1635,"column_start":5,"column_end":58}},{"value":"cfg(all(feature = \"all\",\nnot(any(target_os = \"solaris\", target_os = \"illumos\"))))","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":152188,"byte_end":152294,"line_start":1636,"line_end":1639,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":825},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":153286,"byte_end":153300,"line_start":1672,"line_end":1672,"column_start":12,"column_end":26},"name":"set_reuse_port","qualname":"<crate::Socket>::set_reuse_port","value":"fn set_reuse_port(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set value for the `SO_REUSEPORT` option on this socket.","sig":null,"attributes":[{"value":"/ Set value for the `SO_REUSEPORT` option on this socket.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":152696,"byte_end":152755,"line_start":1655,"line_end":1655,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":152760,"byte_end":152763,"line_start":1656,"line_end":1656,"column_start":5,"column_end":8}},{"value":"/ This indicates that further calls to `bind` may allow reuse of local","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":152768,"byte_end":152840,"line_start":1657,"line_end":1657,"column_start":5,"column_end":77}},{"value":"/ addresses. For IPv4 sockets this means that a socket may bind even when","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":152845,"byte_end":152920,"line_start":1658,"line_end":1658,"column_start":5,"column_end":80}},{"value":"/ there's a socket already listening on this port.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":152925,"byte_end":152977,"line_start":1659,"line_end":1659,"column_start":5,"column_end":57}},{"value":"cfg(all(feature = \"all\",\nnot(any(target_os = \"solaris\", target_os = \"illumos\"))))","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":152982,"byte_end":153088,"line_start":1660,"line_end":1663,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":826},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":154074,"byte_end":154082,"line_start":1699,"line_end":1699,"column_start":12,"column_end":20},"name":"freebind","qualname":"<crate::Socket>::freebind","value":"fn freebind(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Get the value of the `IP_FREEBIND` option on this socket.","sig":null,"attributes":[{"value":"/ Get the value of the `IP_FREEBIND` option on this socket.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":153550,"byte_end":153611,"line_start":1683,"line_end":1683,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":153616,"byte_end":153619,"line_start":1684,"line_end":1684,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_freebind`].","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":153624,"byte_end":153689,"line_start":1685,"line_end":1685,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":153694,"byte_end":153697,"line_start":1686,"line_end":1686,"column_start":5,"column_end":8}},{"value":"/ [`set_freebind`]: crate::Socket::set_freebind","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":153702,"byte_end":153751,"line_start":1687,"line_end":1687,"column_start":5,"column_end":54}},{"value":"cfg(all(feature = \"all\",\nany(target_os = \"android\", target_os = \"fuchsia\", target_os = \"linux\")))","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":153756,"byte_end":153878,"line_start":1688,"line_end":1691,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":828},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":155003,"byte_end":155015,"line_start":1724,"line_end":1724,"column_start":12,"column_end":24},"name":"set_freebind","qualname":"<crate::Socket>::set_freebind","value":"fn set_freebind(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set value for the `IP_FREEBIND` option on this socket.","sig":null,"attributes":[{"value":"/ Set value for the `IP_FREEBIND` option on this socket.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":154277,"byte_end":154335,"line_start":1706,"line_end":1706,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":154340,"byte_end":154343,"line_start":1707,"line_end":1707,"column_start":5,"column_end":8}},{"value":"/ If enabled, this boolean option allows binding to an IP address that is","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":154348,"byte_end":154423,"line_start":1708,"line_end":1708,"column_start":5,"column_end":80}},{"value":"/ nonlocal or does not (yet) exist.  This permits listening on a socket,","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":154428,"byte_end":154502,"line_start":1709,"line_end":1709,"column_start":5,"column_end":79}},{"value":"/ without requiring the underlying network interface or the specified","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":154507,"byte_end":154578,"line_start":1710,"line_end":1710,"column_start":5,"column_end":76}},{"value":"/ dynamic IP address to be up at the time that the application is trying","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":154583,"byte_end":154657,"line_start":1711,"line_end":1711,"column_start":5,"column_end":79}},{"value":"/ to bind to it.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":154662,"byte_end":154680,"line_start":1712,"line_end":1712,"column_start":5,"column_end":23}},{"value":"cfg(all(feature = \"all\",\nany(target_os = \"android\", target_os = \"fuchsia\", target_os = \"linux\")))","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":154685,"byte_end":154807,"line_start":1713,"line_end":1716,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":829},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":155783,"byte_end":155796,"line_start":1747,"line_end":1747,"column_start":12,"column_end":25},"name":"freebind_ipv6","qualname":"<crate::Socket>::freebind_ipv6","value":"fn freebind_ipv6(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Get the value of the `IPV6_FREEBIND` option on this socket.","sig":null,"attributes":[{"value":"/ Get the value of the `IPV6_FREEBIND` option on this socket.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":155266,"byte_end":155329,"line_start":1735,"line_end":1735,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":155334,"byte_end":155337,"line_start":1736,"line_end":1736,"column_start":5,"column_end":8}},{"value":"/ This is an IPv6 counterpart of `IP_FREEBIND` socket option on","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":155342,"byte_end":155407,"line_start":1737,"line_end":1737,"column_start":5,"column_end":70}},{"value":"/ Android/Linux. For more information about this option, see","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":155412,"byte_end":155474,"line_start":1738,"line_end":1738,"column_start":5,"column_end":67}},{"value":"/ [`set_freebind`].","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":155479,"byte_end":155500,"line_start":1739,"line_end":1739,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":155505,"byte_end":155508,"line_start":1740,"line_end":1740,"column_start":5,"column_end":8}},{"value":"/ [`set_freebind`]: crate::Socket::set_freebind","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":155513,"byte_end":155562,"line_start":1741,"line_end":1741,"column_start":5,"column_end":54}},{"value":"cfg(all(feature = \"all\", any(target_os = \"android\", target_os = \"linux\")))","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":155567,"byte_end":155644,"line_start":1742,"line_end":1742,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":831},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":157223,"byte_end":157240,"line_start":1789,"line_end":1789,"column_start":12,"column_end":29},"name":"set_freebind_ipv6","qualname":"<crate::Socket>::set_freebind_ipv6","value":"fn set_freebind_ipv6(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set value for the `IPV6_FREEBIND` option on this socket.","sig":null,"attributes":[{"value":"/ Set value for the `IPV6_FREEBIND` option on this socket.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":155995,"byte_end":156055,"line_start":1754,"line_end":1754,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":156060,"byte_end":156063,"line_start":1755,"line_end":1755,"column_start":5,"column_end":8}},{"value":"/ This is an IPv6 counterpart of `IP_FREEBIND` socket option on","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":156068,"byte_end":156133,"line_start":1756,"line_end":1756,"column_start":5,"column_end":70}},{"value":"/ Android/Linux. For more information about this option, see","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":156138,"byte_end":156200,"line_start":1757,"line_end":1757,"column_start":5,"column_end":67}},{"value":"/ [`set_freebind`].","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":156205,"byte_end":156226,"line_start":1758,"line_end":1758,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":156231,"byte_end":156234,"line_start":1759,"line_end":1759,"column_start":5,"column_end":8}},{"value":"/ [`set_freebind`]: crate::Socket::set_freebind","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":156239,"byte_end":156288,"line_start":1760,"line_end":1760,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":156293,"byte_end":156296,"line_start":1761,"line_end":1761,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":156301,"byte_end":156315,"line_start":1762,"line_end":1762,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":156320,"byte_end":156323,"line_start":1763,"line_end":1763,"column_start":5,"column_end":8}},{"value":"/ On Linux:","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":156328,"byte_end":156341,"line_start":1764,"line_end":1764,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":156346,"byte_end":156349,"line_start":1765,"line_end":1765,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":156354,"byte_end":156361,"line_start":1766,"line_end":1766,"column_start":5,"column_end":12}},{"value":"/ use socket2::{Domain, Socket, Type};","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":156366,"byte_end":156406,"line_start":1767,"line_end":1767,"column_start":5,"column_end":45}},{"value":"/ use std::io::{self, Error, ErrorKind};","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":156411,"byte_end":156453,"line_start":1768,"line_end":1768,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":156458,"byte_end":156461,"line_start":1769,"line_end":1769,"column_start":5,"column_end":8}},{"value":"/ fn enable_freebind(socket: &Socket) -> io::Result<()> {","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":156466,"byte_end":156525,"line_start":1770,"line_end":1770,"column_start":5,"column_end":64}},{"value":"/     match socket.domain()? {","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":156530,"byte_end":156562,"line_start":1771,"line_end":1771,"column_start":5,"column_end":37}},{"value":"/         Domain::IPV4 => socket.set_freebind(true)?,","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":156567,"byte_end":156622,"line_start":1772,"line_end":1772,"column_start":5,"column_end":60}},{"value":"/         Domain::IPV6 => socket.set_freebind_ipv6(true)?,","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":156627,"byte_end":156687,"line_start":1773,"line_end":1773,"column_start":5,"column_end":65}},{"value":"/         _ => return Err(Error::new(ErrorKind::Other, \"unsupported domain\")),","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":156692,"byte_end":156772,"line_start":1774,"line_end":1774,"column_start":5,"column_end":85}},{"value":"/     };","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":156777,"byte_end":156787,"line_start":1775,"line_end":1775,"column_start":5,"column_end":15}},{"value":"/     Ok(())","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":156792,"byte_end":156806,"line_start":1776,"line_end":1776,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":156811,"byte_end":156816,"line_start":1777,"line_end":1777,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":156821,"byte_end":156824,"line_start":1778,"line_end":1778,"column_start":5,"column_end":8}},{"value":"/ # fn main() -> io::Result<()> {","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":156829,"byte_end":156864,"line_start":1779,"line_end":1779,"column_start":5,"column_end":40}},{"value":"/ #     let socket = Socket::new(Domain::IPV6, Type::STREAM, None)?;","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":156869,"byte_end":156939,"line_start":1780,"line_end":1780,"column_start":5,"column_end":75}},{"value":"/ #     enable_freebind(&socket)","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":156944,"byte_end":156978,"line_start":1781,"line_end":1781,"column_start":5,"column_end":39}},{"value":"/ # }","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":156983,"byte_end":156990,"line_start":1782,"line_end":1782,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":156995,"byte_end":157002,"line_start":1783,"line_end":1783,"column_start":5,"column_end":12}},{"value":"cfg(all(feature = \"all\", any(target_os = \"android\", target_os = \"linux\")))","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":157007,"byte_end":157084,"line_start":1784,"line_end":1784,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":832},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":158913,"byte_end":158921,"line_start":1839,"line_end":1839,"column_start":12,"column_end":20},"name":"sendfile","qualname":"<crate::Socket>::sendfile","value":"fn sendfile<F>(&Self, &F, usize, Option<NonZeroUsize>) -> io::Result<usize>\nwhere F: AsRawFd","parent":null,"children":[],"decl_id":null,"docs":" Copies data between a `file` and this socket using the `sendfile(2)`\n system call. Because this copying is done within the kernel,\n `sendfile()` is more efficient than the combination of `read(2)` and\n `write(2)`, which would require transferring data to and from user\n space.","sig":null,"attributes":[{"value":"/ Copies data between a `file` and this socket using the `sendfile(2)`","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":157495,"byte_end":157567,"line_start":1800,"line_end":1800,"column_start":5,"column_end":77}},{"value":"/ system call. Because this copying is done within the kernel,","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":157572,"byte_end":157636,"line_start":1801,"line_end":1801,"column_start":5,"column_end":69}},{"value":"/ `sendfile()` is more efficient than the combination of `read(2)` and","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":157641,"byte_end":157713,"line_start":1802,"line_end":1802,"column_start":5,"column_end":77}},{"value":"/ `write(2)`, which would require transferring data to and from user","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":157718,"byte_end":157788,"line_start":1803,"line_end":1803,"column_start":5,"column_end":75}},{"value":"/ space.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":157793,"byte_end":157803,"line_start":1804,"line_end":1804,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":157808,"byte_end":157811,"line_start":1805,"line_end":1805,"column_start":5,"column_end":8}},{"value":"/ Different OSs support different kinds of `file`s, see the OS","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":157816,"byte_end":157880,"line_start":1806,"line_end":1806,"column_start":5,"column_end":69}},{"value":"/ documentation for what kind of files are supported. Generally *regular*","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":157885,"byte_end":157960,"line_start":1807,"line_end":1807,"column_start":5,"column_end":80}},{"value":"/ files are supported by all OSs.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":157965,"byte_end":158000,"line_start":1808,"line_end":1808,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":158005,"byte_end":158008,"line_start":1809,"line_end":1809,"column_start":5,"column_end":8}},{"value":"/ The `offset` is the absolute offset into the `file` to use as starting","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":158013,"byte_end":158087,"line_start":1810,"line_end":1810,"column_start":5,"column_end":79}},{"value":"/ point.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":158092,"byte_end":158102,"line_start":1811,"line_end":1811,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":158107,"byte_end":158110,"line_start":1812,"line_end":1812,"column_start":5,"column_end":8}},{"value":"/ Depending on the OS this function *may* change the offset of `file`. For","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":158115,"byte_end":158191,"line_start":1813,"line_end":1813,"column_start":5,"column_end":81}},{"value":"/ the best results reset the offset of the file before using it again.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":158196,"byte_end":158268,"line_start":1814,"line_end":1814,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":158273,"byte_end":158276,"line_start":1815,"line_end":1815,"column_start":5,"column_end":8}},{"value":"/ The `length` determines how many bytes to send, where a length of `None`","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":158281,"byte_end":158357,"line_start":1816,"line_end":1816,"column_start":5,"column_end":81}},{"value":"/ means it will try to send all bytes.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":158362,"byte_end":158402,"line_start":1817,"line_end":1817,"column_start":5,"column_end":45}},{"value":"cfg(all(feature = \"all\",\nany(target_os = \"android\", target_os = \"freebsd\", target_os = \"linux\",\ntarget_vendor = \"apple\",)))","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":158407,"byte_end":158613,"line_start":1818,"line_end":1826,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":836},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":162089,"byte_end":162109,"line_start":1938,"line_end":1938,"column_start":12,"column_end":32},"name":"set_tcp_user_timeout","qualname":"<crate::Socket>::set_tcp_user_timeout","value":"fn set_tcp_user_timeout(&Self, Option<Duration>) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the value of the `TCP_USER_TIMEOUT` option on this socket.","sig":null,"attributes":[{"value":"/ Set the value of the `TCP_USER_TIMEOUT` option on this socket.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":161134,"byte_end":161200,"line_start":1917,"line_end":1917,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":161205,"byte_end":161208,"line_start":1918,"line_end":1918,"column_start":5,"column_end":8}},{"value":"/ If set, this specifies the maximum amount of time that transmitted data may remain","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":161213,"byte_end":161299,"line_start":1919,"line_end":1919,"column_start":5,"column_end":91}},{"value":"/ unacknowledged or buffered data may remain untransmitted before TCP will forcibly close the","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":161304,"byte_end":161399,"line_start":1920,"line_end":1920,"column_start":5,"column_end":100}},{"value":"/ corresponding connection.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":161404,"byte_end":161433,"line_start":1921,"line_end":1921,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":161438,"byte_end":161441,"line_start":1922,"line_end":1922,"column_start":5,"column_end":8}},{"value":"/ Setting `timeout` to `None` or a zero duration causes the system default timeouts to","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":161446,"byte_end":161534,"line_start":1923,"line_end":1923,"column_start":5,"column_end":93}},{"value":"/ be used. If `timeout` in milliseconds is larger than `c_uint::MAX`, the timeout is clamped","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":161539,"byte_end":161633,"line_start":1924,"line_end":1924,"column_start":5,"column_end":99}},{"value":"/ to `c_uint::MAX`. For example, when `c_uint` is a 32-bit value, this limits the timeout to","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":161638,"byte_end":161732,"line_start":1925,"line_end":1925,"column_start":5,"column_end":99}},{"value":"/ approximately 49.71 days.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":161737,"byte_end":161766,"line_start":1926,"line_end":1926,"column_start":5,"column_end":34}},{"value":"cfg(all(feature = \"all\",\nany(target_os = \"android\", target_os = \"fuchsia\", target_os = \"linux\")))","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":161771,"byte_end":161893,"line_start":1927,"line_end":1930,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":838},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":163060,"byte_end":163076,"line_start":1968,"line_end":1968,"column_start":12,"column_end":28},"name":"tcp_user_timeout","qualname":"<crate::Socket>::tcp_user_timeout","value":"fn tcp_user_timeout(&Self) -> io::Result<Option<Duration>>","parent":null,"children":[],"decl_id":null,"docs":" Get the value of the `TCP_USER_TIMEOUT` option on this socket.","sig":null,"attributes":[{"value":"/ Get the value of the `TCP_USER_TIMEOUT` option on this socket.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":162514,"byte_end":162580,"line_start":1952,"line_end":1952,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":162585,"byte_end":162588,"line_start":1953,"line_end":1953,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_tcp_user_timeout`].","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":162593,"byte_end":162666,"line_start":1954,"line_end":1954,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":162671,"byte_end":162674,"line_start":1955,"line_end":1955,"column_start":5,"column_end":8}},{"value":"/ [`set_tcp_user_timeout`]: Socket::set_tcp_user_timeout","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":162679,"byte_end":162737,"line_start":1956,"line_end":1956,"column_start":5,"column_end":63}},{"value":"cfg(all(feature = \"all\",\nany(target_os = \"android\", target_os = \"fuchsia\", target_os = \"linux\")))","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":162742,"byte_end":162864,"line_start":1957,"line_end":1960,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":840},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":163930,"byte_end":163943,"line_start":1988,"line_end":1988,"column_start":12,"column_end":25},"name":"attach_filter","qualname":"<crate::Socket>::attach_filter","value":"fn attach_filter(&Self, &[libc::sock_filter]) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Attach Berkeley Packet Filter(BPF) on this socket.","sig":null,"attributes":[{"value":"/ Attach Berkeley Packet Filter(BPF) on this socket.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":163488,"byte_end":163542,"line_start":1981,"line_end":1981,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":163547,"byte_end":163550,"line_start":1982,"line_end":1982,"column_start":5,"column_end":8}},{"value":"/ BPF allows a user-space program to attach a filter onto any socket","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":163555,"byte_end":163625,"line_start":1983,"line_end":1983,"column_start":5,"column_end":75}},{"value":"/ and allow or disallow certain types of data to come through the socket.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":163630,"byte_end":163705,"line_start":1984,"line_end":1984,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":163710,"byte_end":163713,"line_start":1985,"line_end":1985,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [filter](https://www.kernel.org/doc/html/v5.12/networking/filter.html)","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":163718,"byte_end":163836,"line_start":1986,"line_end":1986,"column_start":5,"column_end":123}},{"value":"cfg(all(feature = \"all\", any(target_os = \"linux\", target_os = \"android\")))","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":163841,"byte_end":163918,"line_start":1987,"line_end":1987,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":841},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":164570,"byte_end":164583,"line_start":2008,"line_end":2008,"column_start":12,"column_end":25},"name":"detach_filter","qualname":"<crate::Socket>::detach_filter","value":"fn detach_filter(&Self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Detach Berkeley Packet Filter(BPF) from this socket.","sig":null,"attributes":[{"value":"/ Detach Berkeley Packet Filter(BPF) from this socket.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":164342,"byte_end":164398,"line_start":2004,"line_end":2004,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":164403,"byte_end":164406,"line_start":2005,"line_end":2005,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`attach_filter`]","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":164411,"byte_end":164476,"line_start":2006,"line_end":2006,"column_start":5,"column_end":70}},{"value":"cfg(all(feature = \"all\", any(target_os = \"linux\", target_os = \"android\")))","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":164481,"byte_end":164558,"line_start":2007,"line_end":2007,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":843},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":164786,"byte_end":164795,"line_start":2015,"line_end":2015,"column_start":8,"column_end":17},"name":"as_raw_fd","qualname":"<crate::Socket as std::os::unix::io::AsRawFd>::as_raw_fd","value":"fn as_raw_fd(&Self) -> c_int","parent":{"krate":1,"index":6771},"children":[],"decl_id":{"krate":1,"index":6772},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":845},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":164923,"byte_end":164934,"line_start":2022,"line_end":2022,"column_start":8,"column_end":19},"name":"into_raw_fd","qualname":"<crate::Socket as std::os::unix::io::IntoRawFd>::into_raw_fd","value":"fn into_raw_fd(Self) -> c_int","parent":{"krate":1,"index":6775},"children":[],"decl_id":{"krate":1,"index":6776},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":847},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":165070,"byte_end":165081,"line_start":2029,"line_end":2029,"column_start":15,"column_end":26},"name":"from_raw_fd","qualname":"<crate::Socket as std::os::unix::io::FromRawFd>::from_raw_fd","value":"unsafe fn from_raw_fd(c_int) -> crate::Socket","parent":{"krate":1,"index":6773},"children":[],"decl_id":{"krate":1,"index":6774},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":957},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":5023,"byte_end":5029,"line_start":154,"line_end":154,"column_start":12,"column_end":18},"name":"Domain","qualname":"::Domain","value":"","parent":null,"children":[],"decl_id":null,"docs":" Specification of the communication domain for a socket.","sig":null,"attributes":[{"value":"/ Specification of the communication domain for a socket.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":4519,"byte_end":4578,"line_start":144,"line_end":144,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":4579,"byte_end":4582,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ This is a newtype wrapper around an integer which provides a nicer API in","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":4583,"byte_end":4660,"line_start":146,"line_end":146,"column_start":1,"column_end":78}},{"value":"/ addition to an injection point for documentation. Convenience constants such","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":4661,"byte_end":4741,"line_start":147,"line_end":147,"column_start":1,"column_end":81}},{"value":"/ as [`Domain::IPV4`], [`Domain::IPV6`], etc, are provided to avoid reaching","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":4742,"byte_end":4820,"line_start":148,"line_end":148,"column_start":1,"column_end":79}},{"value":"/ into libc for various constants.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":4821,"byte_end":4857,"line_start":149,"line_end":149,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":4858,"byte_end":4861,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ This type is freely interconvertible with C's `int` type, however, if a raw","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":4862,"byte_end":4941,"line_start":151,"line_end":151,"column_start":1,"column_end":80}},{"value":"/ value needs to be provided.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":4942,"byte_end":4973,"line_start":152,"line_end":152,"column_start":1,"column_end":32}}]},{"kind":"Const","id":{"krate":0,"index":864},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":5134,"byte_end":5138,"line_start":158,"line_end":158,"column_start":15,"column_end":19},"name":"IPV4","qualname":"::Domain::IPV4","value":"Domain","parent":{"krate":0,"index":863},"children":[],"decl_id":null,"docs":" Domain for IPv4 communication, corresponding to `AF_INET`.\n","sig":null,"attributes":[{"value":"/ Domain for IPv4 communication, corresponding to `AF_INET`.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":5057,"byte_end":5119,"line_start":157,"line_end":157,"column_start":5,"column_end":67}}]},{"kind":"Const","id":{"krate":0,"index":865},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":5254,"byte_end":5258,"line_start":161,"line_end":161,"column_start":15,"column_end":19},"name":"IPV6","qualname":"::Domain::IPV6","value":"Domain","parent":{"krate":0,"index":863},"children":[],"decl_id":null,"docs":" Domain for IPv6 communication, corresponding to `AF_INET6`.\n","sig":null,"attributes":[{"value":"/ Domain for IPv6 communication, corresponding to `AF_INET6`.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":5176,"byte_end":5239,"line_start":160,"line_end":160,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":866},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":5360,"byte_end":5371,"line_start":164,"line_end":164,"column_start":18,"column_end":29},"name":"for_address","qualname":"<Domain>::for_address","value":"const fn for_address(SocketAddr) -> Domain","parent":null,"children":[],"decl_id":null,"docs":" Returns the correct domain for `address`.\n","sig":null,"attributes":[{"value":"/ Returns the correct domain for `address`.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":5297,"byte_end":5342,"line_start":163,"line_end":163,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":868},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":5579,"byte_end":5583,"line_start":173,"line_end":173,"column_start":8,"column_end":12},"name":"from","qualname":"<Domain as std::convert::From>::from","value":"fn from(c_int) -> Domain","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":870},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":5670,"byte_end":5674,"line_start":179,"line_end":179,"column_start":8,"column_end":12},"name":"from","qualname":"<c_int as std::convert::From>::from","value":"fn from(Domain) -> c_int","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":970},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":6219,"byte_end":6223,"line_start":194,"line_end":194,"column_start":12,"column_end":16},"name":"Type","qualname":"::Type","value":"","parent":null,"children":[],"decl_id":null,"docs":" Specification of communication semantics on a socket.","sig":null,"attributes":[{"value":"/ Specification of communication semantics on a socket.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":5718,"byte_end":5775,"line_start":184,"line_end":184,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":5776,"byte_end":5779,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"/ This is a newtype wrapper around an integer which provides a nicer API in","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":5780,"byte_end":5857,"line_start":186,"line_end":186,"column_start":1,"column_end":78}},{"value":"/ addition to an injection point for documentation. Convenience constants such","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":5858,"byte_end":5938,"line_start":187,"line_end":187,"column_start":1,"column_end":81}},{"value":"/ as [`Type::STREAM`], [`Type::DGRAM`], etc, are provided to avoid reaching","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":5939,"byte_end":6016,"line_start":188,"line_end":188,"column_start":1,"column_end":78}},{"value":"/ into libc for various constants.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":6017,"byte_end":6053,"line_start":189,"line_end":189,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":6054,"byte_end":6057,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ This type is freely interconvertible with C's `int` type, however, if a raw","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":6058,"byte_end":6137,"line_start":191,"line_end":191,"column_start":1,"column_end":80}},{"value":"/ value needs to be provided.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":6138,"byte_end":6169,"line_start":192,"line_end":192,"column_start":1,"column_end":32}}]},{"kind":"Const","id":{"krate":0,"index":872},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":6352,"byte_end":6358,"line_start":200,"line_end":200,"column_start":15,"column_end":21},"name":"STREAM","qualname":"::Type::STREAM","value":"Type","parent":{"krate":0,"index":871},"children":[],"decl_id":null,"docs":" Type corresponding to `SOCK_STREAM`.","sig":null,"attributes":[{"value":"/ Type corresponding to `SOCK_STREAM`.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":6249,"byte_end":6289,"line_start":197,"line_end":197,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":6294,"byte_end":6297,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ Used for protocols such as TCP.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":6302,"byte_end":6337,"line_start":199,"line_end":199,"column_start":5,"column_end":40}}]},{"kind":"Const","id":{"krate":0,"index":873},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":6498,"byte_end":6503,"line_start":205,"line_end":205,"column_start":15,"column_end":20},"name":"DGRAM","qualname":"::Type::DGRAM","value":"Type","parent":{"krate":0,"index":871},"children":[],"decl_id":null,"docs":" Type corresponding to `SOCK_DGRAM`.","sig":null,"attributes":[{"value":"/ Type corresponding to `SOCK_DGRAM`.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":6396,"byte_end":6435,"line_start":202,"line_end":202,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":6440,"byte_end":6443,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ Used for protocols such as UDP.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":6448,"byte_end":6483,"line_start":204,"line_end":204,"column_start":5,"column_end":40}}]},{"kind":"Const","id":{"krate":0,"index":874},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":6677,"byte_end":6686,"line_start":210,"line_end":210,"column_start":15,"column_end":24},"name":"SEQPACKET","qualname":"::Type::SEQPACKET","value":"Type","parent":{"krate":0,"index":871},"children":[],"decl_id":null,"docs":" Type corresponding to `SOCK_SEQPACKET`.\n","sig":null,"attributes":[{"value":"/ Type corresponding to `SOCK_SEQPACKET`.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":6540,"byte_end":6583,"line_start":207,"line_end":207,"column_start":5,"column_end":48}},{"value":"cfg(feature = \"all\")","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":6588,"byte_end":6611,"line_start":208,"line_end":208,"column_start":5,"column_end":28}}]},{"kind":"Const","id":{"krate":0,"index":875},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":6920,"byte_end":6923,"line_start":215,"line_end":215,"column_start":15,"column_end":18},"name":"RAW","qualname":"::Type::RAW","value":"Type","parent":{"krate":0,"index":871},"children":[],"decl_id":null,"docs":" Type corresponding to `SOCK_RAW`.\n","sig":null,"attributes":[{"value":"/ Type corresponding to `SOCK_RAW`.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":6727,"byte_end":6764,"line_start":212,"line_end":212,"column_start":5,"column_end":42}},{"value":"cfg(all(feature = \"all\", not(target_os = \"redox\")))","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":6769,"byte_end":6823,"line_start":213,"line_end":213,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":877},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":6991,"byte_end":6995,"line_start":219,"line_end":219,"column_start":8,"column_end":12},"name":"from","qualname":"<Type as std::convert::From>::from","value":"fn from(c_int) -> Type","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":879},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":7076,"byte_end":7080,"line_start":225,"line_end":225,"column_start":8,"column_end":12},"name":"from","qualname":"<c_int as std::convert::From>::from","value":"fn from(Type) -> c_int","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":983},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":7495,"byte_end":7503,"line_start":238,"line_end":238,"column_start":12,"column_end":20},"name":"Protocol","qualname":"::Protocol","value":"","parent":null,"children":[],"decl_id":null,"docs":" Protocol specification used for creating sockets via `Socket::new`.","sig":null,"attributes":[{"value":"/ Protocol specification used for creating sockets via `Socket::new`.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":7122,"byte_end":7193,"line_start":230,"line_end":230,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":7194,"byte_end":7197,"line_start":231,"line_end":231,"column_start":1,"column_end":4}},{"value":"/ This is a newtype wrapper around an integer which provides a nicer API in","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":7198,"byte_end":7275,"line_start":232,"line_end":232,"column_start":1,"column_end":78}},{"value":"/ addition to an injection point for documentation.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":7276,"byte_end":7329,"line_start":233,"line_end":233,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":7330,"byte_end":7333,"line_start":234,"line_end":234,"column_start":1,"column_end":4}},{"value":"/ This type is freely interconvertible with C's `int` type, however, if a raw","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":7334,"byte_end":7413,"line_start":235,"line_end":235,"column_start":1,"column_end":80}},{"value":"/ value needs to be provided.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":7414,"byte_end":7445,"line_start":236,"line_end":236,"column_start":1,"column_end":32}}]},{"kind":"Const","id":{"krate":0,"index":881},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":7587,"byte_end":7593,"line_start":242,"line_end":242,"column_start":15,"column_end":21},"name":"ICMPV4","qualname":"::Protocol::ICMPV4","value":"Protocol","parent":{"krate":0,"index":880},"children":[],"decl_id":null,"docs":" Protocol corresponding to `ICMPv4`.\n","sig":null,"attributes":[{"value":"/ Protocol corresponding to `ICMPv4`.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":7533,"byte_end":7572,"line_start":241,"line_end":241,"column_start":5,"column_end":44}}]},{"kind":"Const","id":{"krate":0,"index":882},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":7694,"byte_end":7700,"line_start":245,"line_end":245,"column_start":15,"column_end":21},"name":"ICMPV6","qualname":"::Protocol::ICMPV6","value":"Protocol","parent":{"krate":0,"index":880},"children":[],"decl_id":null,"docs":" Protocol corresponding to `ICMPv6`.\n","sig":null,"attributes":[{"value":"/ Protocol corresponding to `ICMPv6`.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":7640,"byte_end":7679,"line_start":244,"line_end":244,"column_start":5,"column_end":44}}]},{"kind":"Const","id":{"krate":0,"index":883},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":7800,"byte_end":7803,"line_start":248,"line_end":248,"column_start":15,"column_end":18},"name":"TCP","qualname":"::Protocol::TCP","value":"Protocol","parent":{"krate":0,"index":880},"children":[],"decl_id":null,"docs":" Protocol corresponding to `TCP`.\n","sig":null,"attributes":[{"value":"/ Protocol corresponding to `TCP`.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":7749,"byte_end":7785,"line_start":247,"line_end":247,"column_start":5,"column_end":41}}]},{"kind":"Const","id":{"krate":0,"index":884},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":7900,"byte_end":7903,"line_start":251,"line_end":251,"column_start":15,"column_end":18},"name":"UDP","qualname":"::Protocol::UDP","value":"Protocol","parent":{"krate":0,"index":880},"children":[],"decl_id":null,"docs":" Protocol corresponding to `UDP`.\n","sig":null,"attributes":[{"value":"/ Protocol corresponding to `UDP`.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":7849,"byte_end":7885,"line_start":250,"line_end":250,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":886},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":7986,"byte_end":7990,"line_start":255,"line_end":255,"column_start":8,"column_end":12},"name":"from","qualname":"<Protocol as std::convert::From>::from","value":"fn from(c_int) -> Protocol","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":888},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":8083,"byte_end":8087,"line_start":261,"line_end":261,"column_start":8,"column_end":12},"name":"from","qualname":"<c_int as std::convert::From>::from","value":"fn from(Protocol) -> c_int","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":996},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":8374,"byte_end":8383,"line_start":272,"line_end":272,"column_start":12,"column_end":21},"name":"RecvFlags","qualname":"::RecvFlags","value":"","parent":null,"children":[],"decl_id":null,"docs":" Flags for incoming messages.","sig":null,"attributes":[{"value":"/ Flags for incoming messages.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":8133,"byte_end":8165,"line_start":266,"line_end":266,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":8166,"byte_end":8169,"line_start":267,"line_end":267,"column_start":1,"column_end":4}},{"value":"/ Flags provide additional information about incoming messages.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":8170,"byte_end":8235,"line_start":268,"line_end":268,"column_start":1,"column_end":66}},{"value":"cfg(not(target_os = \"redox\"))","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":8236,"byte_end":8268,"line_start":269,"line_end":269,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":890},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":8754,"byte_end":8766,"line_start":283,"line_end":283,"column_start":18,"column_end":30},"name":"is_truncated","qualname":"<RecvFlags>::is_truncated","value":"const fn is_truncated(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if the message contains a truncated datagram.","sig":null,"attributes":[{"value":"/ Check if the message contains a truncated datagram.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":8447,"byte_end":8502,"line_start":276,"line_end":276,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":8507,"byte_end":8510,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ This flag is only used for datagram-based sockets,","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":8515,"byte_end":8569,"line_start":278,"line_end":278,"column_start":5,"column_end":59}},{"value":"/ not for stream sockets.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":8574,"byte_end":8601,"line_start":279,"line_end":279,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":8606,"byte_end":8609,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ On Unix this corresponds to the `MSG_TRUNC` flag.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":8614,"byte_end":8667,"line_start":281,"line_end":281,"column_start":5,"column_end":58}},{"value":"/ On Windows this corresponds to the `WSAEMSGSIZE` error code.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":8672,"byte_end":8736,"line_start":282,"line_end":282,"column_start":5,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":891},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":8981,"byte_end":8997,"line_start":292,"line_end":292,"column_start":12,"column_end":28},"name":"MaybeUninitSlice","qualname":"::MaybeUninitSlice","value":"","parent":null,"children":[],"decl_id":null,"docs":" A version of [`IoSliceMut`] that allows the buffer to be uninitialised.","sig":null,"attributes":[{"value":"/ A version of [`IoSliceMut`] that allows the buffer to be uninitialised.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":8829,"byte_end":8904,"line_start":288,"line_end":288,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":8905,"byte_end":8908,"line_start":289,"line_end":289,"column_start":1,"column_end":4}},{"value":"/ [`IoSliceMut`]: std::io::IoSliceMut","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":8909,"byte_end":8948,"line_start":290,"line_end":290,"column_start":1,"column_end":40}},{"value":"repr(transparent)","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":8949,"byte_end":8969,"line_start":291,"line_end":291,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":897},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":9085,"byte_end":9088,"line_start":295,"line_end":295,"column_start":8,"column_end":11},"name":"fmt","qualname":"<MaybeUninitSlice as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10108},"children":[],"decl_id":{"krate":2,"index":10109},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":900},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":9399,"byte_end":9402,"line_start":306,"line_end":306,"column_start":12,"column_end":15},"name":"new","qualname":"<MaybeUninitSlice>::new","value":"fn new(&'a mut [MaybeUninit<u8>]) -> MaybeUninitSlice","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `MaybeUninitSlice` wrapping a byte slice.","sig":null,"attributes":[{"value":"/ Creates a new `MaybeUninitSlice` wrapping a byte slice.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":9236,"byte_end":9295,"line_start":301,"line_end":301,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":9300,"byte_end":9303,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":9308,"byte_end":9320,"line_start":303,"line_end":303,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":9325,"byte_end":9328,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ Panics on Windows if the slice is larger than 4GB.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":9333,"byte_end":9387,"line_start":305,"line_end":305,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":904},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":9615,"byte_end":9620,"line_start":314,"line_end":314,"column_start":8,"column_end":13},"name":"deref","qualname":"<MaybeUninitSlice as std::ops::Deref>::deref","value":"fn deref(&Self) -> &[MaybeUninit<u8>]","parent":{"krate":2,"index":3398},"children":[],"decl_id":{"krate":2,"index":3400},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":907},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":9739,"byte_end":9748,"line_start":320,"line_end":320,"column_start":8,"column_end":17},"name":"deref_mut","qualname":"<MaybeUninitSlice as std::ops::DerefMut>::deref_mut","value":"fn deref_mut(&mut Self) -> &mut [MaybeUninit<u8>]","parent":{"krate":2,"index":3411},"children":[],"decl_id":{"krate":2,"index":3412},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1009},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":9957,"byte_end":9969,"line_start":329,"line_end":329,"column_start":12,"column_end":24},"name":"TcpKeepalive","qualname":"::TcpKeepalive","value":"TcpKeepalive {  }","parent":null,"children":[{"krate":0,"index":1010},{"krate":0,"index":1011},{"krate":0,"index":1012}],"decl_id":null,"docs":" Configures a socket's TCP keepalive parameters.","sig":null,"attributes":[{"value":"/ Configures a socket's TCP keepalive parameters.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":9827,"byte_end":9878,"line_start":325,"line_end":325,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":9879,"byte_end":9882,"line_start":326,"line_end":326,"column_start":1,"column_end":4}},{"value":"/ See [`Socket::set_tcp_keepalive`].","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":9883,"byte_end":9921,"line_start":327,"line_end":327,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":909},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":10313,"byte_end":10316,"line_start":339,"line_end":339,"column_start":18,"column_end":21},"name":"new","qualname":"<TcpKeepalive>::new","value":"const fn new() -> TcpKeepalive","parent":null,"children":[],"decl_id":null,"docs":" Returns a new, empty set of TCP keepalive parameters.\n","sig":null,"attributes":[{"value":"/ Returns a new, empty set of TCP keepalive parameters.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":10238,"byte_end":10295,"line_start":338,"line_end":338,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":910},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":11175,"byte_end":11184,"line_start":360,"line_end":360,"column_start":18,"column_end":27},"name":"with_time","qualname":"<TcpKeepalive>::with_time","value":"const fn with_time(Self, Duration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the amount of time after which TCP keepalive probes will be sent on\n idle connections.","sig":null,"attributes":[{"value":"/ Set the amount of time after which TCP keepalive probes will be sent on","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":10629,"byte_end":10704,"line_start":349,"line_end":349,"column_start":5,"column_end":80}},{"value":"/ idle connections.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":10709,"byte_end":10730,"line_start":350,"line_end":350,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":10735,"byte_end":10738,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ This will set `TCP_KEEPALIVE` on macOS and iOS, and","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":10743,"byte_end":10798,"line_start":352,"line_end":352,"column_start":5,"column_end":60}},{"value":"/ `TCP_KEEPIDLE` on all other Unix operating systems, except","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":10803,"byte_end":10865,"line_start":353,"line_end":353,"column_start":5,"column_end":67}},{"value":"/ OpenBSD and Haiku which don't support any way to set this","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":10870,"byte_end":10931,"line_start":354,"line_end":354,"column_start":5,"column_end":66}},{"value":"/ option. On Windows, this sets the value of the `tcp_keepalive`","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":10936,"byte_end":11002,"line_start":355,"line_end":355,"column_start":5,"column_end":71}},{"value":"/ struct's `keepalivetime` field.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":11007,"byte_end":11042,"line_start":356,"line_end":356,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":11047,"byte_end":11050,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ Some platforms specify this value in seconds, so sub-second","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":11055,"byte_end":11118,"line_start":358,"line_end":358,"column_start":5,"column_end":68}},{"value":"/ specifications may be omitted.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":11123,"byte_end":11157,"line_start":359,"line_end":359,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":911},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":12494,"byte_end":12507,"line_start":405,"line_end":405,"column_start":18,"column_end":31},"name":"with_interval","qualname":"<TcpKeepalive>::with_interval","value":"const fn with_interval(Self, Duration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the value of the `TCP_KEEPINTVL` option. On Windows, this sets the\n value of the `tcp_keepalive` struct's `keepaliveinterval` field.","sig":null,"attributes":[{"value":"/ Set the value of the `TCP_KEEPINTVL` option. On Windows, this sets the","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":11302,"byte_end":11376,"line_start":367,"line_end":367,"column_start":5,"column_end":79}},{"value":"/ value of the `tcp_keepalive` struct's `keepaliveinterval` field.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":11381,"byte_end":11449,"line_start":368,"line_end":368,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":11454,"byte_end":11457,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ Sets the time interval between TCP keepalive probes.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":11462,"byte_end":11518,"line_start":370,"line_end":370,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":11523,"byte_end":11526,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ Some platforms specify this value in seconds, so sub-second","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":11531,"byte_end":11594,"line_start":372,"line_end":372,"column_start":5,"column_end":68}},{"value":"/ specifications may be omitted.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":11599,"byte_end":11633,"line_start":373,"line_end":373,"column_start":5,"column_end":39}},{"value":"cfg(all(feature = \"all\",\nany(target_os = \"android\", target_os = \"dragonfly\", target_os = \"freebsd\",\ntarget_os = \"fuchsia\", target_os = \"illumos\", target_os = \"linux\", target_os =\n\"netbsd\", target_vendor = \"apple\", windows,)))","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":11638,"byte_end":12006,"line_start":374,"line_end":387,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":912},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":13678,"byte_end":13690,"line_start":446,"line_end":446,"column_start":18,"column_end":30},"name":"with_retries","qualname":"<TcpKeepalive>::with_retries","value":"const fn with_retries(Self, u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the value of the `TCP_KEEPCNT` option.","sig":null,"attributes":[{"value":"/ Set the value of the `TCP_KEEPCNT` option.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":12637,"byte_end":12683,"line_start":412,"line_end":412,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":12688,"byte_end":12691,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ Set the maximum number of TCP keepalive probes that will be sent before","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":12696,"byte_end":12771,"line_start":414,"line_end":414,"column_start":5,"column_end":80}},{"value":"/ dropping a connection, if TCP keepalive is enabled on this socket.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":12776,"byte_end":12846,"line_start":415,"line_end":415,"column_start":5,"column_end":75}},{"value":"cfg(all(feature = \"all\",\nany(doc, target_os = \"android\", target_os = \"dragonfly\", target_os =\n\"freebsd\", target_os = \"fuchsia\", target_os = \"illumos\", target_os = \"linux\",\ntarget_os = \"netbsd\", target_vendor = \"apple\",)))","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":12851,"byte_end":13215,"line_start":416,"line_end":429,"column_start":5,"column_end":8}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockaddr.rs","byte_start":14437,"byte_end":14445,"line_start":23,"line_end":23,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":90}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockaddr.rs","byte_start":21349,"byte_end":21357,"line_start":214,"line_end":214,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":92}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockaddr.rs","byte_start":21570,"byte_end":21578,"line_start":223,"line_end":223,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":94}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockaddr.rs","byte_start":22611,"byte_end":22619,"line_start":251,"line_end":251,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":96}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockaddr.rs","byte_start":24059,"byte_end":24067,"line_start":292,"line_end":292,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":98}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":29112,"byte_end":29118,"line_start":79,"line_end":79,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":189},{"krate":0,"index":190},{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":193},{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":201},{"krate":0,"index":202},{"krate":0,"index":203},{"krate":0,"index":204},{"krate":0,"index":206},{"krate":0,"index":207},{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":218},{"krate":0,"index":219},{"krate":0,"index":220},{"krate":0,"index":221},{"krate":0,"index":222},{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":225},{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":229},{"krate":0,"index":230},{"krate":0,"index":231}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":53756,"byte_end":53762,"line_start":740,"line_end":740,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":235},{"krate":0,"index":237},{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":241},{"krate":0,"index":242},{"krate":0,"index":243},{"krate":0,"index":244},{"krate":0,"index":246},{"krate":0,"index":247},{"krate":0,"index":249},{"krate":0,"index":250},{"krate":0,"index":251},{"krate":0,"index":252},{"krate":0,"index":254},{"krate":0,"index":255},{"krate":0,"index":257},{"krate":0,"index":258},{"krate":0,"index":259}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":63494,"byte_end":63500,"line_start":1012,"line_end":1012,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":263},{"krate":0,"index":265},{"krate":0,"index":266},{"krate":0,"index":268},{"krate":0,"index":269},{"krate":0,"index":270},{"krate":0,"index":271},{"krate":0,"index":272},{"krate":0,"index":273},{"krate":0,"index":274},{"krate":0,"index":275},{"krate":0,"index":276},{"krate":0,"index":277},{"krate":0,"index":279},{"krate":0,"index":280},{"krate":0,"index":282},{"krate":0,"index":283},{"krate":0,"index":285},{"krate":0,"index":286},{"krate":0,"index":287},{"krate":0,"index":289},{"krate":0,"index":290}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":79158,"byte_end":79164,"line_start":1446,"line_end":1446,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":293},{"krate":0,"index":294},{"krate":0,"index":295},{"krate":0,"index":297},{"krate":0,"index":298},{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":303},{"krate":0,"index":304},{"krate":0,"index":306},{"krate":0,"index":307},{"krate":0,"index":309}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":86102,"byte_end":86108,"line_start":1637,"line_end":1637,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":311},{"krate":0,"index":312},{"krate":0,"index":314},{"krate":0,"index":316},{"krate":0,"index":317},{"krate":0,"index":319}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":92148,"byte_end":92154,"line_start":1818,"line_end":1818,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":321},{"krate":0,"index":322}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":93645,"byte_end":93651,"line_start":1852,"line_end":1852,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":330},{"krate":0,"index":331},{"krate":0,"index":332}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":94330,"byte_end":94336,"line_start":1882,"line_end":1882,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":339}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockref.rs","byte_start":98356,"byte_end":98363,"line_start":95,"line_end":95,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":369},{"krate":0,"index":370}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockref.rs","byte_start":98624,"byte_end":98631,"line_start":106,"line_end":106,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":374}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockref.rs","byte_start":99544,"byte_end":99551,"line_start":139,"line_end":139,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":376}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":106531,"byte_end":106537,"line_start":224,"line_end":224,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":682},{"krate":0,"index":683},{"krate":0,"index":684}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":108028,"byte_end":108032,"line_start":270,"line_end":270,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":686},{"krate":0,"index":687},{"krate":0,"index":688}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":111241,"byte_end":111250,"line_start":397,"line_end":397,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":690},{"krate":0,"index":691}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":112092,"byte_end":112101,"line_start":421,"line_end":421,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":693}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":112587,"byte_end":112603,"line_start":437,"line_end":437,"column_start":26,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":112637,"byte_end":112653,"line_start":439,"line_end":439,"column_start":26,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":112671,"byte_end":112687,"line_start":441,"line_end":441,"column_start":10,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":704},{"krate":0,"index":705},{"krate":0,"index":706}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":113329,"byte_end":113337,"line_start":462,"line_end":462,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":708}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":115841,"byte_end":115849,"line_start":527,"line_end":527,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":713},{"krate":0,"index":716}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":132401,"byte_end":132407,"line_start":1048,"line_end":1048,"column_start":13,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":791},{"krate":0,"index":792},{"krate":0,"index":794},{"krate":0,"index":795},{"krate":0,"index":796},{"krate":0,"index":798},{"krate":0,"index":799},{"krate":0,"index":801},{"krate":0,"index":802},{"krate":0,"index":804},{"krate":0,"index":806},{"krate":0,"index":807},{"krate":0,"index":809},{"krate":0,"index":810},{"krate":0,"index":812},{"krate":0,"index":813},{"krate":0,"index":815},{"krate":0,"index":816},{"krate":0,"index":818},{"krate":0,"index":820},{"krate":0,"index":822},{"krate":0,"index":823},{"krate":0,"index":825},{"krate":0,"index":826},{"krate":0,"index":828},{"krate":0,"index":829},{"krate":0,"index":831},{"krate":0,"index":832},{"krate":0,"index":834},{"krate":0,"index":836},{"krate":0,"index":838},{"krate":0,"index":840},{"krate":0,"index":841}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":164770,"byte_end":164776,"line_start":2014,"line_end":2014,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":843}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":164907,"byte_end":164913,"line_start":2021,"line_end":2021,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":845}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":165047,"byte_end":165053,"line_start":2028,"line_end":2028,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":847}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":5044,"byte_end":5050,"line_start":156,"line_end":156,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":864},{"krate":0,"index":865},{"krate":0,"index":866}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":5563,"byte_end":5569,"line_start":172,"line_end":172,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":868}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":5655,"byte_end":5660,"line_start":178,"line_end":178,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":870}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":6238,"byte_end":6242,"line_start":196,"line_end":196,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":872},{"krate":0,"index":873},{"krate":0,"index":874},{"krate":0,"index":875}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":6977,"byte_end":6981,"line_start":218,"line_end":218,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":877}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":7061,"byte_end":7066,"line_start":224,"line_end":224,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":879}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":7518,"byte_end":7526,"line_start":240,"line_end":240,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":881},{"krate":0,"index":882},{"krate":0,"index":883},{"krate":0,"index":884}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":7968,"byte_end":7976,"line_start":254,"line_end":254,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":886}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":8068,"byte_end":8073,"line_start":260,"line_end":260,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":888}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":8431,"byte_end":8440,"line_start":275,"line_end":275,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":890}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":9055,"byte_end":9071,"line_start":294,"line_end":294,"column_start":25,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":897}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":9209,"byte_end":9225,"line_start":300,"line_end":300,"column_start":10,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":900}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":9547,"byte_end":9563,"line_start":311,"line_end":311,"column_start":20,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":903},{"krate":0,"index":904}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":9709,"byte_end":9725,"line_start":319,"line_end":319,"column_start":23,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":907}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":10219,"byte_end":10231,"line_start":337,"line_end":337,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":909},{"krate":0,"index":910},{"krate":0,"index":911},{"krate":0,"index":912}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockaddr.rs","byte_start":14437,"byte_end":14445,"line_start":23,"line_end":23,"column_start":6,"column_end":14},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":913},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockaddr.rs","byte_start":21349,"byte_end":21357,"line_start":214,"line_end":214,"column_start":27,"column_end":35},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":913},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockaddr.rs","byte_start":21570,"byte_end":21578,"line_start":223,"line_end":223,"column_start":29,"column_end":37},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":913},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockaddr.rs","byte_start":22611,"byte_end":22619,"line_start":251,"line_end":251,"column_start":29,"column_end":37},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":913},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockaddr.rs","byte_start":24059,"byte_end":24067,"line_start":292,"line_end":292,"column_start":21,"column_end":29},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":913},"to":{"krate":2,"index":10108}},{"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":29112,"byte_end":29118,"line_start":79,"line_end":79,"column_start":6,"column_end":12},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":185},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":53756,"byte_end":53762,"line_start":740,"line_end":740,"column_start":6,"column_end":12},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":185},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":63494,"byte_end":63500,"line_start":1012,"line_end":1012,"column_start":6,"column_end":12},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":185},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":79158,"byte_end":79164,"line_start":1446,"line_end":1446,"column_start":6,"column_end":12},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":185},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":86102,"byte_end":86108,"line_start":1637,"line_end":1637,"column_start":6,"column_end":12},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":185},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":92148,"byte_end":92154,"line_start":1818,"line_end":1818,"column_start":15,"column_end":21},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":185},"to":{"krate":1,"index":4543}},{"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":93645,"byte_end":93651,"line_start":1852,"line_end":1852,"column_start":16,"column_end":22},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":185},"to":{"krate":1,"index":4600}},{"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/socket.rs","byte_start":94330,"byte_end":94336,"line_start":1882,"line_end":1882,"column_start":21,"column_end":27},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":185},"to":{"krate":2,"index":10108}},{"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockref.rs","byte_start":98356,"byte_end":98363,"line_start":95,"line_end":95,"column_start":20,"column_end":27},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":363},"to":{"krate":2,"index":3398}},{"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockref.rs","byte_start":98624,"byte_end":98631,"line_start":106,"line_end":106,"column_start":29,"column_end":36},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":363},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sockref.rs","byte_start":99544,"byte_end":99551,"line_start":139,"line_end":139,"column_start":21,"column_end":28},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":363},"to":{"krate":2,"index":10108}},{"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":106531,"byte_end":106537,"line_start":224,"line_end":224,"column_start":6,"column_end":12},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":957},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":108028,"byte_end":108032,"line_start":270,"line_end":270,"column_start":6,"column_end":10},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":970},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":111241,"byte_end":111250,"line_start":397,"line_end":397,"column_start":6,"column_end":15},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":996},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":112092,"byte_end":112101,"line_start":421,"line_end":421,"column_start":26,"column_end":35},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":996},"to":{"krate":2,"index":10108}},{"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":112587,"byte_end":112603,"line_start":437,"line_end":437,"column_start":26,"column_end":42},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":694},"to":{"krate":2,"index":3179}},{"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":112637,"byte_end":112653,"line_start":439,"line_end":439,"column_start":26,"column_end":42},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":694},"to":{"krate":2,"index":3191}},{"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":112671,"byte_end":112687,"line_start":441,"line_end":441,"column_start":10,"column_end":26},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":694},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":113329,"byte_end":113337,"line_start":462,"line_end":462,"column_start":6,"column_end":14},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":913},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":115841,"byte_end":115849,"line_start":527,"line_end":527,"column_start":6,"column_end":14},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":913},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":132401,"byte_end":132407,"line_start":1048,"line_end":1048,"column_start":13,"column_end":19},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":185},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":164770,"byte_end":164776,"line_start":2014,"line_end":2014,"column_start":25,"column_end":31},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":185},"to":{"krate":1,"index":6771}},{"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":164907,"byte_end":164913,"line_start":2021,"line_end":2021,"column_start":27,"column_end":33},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":185},"to":{"krate":1,"index":6775}},{"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/sys/unix.rs","byte_start":165047,"byte_end":165053,"line_start":2028,"line_end":2028,"column_start":27,"column_end":33},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":185},"to":{"krate":1,"index":6773}},{"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":5044,"byte_end":5050,"line_start":156,"line_end":156,"column_start":6,"column_end":12},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":957},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":5563,"byte_end":5569,"line_start":172,"line_end":172,"column_start":22,"column_end":28},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":957},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":5655,"byte_end":5660,"line_start":178,"line_end":178,"column_start":23,"column_end":28},"kind":{"Impl":{"id":46}},"from":{"krate":20,"index":63},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":6238,"byte_end":6242,"line_start":196,"line_end":196,"column_start":6,"column_end":10},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":970},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":6977,"byte_end":6981,"line_start":218,"line_end":218,"column_start":22,"column_end":26},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":970},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":7061,"byte_end":7066,"line_start":224,"line_end":224,"column_start":21,"column_end":26},"kind":{"Impl":{"id":49}},"from":{"krate":20,"index":63},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":7518,"byte_end":7526,"line_start":240,"line_end":240,"column_start":6,"column_end":14},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":983},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":7968,"byte_end":7976,"line_start":254,"line_end":254,"column_start":22,"column_end":30},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":983},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":8068,"byte_end":8073,"line_start":260,"line_end":260,"column_start":25,"column_end":30},"kind":{"Impl":{"id":52}},"from":{"krate":20,"index":63},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":8431,"byte_end":8440,"line_start":275,"line_end":275,"column_start":6,"column_end":15},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":996},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":9055,"byte_end":9071,"line_start":294,"line_end":294,"column_start":25,"column_end":41},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":891},"to":{"krate":2,"index":10108}},{"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":9209,"byte_end":9225,"line_start":300,"line_end":300,"column_start":10,"column_end":26},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":891},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":9547,"byte_end":9563,"line_start":311,"line_end":311,"column_start":20,"column_end":36},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":891},"to":{"krate":2,"index":3398}},{"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":9709,"byte_end":9725,"line_start":319,"line_end":319,"column_start":23,"column_end":39},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":891},"to":{"krate":2,"index":3411}},{"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.6/src/lib.rs","byte_start":10219,"byte_end":10231,"line_start":337,"line_end":337,"column_start":6,"column_end":18},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1009},"to":{"krate":4294967295,"index":4294967295}}]}