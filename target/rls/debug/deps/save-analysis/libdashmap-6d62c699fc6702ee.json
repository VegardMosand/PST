{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4","program":"/home/vegard/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","dashmap","--edition=2018","/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=6d62c699fc6702ee","-C","extra-filename=-6d62c699fc6702ee","--out-dir","/home/vegard/Documents/Rust/sockets/PST/target/rls/debug/deps","-L","dependency=/home/vegard/Documents/Rust/sockets/PST/target/rls/debug/deps","--extern","cfg_if=/home/vegard/Documents/Rust/sockets/PST/target/rls/debug/deps/libcfg_if-87c284443f3cd509.rmeta","--extern","hashbrown=/home/vegard/Documents/Rust/sockets/PST/target/rls/debug/deps/libhashbrown-c22b183ec26f32dd.rmeta","--extern","lock_api=/home/vegard/Documents/Rust/sockets/PST/target/rls/debug/deps/liblock_api-4b7511ff66842a57.rmeta","--extern","parking_lot_core=/home/vegard/Documents/Rust/sockets/PST/target/rls/debug/deps/libparking_lot_core-c821825eae3f1fee.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/vegard/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/vegard/Documents/Rust/sockets/PST/target/rls/debug/deps/libdashmap-6d62c699fc6702ee.rmeta"},"prelude":{"crate_id":{"name":"dashmap","disambiguator":[1010796025983478201,0]},"crate_root":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src","external_crates":[{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[18009504021925498586,0]}},{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/iter.rs","num":2,"id":{"name":"core","disambiguator":[4529231008568630066,0]}},{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[6454353934602915994,0]}},{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[4068501274341658802,0]}},{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[6477578750782050620,0]}},{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[8891903781499800355,0]}},{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[5820604803307051361,0]}},{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[8495696488133152618,0]}},{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[573130743634949162,0]}},{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[194626158685852222,0]}},{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","num":11,"id":{"name":"adler","disambiguator":[6912020744921273940,0]}},{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[6083063236018227814,0]}},{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[4457149757231420433,0]}},{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[17193898272045318619,0]}},{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","num":15,"id":{"name":"addr2line","disambiguator":[16816495372639671287,0]}},{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","num":16,"id":{"name":"gimli","disambiguator":[18018821183479052995,0]}},{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","num":17,"id":{"name":"object","disambiguator":[8471467948192562461,0]}},{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","num":18,"id":{"name":"memchr","disambiguator":[10516304001967857410,0]}},{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[14599081442512269196,0]}},{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/iter.rs","num":20,"id":{"name":"hashbrown","disambiguator":[10730079460644998353,0]}},{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lock.rs","num":21,"id":{"name":"parking_lot_core","disambiguator":[1296338528281673959,0]}},{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lock.rs","num":22,"id":{"name":"smallvec","disambiguator":[2424348768707472734,0]}},{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","num":23,"id":{"name":"cfg_if","disambiguator":[16971327672742534159,0]}},{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lock.rs","num":24,"id":{"name":"libc","disambiguator":[7218947252679074066,0]}},{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lock.rs","num":25,"id":{"name":"lock_api","disambiguator":[15976945467755378526,0]}},{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lock.rs","num":26,"id":{"name":"scopeguard","disambiguator":[17702550169796644340,0]}}],"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":0,"byte_end":38921,"line_start":1,"line_end":1370,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":773},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":851,"byte_end":863,"line_start":38,"line_end":38,"column_start":20,"column_end":32},"alias_span":null,"name":"ReadOnlyView","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":860},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":878,"byte_end":885,"line_start":39,"line_end":39,"column_start":14,"column_end":21},"alias_span":null,"name":"DashSet","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1040},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":943,"byte_end":946,"line_start":41,"line_end":41,"column_start":12,"column_end":15},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":0,"byte_end":38921,"line_start":1,"line_end":1370,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":175},{"krate":0,"index":240},{"krate":0,"index":298},{"krate":0,"index":746},{"krate":0,"index":824},{"krate":0,"index":930},{"krate":0,"index":999},{"krate":0,"index":1092},{"krate":0,"index":1100},{"krate":0,"index":1145},{"krate":0,"index":1146},{"krate":0,"index":1149},{"krate":0,"index":1152},{"krate":0,"index":1155},{"krate":0,"index":1158},{"krate":0,"index":1161},{"krate":0,"index":1164},{"krate":0,"index":1165},{"krate":0,"index":1168},{"krate":0,"index":1169},{"krate":0,"index":1171},{"krate":0,"index":1174},{"krate":0,"index":1177},{"krate":0,"index":1178},{"krate":0,"index":1181},{"krate":0,"index":1184},{"krate":0,"index":1187},{"krate":0,"index":1190},{"krate":0,"index":1193},{"krate":0,"index":1194},{"krate":0,"index":1197},{"krate":0,"index":1200},{"krate":0,"index":1203},{"krate":0,"index":1204},{"krate":0,"index":1207},{"krate":0,"index":1210},{"krate":0,"index":1213},{"krate":0,"index":1216},{"krate":0,"index":1217},{"krate":0,"index":1220},{"krate":0,"index":1223},{"krate":0,"index":1226},{"krate":0,"index":1229},{"krate":0,"index":1232},{"krate":0,"index":1235},{"krate":0,"index":1465},{"krate":0,"index":1238},{"krate":0,"index":1242},{"krate":0,"index":1243},{"krate":0,"index":1244},{"krate":0,"index":1251},{"krate":0,"index":1256},{"krate":0,"index":1261},{"krate":0,"index":1269},{"krate":0,"index":1322},{"krate":0,"index":1381},{"krate":0,"index":1386},{"krate":0,"index":1393},{"krate":0,"index":1401},{"krate":0,"index":1409},{"krate":0,"index":1417},{"krate":0,"index":1425},{"krate":0,"index":1433},{"krate":0,"index":1441},{"krate":0,"index":1447}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: type_complexity)","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":0,"byte_end":34,"line_start":1,"line_end":1,"column_start":1,"column_end":35}}]},{"kind":"Mod","id":{"krate":0,"index":3},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/iter.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"iter","qualname":"::iter","value":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/iter.rs","parent":null,"children":[{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":8},{"krate":0,"index":11},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":18},{"krate":0,"index":21},{"krate":0,"index":24},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":31},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":41},{"krate":0,"index":44},{"krate":0,"index":47},{"krate":0,"index":50},{"krate":0,"index":53},{"krate":0,"index":60},{"krate":0,"index":65},{"krate":0,"index":68},{"krate":0,"index":74},{"krate":0,"index":78},{"krate":0,"index":82},{"krate":0,"index":87},{"krate":0,"index":92},{"krate":0,"index":101},{"krate":0,"index":108},{"krate":0,"index":115},{"krate":0,"index":122},{"krate":0,"index":129},{"krate":0,"index":137},{"krate":0,"index":146},{"krate":0,"index":153},{"krate":0,"index":160},{"krate":0,"index":167}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":53},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/iter.rs","byte_start":39612,"byte_end":39622,"line_start":26,"line_end":26,"column_start":12,"column_end":22},"name":"OwningIter","qualname":"::iter::OwningIter","value":"OwningIter {  }","parent":null,"children":[{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":59}],"decl_id":null,"docs":" Iterator over a DashMap yielding key value pairs.","sig":null,"attributes":[{"value":"/ Iterator over a DashMap yielding key value pairs.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/iter.rs","byte_start":39271,"byte_end":39324,"line_start":13,"line_end":13,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/iter.rs","byte_start":39325,"byte_end":39328,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/iter.rs","byte_start":39329,"byte_end":39343,"line_start":15,"line_end":15,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/iter.rs","byte_start":39344,"byte_end":39347,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/iter.rs","byte_start":39348,"byte_end":39355,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ use dashmap::DashMap;","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/iter.rs","byte_start":39356,"byte_end":39381,"line_start":18,"line_end":18,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/iter.rs","byte_start":39382,"byte_end":39385,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ let map = DashMap::new();","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/iter.rs","byte_start":39386,"byte_end":39415,"line_start":20,"line_end":20,"column_start":1,"column_end":30}},{"value":"/ map.insert(\"hello\", \"world\");","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/iter.rs","byte_start":39416,"byte_end":39449,"line_start":21,"line_end":21,"column_start":1,"column_end":34}},{"value":"/ map.insert(\"alex\", \"steve\");","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/iter.rs","byte_start":39450,"byte_end":39482,"line_start":22,"line_end":22,"column_start":1,"column_end":33}},{"value":"/ let pairs: Vec<(&'static str, &'static str)> = map.into_iter().collect();","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/iter.rs","byte_start":39483,"byte_end":39560,"line_start":23,"line_end":23,"column_start":1,"column_end":78}},{"value":"/ assert_eq!(pairs.len(), 2);","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/iter.rs","byte_start":39561,"byte_end":39592,"line_start":24,"line_end":24,"column_start":1,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/iter.rs","byte_start":39593,"byte_end":39600,"line_start":25,"line_end":25,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":73},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/iter.rs","byte_start":40149,"byte_end":40153,"line_start":47,"line_end":47,"column_start":8,"column_end":12},"name":"next","qualname":"<OwningIter<K, V, S> as std::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8474},"children":[],"decl_id":{"krate":2,"index":8476},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":92},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/iter.rs","byte_start":41808,"byte_end":41812,"line_start":115,"line_end":115,"column_start":12,"column_end":16},"name":"Iter","qualname":"::iter::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":100}],"decl_id":null,"docs":" Iterator over a DashMap yielding immutable references.","sig":null,"attributes":[{"value":"/ Iterator over a DashMap yielding immutable references.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/iter.rs","byte_start":41566,"byte_end":41624,"line_start":104,"line_end":104,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/iter.rs","byte_start":41625,"byte_end":41628,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/iter.rs","byte_start":41629,"byte_end":41643,"line_start":106,"line_end":106,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/iter.rs","byte_start":41644,"byte_end":41647,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/iter.rs","byte_start":41648,"byte_end":41655,"line_start":108,"line_end":108,"column_start":1,"column_end":8}},{"value":"/ use dashmap::DashMap;","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/iter.rs","byte_start":41656,"byte_end":41681,"line_start":109,"line_end":109,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/iter.rs","byte_start":41682,"byte_end":41685,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ let map = DashMap::new();","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/iter.rs","byte_start":41686,"byte_end":41715,"line_start":111,"line_end":111,"column_start":1,"column_end":30}},{"value":"/ map.insert(\"hello\", \"world\");","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/iter.rs","byte_start":41716,"byte_end":41749,"line_start":112,"line_end":112,"column_start":1,"column_end":34}},{"value":"/ assert_eq!(map.iter().count(), 1);","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/iter.rs","byte_start":41750,"byte_end":41788,"line_start":113,"line_end":113,"column_start":1,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/iter.rs","byte_start":41789,"byte_end":41796,"line_start":114,"line_end":114,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":107},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/iter.rs","byte_start":42054,"byte_end":42059,"line_start":122,"line_end":122,"column_start":8,"column_end":13},"name":"clone","qualname":"<Iter as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/iter.rs","byte_start":42880,"byte_end":42884,"line_start":160,"line_end":160,"column_start":8,"column_end":12},"name":"next","qualname":"<Iter as std::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8474},"children":[],"decl_id":{"krate":2,"index":8476},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":137},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/iter.rs","byte_start":43923,"byte_end":43930,"line_start":199,"line_end":199,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::iter::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145}],"decl_id":null,"docs":" Iterator over a DashMap yielding mutable references.","sig":null,"attributes":[{"value":"/ Iterator over a DashMap yielding mutable references.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/iter.rs","byte_start":43631,"byte_end":43687,"line_start":187,"line_end":187,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/iter.rs","byte_start":43688,"byte_end":43691,"line_start":188,"line_end":188,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/iter.rs","byte_start":43692,"byte_end":43706,"line_start":189,"line_end":189,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/iter.rs","byte_start":43707,"byte_end":43710,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/iter.rs","byte_start":43711,"byte_end":43718,"line_start":191,"line_end":191,"column_start":1,"column_end":8}},{"value":"/ use dashmap::DashMap;","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/iter.rs","byte_start":43719,"byte_end":43744,"line_start":192,"line_end":192,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/iter.rs","byte_start":43745,"byte_end":43748,"line_start":193,"line_end":193,"column_start":1,"column_end":4}},{"value":"/ let map = DashMap::new();","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/iter.rs","byte_start":43749,"byte_end":43778,"line_start":194,"line_end":194,"column_start":1,"column_end":30}},{"value":"/ map.insert(\"Johnny\", 21);","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/iter.rs","byte_start":43779,"byte_end":43808,"line_start":195,"line_end":195,"column_start":1,"column_end":30}},{"value":"/ map.iter_mut().for_each(|mut r| *r += 1);","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/iter.rs","byte_start":43809,"byte_end":43854,"line_start":196,"line_end":196,"column_start":1,"column_end":46}},{"value":"/ assert_eq!(*map.get(\"Johnny\").unwrap(), 22);","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/iter.rs","byte_start":43855,"byte_end":43903,"line_start":197,"line_end":197,"column_start":1,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/iter.rs","byte_start":43904,"byte_end":43911,"line_start":198,"line_end":198,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/iter.rs","byte_start":44854,"byte_end":44858,"line_start":240,"line_end":240,"column_start":8,"column_end":12},"name":"next","qualname":"<IterMut as std::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8474},"children":[],"decl_id":{"krate":2,"index":8476},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":175},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/iter_set.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"iter_set","qualname":"::iter_set","value":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/iter_set.rs","parent":null,"children":[{"krate":0,"index":176},{"krate":0,"index":179},{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":189},{"krate":0,"index":193},{"krate":0,"index":197},{"krate":0,"index":203},{"krate":0,"index":206},{"krate":0,"index":209},{"krate":0,"index":215},{"krate":0,"index":221},{"krate":0,"index":227},{"krate":0,"index":233}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":189},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/iter_set.rs","byte_start":46627,"byte_end":46637,"line_start":5,"line_end":5,"column_start":12,"column_end":22},"name":"OwningIter","qualname":"::iter_set::OwningIter","value":"OwningIter {  }","parent":null,"children":[{"krate":0,"index":192}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":201},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/iter_set.rs","byte_start":46965,"byte_end":46969,"line_start":18,"line_end":18,"column_start":8,"column_end":12},"name":"next","qualname":"<OwningIter<K, S> as std::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8474},"children":[],"decl_id":{"krate":2,"index":8476},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":209},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/iter_set.rs","byte_start":47297,"byte_end":47301,"line_start":37,"line_end":37,"column_start":12,"column_end":16},"name":"Iter","qualname":"::iter_set::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":214}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":239},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/iter_set.rs","byte_start":48035,"byte_end":48039,"line_start":68,"line_end":68,"column_start":8,"column_end":12},"name":"next","qualname":"<Iter as std::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8474},"children":[],"decl_id":{"krate":2,"index":8476},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":270},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lock.rs","byte_start":48635,"byte_end":48644,"line_start":13,"line_end":13,"column_start":12,"column_end":21},"name":"RawRwLock","qualname":"::lock::RawRwLock","value":"RawRwLock {  }","parent":null,"children":[{"krate":0,"index":271}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":273},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lock.rs","byte_start":48785,"byte_end":48789,"line_start":19,"line_end":19,"column_start":11,"column_end":15},"name":"INIT","qualname":"::<lock::RawRwLock as lock_api::RawRwLock>::INIT","value":"Self","parent":{"krate":0,"index":272},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: declare_interior_mutable_const)","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lock.rs","byte_start":48726,"byte_end":48774,"line_start":18,"line_end":18,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":275},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lock.rs","byte_start":48917,"byte_end":48935,"line_start":26,"line_end":26,"column_start":8,"column_end":26},"name":"try_lock_exclusive","qualname":"<RawRwLock as lock_api::RawRwLock>::try_lock_exclusive","value":"fn try_lock_exclusive(&Self) -> bool","parent":{"krate":25,"index":512},"children":[],"decl_id":{"krate":25,"index":519},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lock.rs","byte_start":48900,"byte_end":48909,"line_start":25,"line_end":25,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":276},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lock.rs","byte_start":49104,"byte_end":49118,"line_start":33,"line_end":33,"column_start":8,"column_end":22},"name":"lock_exclusive","qualname":"<RawRwLock as lock_api::RawRwLock>::lock_exclusive","value":"fn lock_exclusive(&Self)","parent":{"krate":25,"index":512},"children":[],"decl_id":{"krate":25,"index":518},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lock.rs","byte_start":49087,"byte_end":49096,"line_start":32,"line_end":32,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":277},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lock.rs","byte_start":49368,"byte_end":49384,"line_start":44,"line_end":44,"column_start":15,"column_end":31},"name":"unlock_exclusive","qualname":"<RawRwLock as lock_api::RawRwLock>::unlock_exclusive","value":"unsafe fn unlock_exclusive(&Self)","parent":{"krate":25,"index":512},"children":[],"decl_id":{"krate":25,"index":520},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lock.rs","byte_start":49344,"byte_end":49353,"line_start":43,"line_end":43,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":278},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lock.rs","byte_start":49624,"byte_end":49639,"line_start":55,"line_end":55,"column_start":8,"column_end":23},"name":"try_lock_shared","qualname":"<RawRwLock as lock_api::RawRwLock>::try_lock_shared","value":"fn try_lock_shared(&Self) -> bool","parent":{"krate":25,"index":512},"children":[],"decl_id":{"krate":25,"index":516},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lock.rs","byte_start":49607,"byte_end":49616,"line_start":54,"line_end":54,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":279},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lock.rs","byte_start":49752,"byte_end":49763,"line_start":60,"line_end":60,"column_start":8,"column_end":19},"name":"lock_shared","qualname":"<RawRwLock as lock_api::RawRwLock>::lock_shared","value":"fn lock_shared(&Self)","parent":{"krate":25,"index":512},"children":[],"decl_id":{"krate":25,"index":515},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lock.rs","byte_start":49735,"byte_end":49744,"line_start":59,"line_end":59,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":280},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lock.rs","byte_start":49897,"byte_end":49910,"line_start":67,"line_end":67,"column_start":15,"column_end":28},"name":"unlock_shared","qualname":"<RawRwLock as lock_api::RawRwLock>::unlock_shared","value":"unsafe fn unlock_shared(&Self)","parent":{"krate":25,"index":512},"children":[],"decl_id":{"krate":25,"index":517},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lock.rs","byte_start":49873,"byte_end":49882,"line_start":66,"line_end":66,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":282},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lock.rs","byte_start":50189,"byte_end":50198,"line_start":78,"line_end":78,"column_start":15,"column_end":24},"name":"downgrade","qualname":"<RawRwLock as lock_api::RawRwLockDowngrade>::downgrade","value":"unsafe fn downgrade(&Self)","parent":{"krate":25,"index":528},"children":[],"decl_id":{"krate":25,"index":529},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lock.rs","byte_start":50165,"byte_end":50174,"line_start":77,"line_end":77,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":298},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"mapref","qualname":"::mapref","value":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/mod.rs","parent":null,"children":[{"krate":0,"index":299},{"krate":0,"index":417},{"krate":0,"index":523}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":299},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/entry.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"entry","qualname":"::mapref::entry","value":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/entry.rs","parent":null,"children":[{"krate":0,"index":300},{"krate":0,"index":303},{"krate":0,"index":306},{"krate":0,"index":309},{"krate":0,"index":312},{"krate":0,"index":315},{"krate":0,"index":316},{"krate":0,"index":319},{"krate":0,"index":320},{"krate":0,"index":322},{"krate":0,"index":325},{"krate":0,"index":328},{"krate":0,"index":331},{"krate":0,"index":342},{"krate":0,"index":358},{"krate":0,"index":365},{"krate":0,"index":370},{"krate":0,"index":375},{"krate":0,"index":384},{"krate":0,"index":392},{"krate":0,"index":397},{"krate":0,"index":402}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":336},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/entry.rs","byte_start":57485,"byte_end":57493,"line_start":12,"line_end":12,"column_start":5,"column_end":13},"name":"Occupied","qualname":"::mapref::entry::Entry::Occupied","value":"Entry::Occupied(OccupiedEntry)","parent":{"krate":0,"index":331},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":338},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/entry.rs","byte_start":57494,"byte_end":57520,"line_start":12,"line_end":12,"column_start":14,"column_end":40},"name":"0","qualname":"::mapref::entry::Entry::Occupied::0","value":"mapref::entry::OccupiedEntry<'a, K, V, S>","parent":{"krate":0,"index":336},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":339},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/entry.rs","byte_start":57527,"byte_end":57533,"line_start":13,"line_end":13,"column_start":5,"column_end":11},"name":"Vacant","qualname":"::mapref::entry::Entry::Vacant","value":"Entry::Vacant(VacantEntry)","parent":{"krate":0,"index":331},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":341},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/entry.rs","byte_start":57534,"byte_end":57558,"line_start":13,"line_end":13,"column_start":12,"column_end":36},"name":"0","qualname":"::mapref::entry::Entry::Vacant::0","value":"mapref::entry::VacantEntry<'a, K, V, S>","parent":{"krate":0,"index":339},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":331},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/entry.rs","byte_start":57446,"byte_end":57451,"line_start":11,"line_end":11,"column_start":10,"column_end":15},"name":"Entry","qualname":"::mapref::entry::Entry","value":"enum Entry<'a, K, V, S = RandomState> {\n    Occupied(OccupiedEntry),\n    Vacant(VacantEntry),\n}","parent":null,"children":[{"krate":0,"index":336},{"krate":0,"index":339}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":347},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/entry.rs","byte_start":57697,"byte_end":57707,"line_start":18,"line_end":18,"column_start":12,"column_end":22},"name":"and_modify","qualname":"<Entry>::and_modify","value":"fn and_modify<impl FnOnce(&mut V)>(Self, impl FnOnce(&mut V)) -> Self where\nimpl FnOnce(&mut V): for<'_> FnOnce(&'_ mut V) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Apply a function to the stored value if it exists.\n","sig":null,"attributes":[{"value":"/ Apply a function to the stored value if it exists.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/entry.rs","byte_start":57631,"byte_end":57685,"line_start":17,"line_end":17,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":349},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/entry.rs","byte_start":58024,"byte_end":58027,"line_start":31,"line_end":31,"column_start":12,"column_end":15},"name":"key","qualname":"<Entry>::key","value":"fn key(&Self) -> &K","parent":null,"children":[],"decl_id":null,"docs":" Get the key of the entry.\n","sig":null,"attributes":[{"value":"/ Get the key of the entry.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/entry.rs","byte_start":57983,"byte_end":58012,"line_start":30,"line_end":30,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":350},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/entry.rs","byte_start":58236,"byte_end":58244,"line_start":39,"line_end":39,"column_start":12,"column_end":20},"name":"into_key","qualname":"<Entry>::into_key","value":"fn into_key(Self) -> K","parent":null,"children":[],"decl_id":null,"docs":" Into the key of the entry.\n","sig":null,"attributes":[{"value":"/ Into the key of the entry.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/entry.rs","byte_start":58194,"byte_end":58224,"line_start":38,"line_end":38,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":351},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/entry.rs","byte_start":58558,"byte_end":58568,"line_start":48,"line_end":48,"column_start":12,"column_end":22},"name":"or_default","qualname":"<Entry>::or_default","value":"fn or_default(Self) -> RefMut where V: Default","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to the element if it exists,\n otherwise insert the default and return a mutable reference to that.\n","sig":null,"attributes":[{"value":"/ Return a mutable reference to the element if it exists,","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/entry.rs","byte_start":58410,"byte_end":58469,"line_start":46,"line_end":46,"column_start":5,"column_end":64}},{"value":"/ otherwise insert the default and return a mutable reference to that.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/entry.rs","byte_start":58474,"byte_end":58546,"line_start":47,"line_end":47,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":352},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/entry.rs","byte_start":58942,"byte_end":58951,"line_start":60,"line_end":60,"column_start":12,"column_end":21},"name":"or_insert","qualname":"<Entry>::or_insert","value":"fn or_insert(Self, V) -> RefMut","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to the element if it exists,\n otherwise a provided value and return a mutable reference to that.\n","sig":null,"attributes":[{"value":"/ Return a mutable reference to the element if it exists,","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/entry.rs","byte_start":58796,"byte_end":58855,"line_start":58,"line_end":58,"column_start":5,"column_end":64}},{"value":"/ otherwise a provided value and return a mutable reference to that.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/entry.rs","byte_start":58860,"byte_end":58930,"line_start":59,"line_end":59,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":353},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/entry.rs","byte_start":59318,"byte_end":59332,"line_start":69,"line_end":69,"column_start":12,"column_end":26},"name":"or_insert_with","qualname":"<Entry>::or_insert_with","value":"fn or_insert_with<impl FnOnce() -> V>(Self, impl FnOnce() -> V) -> RefMut\nwhere impl FnOnce() -> V: FnOnce() -> V","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to the element if it exists,\n otherwise insert the result of a provided function and return a mutable reference to that.\n","sig":null,"attributes":[{"value":"/ Return a mutable reference to the element if it exists,","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/entry.rs","byte_start":59148,"byte_end":59207,"line_start":67,"line_end":67,"column_start":5,"column_end":64}},{"value":"/ otherwise insert the result of a provided function and return a mutable reference to that.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/entry.rs","byte_start":59212,"byte_end":59306,"line_start":68,"line_end":68,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":355},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/entry.rs","byte_start":59555,"byte_end":59573,"line_start":76,"line_end":76,"column_start":12,"column_end":30},"name":"or_try_insert_with","qualname":"<Entry>::or_try_insert_with","value":"fn or_try_insert_with<E,\nimpl FnOnce() -> Result<V, E>>(Self, impl FnOnce() -> Result<V, E>)\n-> Result<RefMut, E> where impl FnOnce() -> Result<V, E>: FnOnce() ->\nResult<V, E>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":358},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/entry.rs","byte_start":59855,"byte_end":59866,"line_start":87,"line_end":87,"column_start":12,"column_end":23},"name":"VacantEntry","qualname":"::mapref::entry::VacantEntry","value":"VacantEntry {  }","parent":null,"children":[{"krate":0,"index":363},{"krate":0,"index":364}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":381},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/entry.rs","byte_start":60370,"byte_end":60376,"line_start":100,"line_end":100,"column_start":12,"column_end":18},"name":"insert","qualname":"<VacantEntry>::insert","value":"fn insert(Self, V) -> RefMut","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":382},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/entry.rs","byte_start":60832,"byte_end":60840,"line_start":120,"line_end":120,"column_start":12,"column_end":20},"name":"into_key","qualname":"<VacantEntry>::into_key","value":"fn into_key(Self) -> K","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":383},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/entry.rs","byte_start":60889,"byte_end":60892,"line_start":124,"line_end":124,"column_start":12,"column_end":15},"name":"key","qualname":"<VacantEntry>::key","value":"fn key(&Self) -> &K","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":384},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/entry.rs","byte_start":60946,"byte_end":60959,"line_start":129,"line_end":129,"column_start":12,"column_end":25},"name":"OccupiedEntry","qualname":"::mapref::entry::OccupiedEntry","value":"OccupiedEntry {  }","parent":null,"children":[{"krate":0,"index":389},{"krate":0,"index":390},{"krate":0,"index":391}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":408},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/entry.rs","byte_start":61562,"byte_end":61565,"line_start":147,"line_end":147,"column_start":12,"column_end":15},"name":"get","qualname":"<OccupiedEntry>::get","value":"fn get(&Self) -> &V","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":409},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/entry.rs","byte_start":61632,"byte_end":61639,"line_start":151,"line_end":151,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<OccupiedEntry>::get_mut","value":"fn get_mut(&mut Self) -> &mut V","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":410},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/entry.rs","byte_start":61718,"byte_end":61724,"line_start":155,"line_end":155,"column_start":12,"column_end":18},"name":"insert","qualname":"<OccupiedEntry>::insert","value":"fn insert(&mut Self, V) -> V","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":411},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/entry.rs","byte_start":61815,"byte_end":61823,"line_start":159,"line_end":159,"column_start":12,"column_end":20},"name":"into_ref","qualname":"<OccupiedEntry>::into_ref","value":"fn into_ref(Self) -> RefMut","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":412},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/entry.rs","byte_start":61942,"byte_end":61950,"line_start":163,"line_end":163,"column_start":12,"column_end":20},"name":"into_key","qualname":"<OccupiedEntry>::into_key","value":"fn into_key(Self) -> K","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":413},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/entry.rs","byte_start":61999,"byte_end":62002,"line_start":167,"line_end":167,"column_start":12,"column_end":15},"name":"key","qualname":"<OccupiedEntry>::key","value":"fn key(&Self) -> &K","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":414},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/entry.rs","byte_start":62069,"byte_end":62075,"line_start":171,"line_end":171,"column_start":12,"column_end":18},"name":"remove","qualname":"<OccupiedEntry>::remove","value":"fn remove(Self) -> V","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":415},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/entry.rs","byte_start":62208,"byte_end":62220,"line_start":176,"line_end":176,"column_start":12,"column_end":24},"name":"remove_entry","qualname":"<OccupiedEntry>::remove_entry","value":"fn remove_entry(Self) -> (K, V)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":416},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/entry.rs","byte_start":62393,"byte_end":62406,"line_start":182,"line_end":182,"column_start":12,"column_end":25},"name":"replace_entry","qualname":"<OccupiedEntry>::replace_entry","value":"fn replace_entry(Self, V) -> (K, V)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":417},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/multiple.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"multiple","qualname":"::mapref::multiple","value":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/multiple.rs","parent":null,"children":[{"krate":0,"index":418},{"krate":0,"index":419},{"krate":0,"index":422},{"krate":0,"index":425},{"krate":0,"index":428},{"krate":0,"index":431},{"krate":0,"index":432},{"krate":0,"index":434},{"krate":0,"index":435},{"krate":0,"index":438},{"krate":0,"index":441},{"krate":0,"index":444},{"krate":0,"index":447},{"krate":0,"index":455},{"krate":0,"index":460},{"krate":0,"index":465},{"krate":0,"index":474},{"krate":0,"index":481},{"krate":0,"index":489},{"krate":0,"index":494},{"krate":0,"index":499},{"krate":0,"index":510},{"krate":0,"index":517}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":447},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/multiple.rs","byte_start":62899,"byte_end":62907,"line_start":9,"line_end":9,"column_start":12,"column_end":20},"name":"RefMulti","qualname":"::mapref::multiple::RefMulti","value":"RefMulti {  }","parent":null,"children":[{"krate":0,"index":452},{"krate":0,"index":453},{"krate":0,"index":454}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":471},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/multiple.rs","byte_start":63536,"byte_end":63539,"line_start":31,"line_end":31,"column_start":12,"column_end":15},"name":"key","qualname":"<RefMulti>::key","value":"fn key(&Self) -> &K","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":472},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/multiple.rs","byte_start":63595,"byte_end":63600,"line_start":35,"line_end":35,"column_start":12,"column_end":17},"name":"value","qualname":"<RefMulti>::value","value":"fn value(&Self) -> &V","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":473},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/multiple.rs","byte_start":63656,"byte_end":63660,"line_start":39,"line_end":39,"column_start":12,"column_end":16},"name":"pair","qualname":"<RefMulti>::pair","value":"fn pair(&Self) -> (&K, &V)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":480},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/multiple.rs","byte_start":63836,"byte_end":63841,"line_start":47,"line_end":47,"column_start":8,"column_end":13},"name":"deref","qualname":"<RefMulti as std::ops::Deref>::deref","value":"fn deref(&Self) -> &V","parent":{"krate":2,"index":3398},"children":[],"decl_id":{"krate":2,"index":3400},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":481},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/multiple.rs","byte_start":63898,"byte_end":63909,"line_start":52,"line_end":52,"column_start":12,"column_end":23},"name":"RefMutMulti","qualname":"::mapref::multiple::RefMutMulti","value":"RefMutMulti {  }","parent":null,"children":[{"krate":0,"index":486},{"krate":0,"index":487},{"krate":0,"index":488}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":505},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/multiple.rs","byte_start":64545,"byte_end":64548,"line_start":74,"line_end":74,"column_start":12,"column_end":15},"name":"key","qualname":"<RefMutMulti>::key","value":"fn key(&Self) -> &K","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":506},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/multiple.rs","byte_start":64604,"byte_end":64609,"line_start":78,"line_end":78,"column_start":12,"column_end":17},"name":"value","qualname":"<RefMutMulti>::value","value":"fn value(&Self) -> &V","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":507},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/multiple.rs","byte_start":64665,"byte_end":64674,"line_start":82,"line_end":82,"column_start":12,"column_end":21},"name":"value_mut","qualname":"<RefMutMulti>::value_mut","value":"fn value_mut(&mut Self) -> &mut V","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":508},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/multiple.rs","byte_start":64742,"byte_end":64746,"line_start":86,"line_end":86,"column_start":12,"column_end":16},"name":"pair","qualname":"<RefMutMulti>::pair","value":"fn pair(&Self) -> (&K, &V)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":509},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/multiple.rs","byte_start":64826,"byte_end":64834,"line_start":90,"line_end":90,"column_start":12,"column_end":20},"name":"pair_mut","qualname":"<RefMutMulti>::pair_mut","value":"fn pair_mut(&mut Self) -> (&K, &mut V)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":516},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/multiple.rs","byte_start":65025,"byte_end":65030,"line_start":98,"line_end":98,"column_start":8,"column_end":13},"name":"deref","qualname":"<RefMutMulti as std::ops::Deref>::deref","value":"fn deref(&Self) -> &V","parent":{"krate":2,"index":3398},"children":[],"decl_id":{"krate":2,"index":3400},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":522},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/multiple.rs","byte_start":65165,"byte_end":65174,"line_start":104,"line_end":104,"column_start":8,"column_end":17},"name":"deref_mut","qualname":"<RefMutMulti as std::ops::DerefMut>::deref_mut","value":"fn deref_mut(&mut Self) -> &mut V","parent":{"krate":2,"index":3411},"children":[],"decl_id":{"krate":2,"index":3412},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":523},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/one.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"one","qualname":"::mapref::one","value":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/one.rs","parent":null,"children":[{"krate":0,"index":524},{"krate":0,"index":525},{"krate":0,"index":528},{"krate":0,"index":531},{"krate":0,"index":534},{"krate":0,"index":535},{"krate":0,"index":538},{"krate":0,"index":539},{"krate":0,"index":541},{"krate":0,"index":542},{"krate":0,"index":545},{"krate":0,"index":548},{"krate":0,"index":551},{"krate":0,"index":552},{"krate":0,"index":553},{"krate":0,"index":555},{"krate":0,"index":558},{"krate":0,"index":566},{"krate":0,"index":571},{"krate":0,"index":576},{"krate":0,"index":591},{"krate":0,"index":597},{"krate":0,"index":604},{"krate":0,"index":612},{"krate":0,"index":617},{"krate":0,"index":622},{"krate":0,"index":640},{"krate":0,"index":646},{"krate":0,"index":653},{"krate":0,"index":659},{"krate":0,"index":668},{"krate":0,"index":683},{"krate":0,"index":690},{"krate":0,"index":698},{"krate":0,"index":707},{"krate":0,"index":724},{"krate":0,"index":731},{"krate":0,"index":739}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":558},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/one.rs","byte_start":65468,"byte_end":65471,"line_start":8,"line_end":8,"column_start":12,"column_end":15},"name":"Ref","qualname":"::mapref::one::Ref","value":"Ref {  }","parent":null,"children":[{"krate":0,"index":563},{"krate":0,"index":564},{"krate":0,"index":565}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":582},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/one.rs","byte_start":66075,"byte_end":66078,"line_start":30,"line_end":30,"column_start":12,"column_end":15},"name":"key","qualname":"<Ref>::key","value":"fn key(&Self) -> &K","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":583},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/one.rs","byte_start":66134,"byte_end":66139,"line_start":34,"line_end":34,"column_start":12,"column_end":17},"name":"value","qualname":"<Ref>::value","value":"fn value(&Self) -> &V","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":584},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/one.rs","byte_start":66195,"byte_end":66199,"line_start":38,"line_end":38,"column_start":12,"column_end":16},"name":"pair","qualname":"<Ref>::pair","value":"fn pair(&Self) -> (&K, &V)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":585},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/one.rs","byte_start":66279,"byte_end":66282,"line_start":42,"line_end":42,"column_start":12,"column_end":15},"name":"map","qualname":"<Ref>::map","value":"fn map<F, T>(Self, F) -> MappedRef where F: for<'_> FnOnce(&'_ V) -> &T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":588},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/one.rs","byte_start":66518,"byte_end":66525,"line_start":53,"line_end":53,"column_start":12,"column_end":19},"name":"try_map","qualname":"<Ref>::try_map","value":"fn try_map<F, T>(Self, F) -> Result<MappedRef, Self> where\nF: for<'_> FnOnce(&'_ V) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":596},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/one.rs","byte_start":66966,"byte_end":66969,"line_start":70,"line_end":70,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Ref as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut Formatter) -> std::fmt::Result","parent":{"krate":2,"index":10108},"children":[],"decl_id":{"krate":2,"index":10109},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":603},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/one.rs","byte_start":67249,"byte_end":67254,"line_start":81,"line_end":81,"column_start":8,"column_end":13},"name":"deref","qualname":"<Ref as std::ops::Deref>::deref","value":"fn deref(&Self) -> &V","parent":{"krate":2,"index":3398},"children":[],"decl_id":{"krate":2,"index":3400},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":604},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/one.rs","byte_start":67311,"byte_end":67317,"line_start":86,"line_end":86,"column_start":12,"column_end":18},"name":"RefMut","qualname":"::mapref::one::RefMut","value":"RefMut {  }","parent":null,"children":[{"krate":0,"index":609},{"krate":0,"index":610},{"krate":0,"index":611}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":628},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/one.rs","byte_start":67874,"byte_end":67877,"line_start":104,"line_end":104,"column_start":12,"column_end":15},"name":"key","qualname":"<RefMut>::key","value":"fn key(&Self) -> &K","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":629},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/one.rs","byte_start":67933,"byte_end":67938,"line_start":108,"line_end":108,"column_start":12,"column_end":17},"name":"value","qualname":"<RefMut>::value","value":"fn value(&Self) -> &V","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":630},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/one.rs","byte_start":67994,"byte_end":68003,"line_start":112,"line_end":112,"column_start":12,"column_end":21},"name":"value_mut","qualname":"<RefMut>::value_mut","value":"fn value_mut(&mut Self) -> &mut V","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":631},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/one.rs","byte_start":68071,"byte_end":68075,"line_start":116,"line_end":116,"column_start":12,"column_end":16},"name":"pair","qualname":"<RefMut>::pair","value":"fn pair(&Self) -> (&K, &V)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":632},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/one.rs","byte_start":68155,"byte_end":68163,"line_start":120,"line_end":120,"column_start":12,"column_end":20},"name":"pair_mut","qualname":"<RefMut>::pair_mut","value":"fn pair_mut(&mut Self) -> (&K, &mut V)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":633},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/one.rs","byte_start":68255,"byte_end":68264,"line_start":124,"line_end":124,"column_start":12,"column_end":21},"name":"downgrade","qualname":"<RefMut>::downgrade","value":"fn downgrade(Self) -> Ref","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":634},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/one.rs","byte_start":68396,"byte_end":68399,"line_start":128,"line_end":128,"column_start":12,"column_end":15},"name":"map","qualname":"<RefMut>::map","value":"fn map<F, T>(Self, F) -> MappedRefMut where F: for<'_> FnOnce(&'_ mut V) ->\n&mut T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":637},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/one.rs","byte_start":68652,"byte_end":68659,"line_start":139,"line_end":139,"column_start":12,"column_end":19},"name":"try_map","qualname":"<RefMut>::try_map","value":"fn try_map<F, T>(Self, F) -> Result<MappedRefMut, Self> where\nF: for<'_> FnOnce(&'_ mut V) -> Option<&mut T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":645},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/one.rs","byte_start":69178,"byte_end":69181,"line_start":158,"line_end":158,"column_start":8,"column_end":11},"name":"fmt","qualname":"<RefMut as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut Formatter) -> std::fmt::Result","parent":{"krate":2,"index":10108},"children":[],"decl_id":{"krate":2,"index":10109},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":652},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/one.rs","byte_start":69467,"byte_end":69472,"line_start":169,"line_end":169,"column_start":8,"column_end":13},"name":"deref","qualname":"<RefMut as std::ops::Deref>::deref","value":"fn deref(&Self) -> &V","parent":{"krate":2,"index":3398},"children":[],"decl_id":{"krate":2,"index":3400},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":658},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/one.rs","byte_start":69602,"byte_end":69611,"line_start":175,"line_end":175,"column_start":8,"column_end":17},"name":"deref_mut","qualname":"<RefMut as std::ops::DerefMut>::deref_mut","value":"fn deref_mut(&mut Self) -> &mut V","parent":{"krate":2,"index":3411},"children":[],"decl_id":{"krate":2,"index":3412},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":659},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/one.rs","byte_start":69680,"byte_end":69689,"line_start":180,"line_end":180,"column_start":12,"column_end":21},"name":"MappedRef","qualname":"::mapref::one::MappedRef","value":"MappedRef {  }","parent":null,"children":[{"krate":0,"index":665},{"krate":0,"index":666},{"krate":0,"index":667}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":674},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/one.rs","byte_start":69894,"byte_end":69897,"line_start":187,"line_end":187,"column_start":12,"column_end":15},"name":"key","qualname":"<MappedRef>::key","value":"fn key(&Self) -> &K","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":675},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/one.rs","byte_start":69953,"byte_end":69958,"line_start":191,"line_end":191,"column_start":12,"column_end":17},"name":"value","qualname":"<MappedRef>::value","value":"fn value(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":676},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/one.rs","byte_start":70014,"byte_end":70018,"line_start":195,"line_end":195,"column_start":12,"column_end":16},"name":"pair","qualname":"<MappedRef>::pair","value":"fn pair(&Self) -> (&K, &T)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":677},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/one.rs","byte_start":70098,"byte_end":70101,"line_start":199,"line_end":199,"column_start":12,"column_end":15},"name":"map","qualname":"<MappedRef>::map","value":"fn map<F, T2>(Self, F) -> MappedRef where F: for<'_> FnOnce(&'_ T) -> &T2","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":680},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/one.rs","byte_start":70340,"byte_end":70347,"line_start":210,"line_end":210,"column_start":12,"column_end":19},"name":"try_map","qualname":"<MappedRef>::try_map","value":"fn try_map<F, T2>(Self, F) -> Result<MappedRef, Self> where\nF: for<'_> FnOnce(&'_ T) -> Option<&T2>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":689},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/one.rs","byte_start":70833,"byte_end":70836,"line_start":228,"line_end":228,"column_start":8,"column_end":11},"name":"fmt","qualname":"<MappedRef as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut Formatter) -> std::fmt::Result","parent":{"krate":2,"index":10108},"children":[],"decl_id":{"krate":2,"index":10109},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":697},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/one.rs","byte_start":71134,"byte_end":71139,"line_start":239,"line_end":239,"column_start":8,"column_end":13},"name":"deref","qualname":"<MappedRef as std::ops::Deref>::deref","value":"fn deref(&Self) -> &T","parent":{"krate":2,"index":3398},"children":[],"decl_id":{"krate":2,"index":3400},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":698},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/one.rs","byte_start":71196,"byte_end":71208,"line_start":244,"line_end":244,"column_start":12,"column_end":24},"name":"MappedRefMut","qualname":"::mapref::one::MappedRefMut","value":"MappedRefMut {  }","parent":null,"children":[{"krate":0,"index":704},{"krate":0,"index":705},{"krate":0,"index":706}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":713},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/one.rs","byte_start":71415,"byte_end":71418,"line_start":251,"line_end":251,"column_start":12,"column_end":15},"name":"key","qualname":"<MappedRefMut>::key","value":"fn key(&Self) -> &K","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":714},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/one.rs","byte_start":71474,"byte_end":71479,"line_start":255,"line_end":255,"column_start":12,"column_end":17},"name":"value","qualname":"<MappedRefMut>::value","value":"fn value(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":715},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/one.rs","byte_start":71535,"byte_end":71544,"line_start":259,"line_end":259,"column_start":12,"column_end":21},"name":"value_mut","qualname":"<MappedRefMut>::value_mut","value":"fn value_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":716},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/one.rs","byte_start":71612,"byte_end":71616,"line_start":263,"line_end":263,"column_start":12,"column_end":16},"name":"pair","qualname":"<MappedRefMut>::pair","value":"fn pair(&Self) -> (&K, &T)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":717},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/one.rs","byte_start":71696,"byte_end":71704,"line_start":267,"line_end":267,"column_start":12,"column_end":20},"name":"pair_mut","qualname":"<MappedRefMut>::pair_mut","value":"fn pair_mut(&mut Self) -> (&K, &mut T)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":718},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/one.rs","byte_start":71796,"byte_end":71799,"line_start":271,"line_end":271,"column_start":12,"column_end":15},"name":"map","qualname":"<MappedRefMut>::map","value":"fn map<F, T2>(Self, F) -> MappedRefMut where F: for<'_> FnOnce(&'_ mut T) ->\n&mut T2","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":721},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/one.rs","byte_start":72056,"byte_end":72063,"line_start":282,"line_end":282,"column_start":12,"column_end":19},"name":"try_map","qualname":"<MappedRefMut>::try_map","value":"fn try_map<F, T2>(Self, F) -> Result<MappedRefMut, Self> where\nF: for<'_> FnOnce(&'_ mut T) -> Option<&mut T2>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":730},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/one.rs","byte_start":72598,"byte_end":72601,"line_start":301,"line_end":301,"column_start":8,"column_end":11},"name":"fmt","qualname":"<MappedRefMut as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut Formatter) -> std::fmt::Result","parent":{"krate":2,"index":10108},"children":[],"decl_id":{"krate":2,"index":10109},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":738},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/one.rs","byte_start":72905,"byte_end":72910,"line_start":312,"line_end":312,"column_start":8,"column_end":13},"name":"deref","qualname":"<MappedRefMut as std::ops::Deref>::deref","value":"fn deref(&Self) -> &T","parent":{"krate":2,"index":3398},"children":[],"decl_id":{"krate":2,"index":3400},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":745},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/one.rs","byte_start":73052,"byte_end":73061,"line_start":318,"line_end":318,"column_start":8,"column_end":17},"name":"deref_mut","qualname":"<MappedRefMut as std::ops::DerefMut>::deref_mut","value":"fn deref_mut(&mut Self) -> &mut T","parent":{"krate":2,"index":3411},"children":[],"decl_id":{"krate":2,"index":3412},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":773},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/read_only.rs","byte_start":73397,"byte_end":73409,"line_start":9,"line_end":9,"column_start":12,"column_end":24},"name":"ReadOnlyView","qualname":"::read_only::ReadOnlyView","value":"ReadOnlyView {  }","parent":null,"children":[{"krate":0,"index":777}],"decl_id":null,"docs":" A read-only view into a `DashMap`. Allows to obtain raw references to the stored values.\n","sig":null,"attributes":[{"value":"/ A read-only view into a `DashMap`. Allows to obtain raw references to the stored values.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/read_only.rs","byte_start":73293,"byte_end":73385,"line_start":8,"line_end":8,"column_start":1,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":782},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/read_only.rs","byte_start":73553,"byte_end":73558,"line_start":14,"line_end":14,"column_start":8,"column_end":13},"name":"clone","qualname":"<ReadOnlyView<K, V, S> as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":787},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/read_only.rs","byte_start":73766,"byte_end":73769,"line_start":24,"line_end":24,"column_start":8,"column_end":11},"name":"fmt","qualname":"<ReadOnlyView<K, V, S> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10108},"children":[],"decl_id":{"krate":2,"index":10109},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":793},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/read_only.rs","byte_start":74061,"byte_end":74071,"line_start":35,"line_end":35,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<ReadOnlyView<K, V, S>>::into_inner","value":"fn into_inner(Self) -> DashMap<K, V, S>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `ReadOnlyView`, returning the underlying `DashMap`.\n","sig":null,"attributes":[{"value":"/ Consumes this `ReadOnlyView`, returning the underlying `DashMap`.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/read_only.rs","byte_start":73980,"byte_end":74049,"line_start":34,"line_end":34,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":799},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/read_only.rs","byte_start":74271,"byte_end":74274,"line_start":42,"line_end":42,"column_start":12,"column_end":15},"name":"len","qualname":"<ReadOnlyView<K, V, S>>::len","value":"fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements in the map.\n","sig":null,"attributes":[{"value":"/ Returns the number of elements in the map.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/read_only.rs","byte_start":74213,"byte_end":74259,"line_start":41,"line_end":41,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":800},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/read_only.rs","byte_start":74390,"byte_end":74398,"line_start":47,"line_end":47,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<ReadOnlyView<K, V, S>>::is_empty","value":"fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the map contains no elements.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the map contains no elements.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/read_only.rs","byte_start":74327,"byte_end":74378,"line_start":46,"line_end":46,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":801},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/read_only.rs","byte_start":74540,"byte_end":74548,"line_start":52,"line_end":52,"column_start":12,"column_end":20},"name":"capacity","qualname":"<ReadOnlyView<K, V, S>>::capacity","value":"fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements the map can hold without reallocating.\n","sig":null,"attributes":[{"value":"/ Returns the number of elements the map can hold without reallocating.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/read_only.rs","byte_start":74455,"byte_end":74528,"line_start":51,"line_end":51,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":802},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/read_only.rs","byte_start":74687,"byte_end":74699,"line_start":57,"line_end":57,"column_start":12,"column_end":24},"name":"contains_key","qualname":"<ReadOnlyView<K, V, S>>::contains_key","value":"fn contains_key<Q>(&'a Self, &Q) -> bool where K: Borrow<Q>, Q: Hash + Eq +\n?Sized","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the map contains a value for the specified key.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the map contains a value for the specified key.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/read_only.rs","byte_start":74606,"byte_end":74675,"line_start":56,"line_end":56,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":804},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/read_only.rs","byte_start":75077,"byte_end":75080,"line_start":72,"line_end":72,"column_start":12,"column_end":15},"name":"get","qualname":"<ReadOnlyView<K, V, S>>::get","value":"fn get<Q>(&'a Self, &Q) -> Option<&'a V> where K: Borrow<Q>, Q: Hash + Eq +\n?Sized","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the value corresponding to the key.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the value corresponding to the key.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/read_only.rs","byte_start":75003,"byte_end":75065,"line_start":71,"line_end":71,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":807},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/read_only.rs","byte_start":75478,"byte_end":75491,"line_start":87,"line_end":87,"column_start":12,"column_end":25},"name":"get_key_value","qualname":"<ReadOnlyView<K, V, S>>::get_key_value","value":"fn get_key_value<Q>(&'a Self, &Q) -> Option<(&'a K, &'a V)> where\nK: Borrow<Q>, Q: Hash + Eq + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Returns the key-value pair corresponding to the supplied key.\n","sig":null,"attributes":[{"value":"/ Returns the key-value pair corresponding to the supplied key.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/read_only.rs","byte_start":75401,"byte_end":75466,"line_start":86,"line_end":86,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":813},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/read_only.rs","byte_start":76172,"byte_end":76176,"line_start":107,"line_end":107,"column_start":12,"column_end":16},"name":"iter","qualname":"<ReadOnlyView<K, V, S>>::iter","value":"fn iter(&'a Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all key-value pairs in arbitrary order. The iterator element type is `(&'a K, &'a V)`.\n","sig":null,"attributes":[{"value":"/ An iterator visiting all key-value pairs in arbitrary order. The iterator element type is `(&'a K, &'a V)`.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/read_only.rs","byte_start":76049,"byte_end":76160,"line_start":106,"line_end":106,"column_start":5,"column_end":116}}]},{"kind":"Method","id":{"krate":0,"index":817},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/read_only.rs","byte_start":76463,"byte_end":76467,"line_start":114,"line_end":114,"column_start":12,"column_end":16},"name":"keys","qualname":"<ReadOnlyView<K, V, S>>::keys","value":"fn keys(&'a Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all keys in arbitrary order. The iterator element type is `&'a K`.\n","sig":null,"attributes":[{"value":"/ An iterator visiting all keys in arbitrary order. The iterator element type is `&'a K`.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/read_only.rs","byte_start":76360,"byte_end":76451,"line_start":113,"line_end":113,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":820},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/read_only.rs","byte_start":76694,"byte_end":76700,"line_start":119,"line_end":119,"column_start":12,"column_end":18},"name":"values","qualname":"<ReadOnlyView<K, V, S>>::values","value":"fn values(&'a Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all values in arbitrary order. The iterator element type is `&'a V`.\n","sig":null,"attributes":[{"value":"/ An iterator visiting all values in arbitrary order. The iterator element type is `&'a V`.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/read_only.rs","byte_start":76589,"byte_end":76682,"line_start":118,"line_end":118,"column_start":5,"column_end":98}}]},{"kind":"Struct","id":{"krate":0,"index":860},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":80063,"byte_end":80070,"line_start":19,"line_end":19,"column_start":12,"column_end":19},"name":"DashSet","qualname":"::set::DashSet","value":"DashSet {  }","parent":null,"children":[{"krate":0,"index":863}],"decl_id":null,"docs":" DashSet is a thin wrapper around [`DashMap`] using `()` as the value type. It uses\n methods and types which are more convenient to work with on a set.","sig":null,"attributes":[{"value":"/ DashSet is a thin wrapper around [`DashMap`] using `()` as the value type. It uses","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":79853,"byte_end":79939,"line_start":15,"line_end":15,"column_start":1,"column_end":87}},{"value":"/ methods and types which are more convenient to work with on a set.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":79940,"byte_end":80010,"line_start":16,"line_end":16,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":80011,"byte_end":80014,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ [`DashMap`]: struct.DashMap.html","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":80015,"byte_end":80051,"line_start":18,"line_end":18,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":867},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":80231,"byte_end":80234,"line_start":24,"line_end":24,"column_start":8,"column_end":11},"name":"fmt","qualname":"<DashSet<K, S> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10108},"children":[],"decl_id":{"krate":2,"index":10109},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":871},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":80406,"byte_end":80411,"line_start":30,"line_end":30,"column_start":8,"column_end":13},"name":"clone","qualname":"<DashSet<K, S> as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":872},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":80507,"byte_end":80517,"line_start":36,"line_end":36,"column_start":8,"column_end":18},"name":"clone_from","qualname":"<DashSet<K, S> as std::clone::Clone>::clone_from","value":"fn clone_from(&mut Self, &Self)","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2803},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":876},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":80708,"byte_end":80715,"line_start":46,"line_end":46,"column_start":8,"column_end":15},"name":"default","qualname":"<DashSet<K, S> as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3157},"children":[],"decl_id":{"krate":2,"index":3158},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":880},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":81066,"byte_end":81069,"line_start":62,"line_end":62,"column_start":12,"column_end":15},"name":"new","qualname":"<DashSet<K, RandomState>>::new","value":"fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new DashSet with a capacity of 0.","sig":null,"attributes":[{"value":"/ Creates a new DashSet with a capacity of 0.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":80841,"byte_end":80888,"line_start":52,"line_end":52,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":80893,"byte_end":80896,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":80901,"byte_end":80915,"line_start":54,"line_end":54,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":80920,"byte_end":80923,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":80928,"byte_end":80935,"line_start":56,"line_end":56,"column_start":5,"column_end":12}},{"value":"/ use dashmap::DashSet;","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":80940,"byte_end":80965,"line_start":57,"line_end":57,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":80970,"byte_end":80973,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ let games = DashSet::new();","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":80978,"byte_end":81009,"line_start":59,"line_end":59,"column_start":5,"column_end":36}},{"value":"/ games.insert(\"Veloren\");","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":81014,"byte_end":81042,"line_start":60,"line_end":60,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":81047,"byte_end":81054,"line_start":61,"line_end":61,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":881},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":81416,"byte_end":81429,"line_start":77,"line_end":77,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<DashSet<K, RandomState>>::with_capacity","value":"fn with_capacity(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new DashMap with a specified starting capacity.","sig":null,"attributes":[{"value":"/ Creates a new DashMap with a specified starting capacity.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":81143,"byte_end":81204,"line_start":66,"line_end":66,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":81209,"byte_end":81212,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":81217,"byte_end":81231,"line_start":68,"line_end":68,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":81236,"byte_end":81239,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":81244,"byte_end":81251,"line_start":70,"line_end":70,"column_start":5,"column_end":12}},{"value":"/ use dashmap::DashSet;","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":81256,"byte_end":81281,"line_start":71,"line_end":71,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":81286,"byte_end":81289,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ let numbers = DashSet::with_capacity(2);","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":81294,"byte_end":81338,"line_start":73,"line_end":73,"column_start":5,"column_end":49}},{"value":"/ numbers.insert(2);","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":81343,"byte_end":81365,"line_start":74,"line_end":74,"column_start":5,"column_end":27}},{"value":"/ numbers.insert(8);","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":81370,"byte_end":81392,"line_start":75,"line_end":75,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":81397,"byte_end":81404,"line_start":76,"line_end":76,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":886},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":81958,"byte_end":81969,"line_start":95,"line_end":95,"column_start":12,"column_end":23},"name":"with_hasher","qualname":"<DashSet<K, S>>::with_hasher","value":"fn with_hasher(S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new DashMap with a capacity of 0 and the provided hasher.","sig":null,"attributes":[{"value":"/ Creates a new DashMap with a capacity of 0 and the provided hasher.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":81611,"byte_end":81682,"line_start":83,"line_end":83,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":81687,"byte_end":81690,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":81695,"byte_end":81709,"line_start":85,"line_end":85,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":81714,"byte_end":81717,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":81722,"byte_end":81729,"line_start":87,"line_end":87,"column_start":5,"column_end":12}},{"value":"/ use dashmap::DashSet;","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":81734,"byte_end":81759,"line_start":88,"line_end":88,"column_start":5,"column_end":30}},{"value":"/ use std::collections::hash_map::RandomState;","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":81764,"byte_end":81812,"line_start":89,"line_end":89,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":81817,"byte_end":81820,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ let s = RandomState::new();","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":81825,"byte_end":81856,"line_start":91,"line_end":91,"column_start":5,"column_end":36}},{"value":"/ let games = DashSet::with_hasher(s);","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":81861,"byte_end":81901,"line_start":92,"line_end":92,"column_start":5,"column_end":45}},{"value":"/ games.insert(\"Veloren\");","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":81906,"byte_end":81934,"line_start":93,"line_end":93,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":81939,"byte_end":81946,"line_start":94,"line_end":94,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":887},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":82439,"byte_end":82463,"line_start":112,"line_end":112,"column_start":12,"column_end":36},"name":"with_capacity_and_hasher","qualname":"<DashSet<K, S>>::with_capacity_and_hasher","value":"fn with_capacity_and_hasher(usize, S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new DashMap with a specified starting capacity and hasher.","sig":null,"attributes":[{"value":"/ Creates a new DashMap with a specified starting capacity and hasher.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":82052,"byte_end":82124,"line_start":99,"line_end":99,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":82129,"byte_end":82132,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":82137,"byte_end":82151,"line_start":101,"line_end":101,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":82156,"byte_end":82159,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":82164,"byte_end":82171,"line_start":103,"line_end":103,"column_start":5,"column_end":12}},{"value":"/ use dashmap::DashSet;","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":82176,"byte_end":82201,"line_start":104,"line_end":104,"column_start":5,"column_end":30}},{"value":"/ use std::collections::hash_map::RandomState;","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":82206,"byte_end":82254,"line_start":105,"line_end":105,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":82259,"byte_end":82262,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ let s = RandomState::new();","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":82267,"byte_end":82298,"line_start":107,"line_end":107,"column_start":5,"column_end":36}},{"value":"/ let numbers = DashSet::with_capacity_and_hasher(2, s);","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":82303,"byte_end":82361,"line_start":108,"line_end":108,"column_start":5,"column_end":63}},{"value":"/ numbers.insert(2);","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":82366,"byte_end":82388,"line_start":109,"line_end":109,"column_start":5,"column_end":27}},{"value":"/ numbers.insert(8);","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":82393,"byte_end":82415,"line_start":110,"line_end":110,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":82420,"byte_end":82427,"line_start":111,"line_end":111,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":888},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":82713,"byte_end":82723,"line_start":120,"line_end":120,"column_start":12,"column_end":22},"name":"hash_usize","qualname":"<DashSet<K, S>>::hash_usize","value":"fn hash_usize<T>(&Self, &T) -> usize where T: Hash","parent":null,"children":[],"decl_id":null,"docs":" Hash a given item to produce a usize.\n Uses the provided or default HashBuilder.\n","sig":null,"attributes":[{"value":"/ Hash a given item to produce a usize.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":82610,"byte_end":82651,"line_start":118,"line_end":118,"column_start":5,"column_end":46}},{"value":"/ Uses the provided or default HashBuilder.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":82656,"byte_end":82701,"line_start":119,"line_end":119,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":890},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":85432,"byte_end":85438,"line_start":204,"line_end":204,"column_start":12,"column_end":18},"name":"insert","qualname":"<DashSet<K, S>>::insert","value":"fn insert(&Self, K) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Inserts a key into the set. Returns true if the key was not already in the set.","sig":null,"attributes":[{"value":"/ Inserts a key into the set. Returns true if the key was not already in the set.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":85169,"byte_end":85252,"line_start":194,"line_end":194,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":85257,"byte_end":85260,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":85265,"byte_end":85279,"line_start":196,"line_end":196,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":85284,"byte_end":85287,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":85292,"byte_end":85299,"line_start":198,"line_end":198,"column_start":5,"column_end":12}},{"value":"/ use dashmap::DashSet;","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":85304,"byte_end":85329,"line_start":199,"line_end":199,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":85334,"byte_end":85337,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ let set = DashSet::new();","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":85342,"byte_end":85371,"line_start":201,"line_end":201,"column_start":5,"column_end":34}},{"value":"/ set.insert(\"I am the key!\");","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":85376,"byte_end":85408,"line_start":202,"line_end":202,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":85413,"byte_end":85420,"line_start":203,"line_end":203,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":891},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":85850,"byte_end":85856,"line_start":219,"line_end":219,"column_start":12,"column_end":18},"name":"remove","qualname":"<DashSet<K, S>>::remove","value":"fn remove<Q>(&Self, &Q) -> Option<K> where K: Borrow<Q>, Q: Hash + Eq + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Removes an entry from the map, returning the key if it existed in the map.","sig":null,"attributes":[{"value":"/ Removes an entry from the map, returning the key if it existed in the map.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":85520,"byte_end":85598,"line_start":208,"line_end":208,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":85603,"byte_end":85606,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":85611,"byte_end":85625,"line_start":210,"line_end":210,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":85630,"byte_end":85633,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":85638,"byte_end":85645,"line_start":212,"line_end":212,"column_start":5,"column_end":12}},{"value":"/ use dashmap::DashSet;","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":85650,"byte_end":85675,"line_start":213,"line_end":213,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":85680,"byte_end":85683,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ let soccer_team = DashSet::new();","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":85688,"byte_end":85725,"line_start":215,"line_end":215,"column_start":5,"column_end":42}},{"value":"/ soccer_team.insert(\"Jack\");","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":85730,"byte_end":85761,"line_start":216,"line_end":216,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(soccer_team.remove(\"Jack\").unwrap(), \"Jack\");","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":85766,"byte_end":85826,"line_start":217,"line_end":217,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":85831,"byte_end":85838,"line_start":218,"line_end":218,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":894},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":86691,"byte_end":86700,"line_start":246,"line_end":246,"column_start":12,"column_end":21},"name":"remove_if","qualname":"<DashSet<K, S>>::remove_if","value":"fn remove_if<Q, impl FnOnce(&K) -> bool>(&Self, &Q, impl FnOnce(&K) -> bool)\n-> Option<K> where K: Borrow<Q>, Q: Hash + Eq + ?Sized,\nimpl FnOnce(&K) -> bool: for<'_> FnOnce(&'_ K) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Removes an entry from the set, returning the key\n if the entry existed and the provided conditional function returned true.","sig":null,"attributes":[{"value":"/ Removes an entry from the set, returning the key","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":86016,"byte_end":86068,"line_start":227,"line_end":227,"column_start":5,"column_end":57}},{"value":"/ if the entry existed and the provided conditional function returned true.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":86073,"byte_end":86150,"line_start":228,"line_end":228,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":86155,"byte_end":86158,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":86163,"byte_end":86170,"line_start":230,"line_end":230,"column_start":5,"column_end":12}},{"value":"/ use dashmap::DashSet;","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":86175,"byte_end":86200,"line_start":231,"line_end":231,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":86205,"byte_end":86208,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ let soccer_team = DashSet::new();","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":86213,"byte_end":86250,"line_start":233,"line_end":233,"column_start":5,"column_end":42}},{"value":"/ soccer_team.insert(\"Sam\");","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":86255,"byte_end":86285,"line_start":234,"line_end":234,"column_start":5,"column_end":35}},{"value":"/ soccer_team.remove_if(\"Sam\", |player| player.starts_with(\"Ja\"));","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":86290,"byte_end":86358,"line_start":235,"line_end":235,"column_start":5,"column_end":73}},{"value":"/ assert!(soccer_team.contains(\"Sam\"));","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":86363,"byte_end":86404,"line_start":236,"line_end":236,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":86409,"byte_end":86416,"line_start":237,"line_end":237,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":86421,"byte_end":86428,"line_start":238,"line_end":238,"column_start":5,"column_end":12}},{"value":"/ use dashmap::DashSet;","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":86433,"byte_end":86458,"line_start":239,"line_end":239,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":86463,"byte_end":86466,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ let soccer_team = DashSet::new();","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":86471,"byte_end":86508,"line_start":241,"line_end":241,"column_start":5,"column_end":42}},{"value":"/ soccer_team.insert(\"Sam\");","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":86513,"byte_end":86543,"line_start":242,"line_end":242,"column_start":5,"column_end":35}},{"value":"/ soccer_team.remove_if(\"Jacob\", |player| player.starts_with(\"Ja\"));","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":86548,"byte_end":86618,"line_start":243,"line_end":243,"column_start":5,"column_end":75}},{"value":"/ assert!(!soccer_team.contains(\"Jacob\"));","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":86623,"byte_end":86667,"line_start":244,"line_end":244,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":86672,"byte_end":86679,"line_start":245,"line_end":245,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":899},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":87249,"byte_end":87253,"line_start":266,"line_end":266,"column_start":12,"column_end":16},"name":"iter","qualname":"<DashSet<K, S>>::iter","value":"fn iter(&'a Self) -> Iter","parent":null,"children":[],"decl_id":null,"docs":" Creates an iterator over a DashMap yielding immutable references.","sig":null,"attributes":[{"value":"/ Creates an iterator over a DashMap yielding immutable references.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":86959,"byte_end":87028,"line_start":255,"line_end":255,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":87033,"byte_end":87036,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":87041,"byte_end":87055,"line_start":257,"line_end":257,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":87060,"byte_end":87063,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":87068,"byte_end":87075,"line_start":259,"line_end":259,"column_start":5,"column_end":12}},{"value":"/ use dashmap::DashSet;","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":87080,"byte_end":87105,"line_start":260,"line_end":260,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":87110,"byte_end":87113,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ let words = DashSet::new();","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":87118,"byte_end":87149,"line_start":262,"line_end":262,"column_start":5,"column_end":36}},{"value":"/ words.insert(\"hello\");","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":87154,"byte_end":87180,"line_start":263,"line_end":263,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(words.iter().count(), 1);","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":87185,"byte_end":87225,"line_start":264,"line_end":264,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":87230,"byte_end":87237,"line_start":265,"line_end":265,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":900},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":87687,"byte_end":87690,"line_start":283,"line_end":283,"column_start":12,"column_end":15},"name":"get","qualname":"<DashSet<K, S>>::get","value":"fn get<Q>(&'a Self, &Q) -> Option<Ref> where K: Borrow<Q>, Q: Hash + Eq +\n?Sized","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to an entry in the set","sig":null,"attributes":[{"value":"/ Get a reference to an entry in the set","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":87377,"byte_end":87419,"line_start":272,"line_end":272,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":87424,"byte_end":87427,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":87432,"byte_end":87446,"line_start":274,"line_end":274,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":87451,"byte_end":87454,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":87459,"byte_end":87466,"line_start":276,"line_end":276,"column_start":5,"column_end":12}},{"value":"/ use dashmap::DashSet;","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":87471,"byte_end":87496,"line_start":277,"line_end":277,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":87501,"byte_end":87504,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ let youtubers = DashSet::new();","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":87509,"byte_end":87544,"line_start":279,"line_end":279,"column_start":5,"column_end":40}},{"value":"/ youtubers.insert(\"Bosnian Bill\");","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":87549,"byte_end":87586,"line_start":280,"line_end":280,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(*youtubers.get(\"Bosnian Bill\").unwrap(), \"Bosnian Bill\");","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":87591,"byte_end":87663,"line_start":281,"line_end":281,"column_start":5,"column_end":77}},{"value":"/ ```","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":87668,"byte_end":87675,"line_start":282,"line_end":282,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":902},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":87922,"byte_end":87935,"line_start":292,"line_end":292,"column_start":12,"column_end":25},"name":"shrink_to_fit","qualname":"<DashSet<K, S>>::shrink_to_fit","value":"fn shrink_to_fit(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Remove excess capacity to reduce memory usage.\n","sig":null,"attributes":[{"value":"/ Remove excess capacity to reduce memory usage.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":87860,"byte_end":87910,"line_start":291,"line_end":291,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":903},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":88435,"byte_end":88441,"line_start":311,"line_end":311,"column_start":12,"column_end":18},"name":"retain","qualname":"<DashSet<K, S>>::retain","value":"fn retain<impl FnMut(&K) -> bool>(&Self, impl FnMut(&K) -> bool) where\nimpl FnMut(&K) -> bool: for<'_> FnMut(&'_ K) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Retain elements that whose predicates return true\n and discard elements whose predicates return false.","sig":null,"attributes":[{"value":"/ Retain elements that whose predicates return true","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":87991,"byte_end":88044,"line_start":296,"line_end":296,"column_start":5,"column_end":58}},{"value":"/ and discard elements whose predicates return false.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":88049,"byte_end":88104,"line_start":297,"line_end":297,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":88109,"byte_end":88112,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":88117,"byte_end":88131,"line_start":299,"line_end":299,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":88136,"byte_end":88139,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":88144,"byte_end":88151,"line_start":301,"line_end":301,"column_start":5,"column_end":12}},{"value":"/ use dashmap::DashSet;","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":88156,"byte_end":88181,"line_start":302,"line_end":302,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":88186,"byte_end":88189,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ let people = DashSet::new();","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":88194,"byte_end":88226,"line_start":304,"line_end":304,"column_start":5,"column_end":37}},{"value":"/ people.insert(\"Albin\");","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":88231,"byte_end":88258,"line_start":305,"line_end":305,"column_start":5,"column_end":32}},{"value":"/ people.insert(\"Jones\");","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":88263,"byte_end":88290,"line_start":306,"line_end":306,"column_start":5,"column_end":32}},{"value":"/ people.insert(\"Charlie\");","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":88295,"byte_end":88324,"line_start":307,"line_end":307,"column_start":5,"column_end":34}},{"value":"/ people.retain(|name| name.contains('i'));","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":88329,"byte_end":88374,"line_start":308,"line_end":308,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(people.len(), 2);","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":88379,"byte_end":88411,"line_start":309,"line_end":309,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":88416,"byte_end":88423,"line_start":310,"line_end":310,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":906},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":88868,"byte_end":88871,"line_start":328,"line_end":328,"column_start":12,"column_end":15},"name":"len","qualname":"<DashSet<K, S>>::len","value":"fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Fetches the total number of keys stored in the set.","sig":null,"attributes":[{"value":"/ Fetches the total number of keys stored in the set.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":88532,"byte_end":88587,"line_start":315,"line_end":315,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":88592,"byte_end":88595,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":88600,"byte_end":88614,"line_start":317,"line_end":317,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":88619,"byte_end":88622,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":88627,"byte_end":88634,"line_start":319,"line_end":319,"column_start":5,"column_end":12}},{"value":"/ use dashmap::DashSet;","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":88639,"byte_end":88664,"line_start":320,"line_end":320,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":88669,"byte_end":88672,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ let people = DashSet::new();","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":88677,"byte_end":88709,"line_start":322,"line_end":322,"column_start":5,"column_end":37}},{"value":"/ people.insert(\"Albin\");","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":88714,"byte_end":88741,"line_start":323,"line_end":323,"column_start":5,"column_end":32}},{"value":"/ people.insert(\"Jones\");","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":88746,"byte_end":88773,"line_start":324,"line_end":324,"column_start":5,"column_end":32}},{"value":"/ people.insert(\"Charlie\");","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":88778,"byte_end":88807,"line_start":325,"line_end":325,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(people.len(), 3);","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":88812,"byte_end":88844,"line_start":326,"line_end":326,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":88849,"byte_end":88856,"line_start":327,"line_end":327,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":907},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":89146,"byte_end":89154,"line_start":342,"line_end":342,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<DashSet<K, S>>::is_empty","value":"fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the set is empty or not.","sig":null,"attributes":[{"value":"/ Checks if the set is empty or not.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":88926,"byte_end":88964,"line_start":332,"line_end":332,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":88969,"byte_end":88972,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":88977,"byte_end":88991,"line_start":334,"line_end":334,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":88996,"byte_end":88999,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":89004,"byte_end":89011,"line_start":336,"line_end":336,"column_start":5,"column_end":12}},{"value":"/ use dashmap::DashSet;","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":89016,"byte_end":89041,"line_start":337,"line_end":337,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":89046,"byte_end":89049,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ let map = DashSet::<()>::new();","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":89054,"byte_end":89089,"line_start":339,"line_end":339,"column_start":5,"column_end":40}},{"value":"/ assert!(map.is_empty());","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":89094,"byte_end":89122,"line_start":340,"line_end":340,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":89127,"byte_end":89134,"line_start":341,"line_end":341,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":908},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":89520,"byte_end":89525,"line_start":359,"line_end":359,"column_start":12,"column_end":17},"name":"clear","qualname":"<DashSet<K, S>>::clear","value":"fn clear(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Removes all keys in the set.","sig":null,"attributes":[{"value":"/ Removes all keys in the set.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":89213,"byte_end":89245,"line_start":346,"line_end":346,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":89250,"byte_end":89253,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":89258,"byte_end":89272,"line_start":348,"line_end":348,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":89277,"byte_end":89280,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":89285,"byte_end":89292,"line_start":350,"line_end":350,"column_start":5,"column_end":12}},{"value":"/ use dashmap::DashSet;","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":89297,"byte_end":89322,"line_start":351,"line_end":351,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":89327,"byte_end":89330,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ let people = DashSet::new();","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":89335,"byte_end":89367,"line_start":353,"line_end":353,"column_start":5,"column_end":37}},{"value":"/ people.insert(\"Albin\");","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":89372,"byte_end":89399,"line_start":354,"line_end":354,"column_start":5,"column_end":32}},{"value":"/ assert!(!people.is_empty());","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":89404,"byte_end":89436,"line_start":355,"line_end":355,"column_start":5,"column_end":37}},{"value":"/ people.clear();","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":89441,"byte_end":89460,"line_start":356,"line_end":356,"column_start":5,"column_end":24}},{"value":"/ assert!(people.is_empty());","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":89465,"byte_end":89496,"line_start":357,"line_end":357,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":89501,"byte_end":89508,"line_start":358,"line_end":358,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":909},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":89650,"byte_end":89658,"line_start":364,"line_end":364,"column_start":12,"column_end":20},"name":"capacity","qualname":"<DashSet<K, S>>::capacity","value":"fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns how many keys the set can store without reallocating.\n","sig":null,"attributes":[{"value":"/ Returns how many keys the set can store without reallocating.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":89573,"byte_end":89638,"line_start":363,"line_end":363,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":910},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":90005,"byte_end":90013,"line_start":379,"line_end":379,"column_start":12,"column_end":20},"name":"contains","qualname":"<DashSet<K, S>>::contains","value":"fn contains<Q>(&Self, &Q) -> bool where K: Borrow<Q>, Q: Hash + Eq + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Checks if the set contains a specific key.","sig":null,"attributes":[{"value":"/ Checks if the set contains a specific key.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":89718,"byte_end":89764,"line_start":368,"line_end":368,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":89769,"byte_end":89772,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":89777,"byte_end":89791,"line_start":370,"line_end":370,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":89796,"byte_end":89799,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":89804,"byte_end":89811,"line_start":372,"line_end":372,"column_start":5,"column_end":12}},{"value":"/ use dashmap::DashSet;","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":89816,"byte_end":89841,"line_start":373,"line_end":373,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":89846,"byte_end":89849,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ let people = DashSet::new();","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":89854,"byte_end":89886,"line_start":375,"line_end":375,"column_start":5,"column_end":37}},{"value":"/ people.insert(\"Dakota Cherries\");","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":89891,"byte_end":89928,"line_start":376,"line_end":376,"column_start":5,"column_end":42}},{"value":"/ assert!(people.contains(\"Dakota Cherries\"));","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":89933,"byte_end":89981,"line_start":377,"line_end":377,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":89986,"byte_end":89993,"line_start":378,"line_end":378,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":918},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":90302,"byte_end":90311,"line_start":393,"line_end":393,"column_start":8,"column_end":17},"name":"into_iter","qualname":"<DashSet<K, S> as std::iter::IntoIterator>::into_iter","value":"fn into_iter(Self) -> Self::IntoIter","parent":{"krate":2,"index":8279},"children":[],"decl_id":{"krate":2,"index":8282},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":922},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":90475,"byte_end":90481,"line_start":399,"line_end":399,"column_start":8,"column_end":14},"name":"extend","qualname":"<DashSet<K, S> as std::iter::Extend>::extend","value":"fn extend<T>(&mut Self, T) where T: IntoIterator<Item = K>","parent":{"krate":2,"index":8288},"children":[],"decl_id":{"krate":2,"index":8290},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":928},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":90723,"byte_end":90732,"line_start":407,"line_end":407,"column_start":8,"column_end":17},"name":"from_iter","qualname":"<DashSet<K, S> as std::iter::FromIterator>::from_iter","value":"fn from_iter<I>(I) -> Self where I: IntoIterator<Item = K>","parent":{"krate":2,"index":8275},"children":[],"decl_id":{"krate":2,"index":8277},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":930},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/setref/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"setref","qualname":"::setref","value":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/setref/mod.rs","parent":null,"children":[{"krate":0,"index":931},{"krate":0,"index":965}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":931},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/setref/multiple.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"multiple","qualname":"::setref::multiple","value":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/setref/multiple.rs","parent":null,"children":[{"krate":0,"index":932},{"krate":0,"index":935},{"krate":0,"index":936},{"krate":0,"index":939},{"krate":0,"index":940},{"krate":0,"index":942},{"krate":0,"index":945},{"krate":0,"index":948},{"krate":0,"index":953},{"krate":0,"index":959}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":948},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/setref/multiple.rs","byte_start":91828,"byte_end":91836,"line_start":5,"line_end":5,"column_start":12,"column_end":20},"name":"RefMulti","qualname":"::setref::multiple::RefMulti","value":"RefMulti {  }","parent":null,"children":[{"krate":0,"index":952}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":958},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/setref/multiple.rs","byte_start":92101,"byte_end":92104,"line_start":14,"line_end":14,"column_start":12,"column_end":15},"name":"key","qualname":"<RefMulti>::key","value":"fn key(&Self) -> &K","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":964},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/setref/multiple.rs","byte_start":92253,"byte_end":92258,"line_start":22,"line_end":22,"column_start":8,"column_end":13},"name":"deref","qualname":"<RefMulti as std::ops::Deref>::deref","value":"fn deref(&Self) -> &K","parent":{"krate":2,"index":3398},"children":[],"decl_id":{"krate":2,"index":3400},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":965},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/setref/one.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"one","qualname":"::setref::one","value":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/setref/one.rs","parent":null,"children":[{"krate":0,"index":966},{"krate":0,"index":969},{"krate":0,"index":970},{"krate":0,"index":973},{"krate":0,"index":974},{"krate":0,"index":976},{"krate":0,"index":979},{"krate":0,"index":982},{"krate":0,"index":987},{"krate":0,"index":993}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":982},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/setref/one.rs","byte_start":92436,"byte_end":92439,"line_start":5,"line_end":5,"column_start":12,"column_end":15},"name":"Ref","qualname":"::setref::one::Ref","value":"Ref {  }","parent":null,"children":[{"krate":0,"index":986}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":992},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/setref/one.rs","byte_start":92679,"byte_end":92682,"line_start":14,"line_end":14,"column_start":12,"column_end":15},"name":"key","qualname":"<Ref>::key","value":"fn key(&Self) -> &K","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":998},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/setref/one.rs","byte_start":92826,"byte_end":92831,"line_start":22,"line_end":22,"column_start":8,"column_end":13},"name":"deref","qualname":"<Ref as std::ops::Deref>::deref","value":"fn deref(&Self) -> &K","parent":{"krate":2,"index":3398},"children":[],"decl_id":{"krate":2,"index":3400},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1040},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/t.rs","byte_start":93324,"byte_end":93327,"line_start":13,"line_end":13,"column_start":11,"column_end":14},"name":"Map","qualname":"::t::Map","value":"Map<'a, K, V, S>","parent":null,"children":[{"krate":0,"index":1045},{"krate":0,"index":1046},{"krate":0,"index":1047},{"krate":0,"index":1048},{"krate":0,"index":1049},{"krate":0,"index":1050},{"krate":0,"index":1051},{"krate":0,"index":1052},{"krate":0,"index":1054},{"krate":0,"index":1057},{"krate":0,"index":1060},{"krate":0,"index":1061},{"krate":0,"index":1062},{"krate":0,"index":1064},{"krate":0,"index":1066},{"krate":0,"index":1068},{"krate":0,"index":1070},{"krate":0,"index":1071},{"krate":0,"index":1073},{"krate":0,"index":1074},{"krate":0,"index":1075},{"krate":0,"index":1078},{"krate":0,"index":1080},{"krate":0,"index":1084},{"krate":0,"index":1085},{"krate":0,"index":1086},{"krate":0,"index":1087},{"krate":0,"index":1089},{"krate":0,"index":1091}],"decl_id":null,"docs":" Implementation detail that is exposed due to generic constraints in public types.\n","sig":null,"attributes":[{"value":"/ Implementation detail that is exposed due to generic constraints in public types.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/t.rs","byte_start":93228,"byte_end":93313,"line_start":12,"line_end":12,"column_start":1,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":1045},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/t.rs","byte_start":93396,"byte_end":93408,"line_start":14,"line_end":14,"column_start":8,"column_end":20},"name":"_shard_count","qualname":"::t::Map::_shard_count","value":"fn _shard_count(&Self) -> usize","parent":{"krate":0,"index":1040},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1046},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/t.rs","byte_start":93511,"byte_end":93526,"line_start":19,"line_end":19,"column_start":15,"column_end":30},"name":"_get_read_shard","qualname":"::t::Map::_get_read_shard","value":"unsafe fn _get_read_shard(&'a Self, usize) -> &'a HashMap<K, V, S>","parent":{"krate":0,"index":1040},"children":[],"decl_id":null,"docs":" # Safety","sig":null,"attributes":[{"value":"/ # Safety","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/t.rs","byte_start":93431,"byte_end":93443,"line_start":16,"line_end":16,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/t.rs","byte_start":93448,"byte_end":93451,"line_start":17,"line_end":17,"column_start":5,"column_end":8}},{"value":"/ The index must not be out of bounds.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/t.rs","byte_start":93456,"byte_end":93496,"line_start":18,"line_end":18,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1047},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/t.rs","byte_start":93657,"byte_end":93674,"line_start":24,"line_end":24,"column_start":15,"column_end":32},"name":"_yield_read_shard","qualname":"::t::Map::_yield_read_shard","value":"unsafe fn _yield_read_shard(&'a Self, usize) -> RwLockReadGuard","parent":{"krate":0,"index":1040},"children":[],"decl_id":null,"docs":" # Safety","sig":null,"attributes":[{"value":"/ # Safety","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/t.rs","byte_start":93577,"byte_end":93589,"line_start":21,"line_end":21,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/t.rs","byte_start":93594,"byte_end":93597,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ The index must not be out of bounds.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/t.rs","byte_start":93602,"byte_end":93642,"line_start":23,"line_end":23,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1048},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/t.rs","byte_start":93822,"byte_end":93840,"line_start":29,"line_end":29,"column_start":15,"column_end":33},"name":"_yield_write_shard","qualname":"::t::Map::_yield_write_shard","value":"unsafe fn _yield_write_shard(&'a Self, usize) -> RwLockWriteGuard","parent":{"krate":0,"index":1040},"children":[],"decl_id":null,"docs":" # Safety","sig":null,"attributes":[{"value":"/ # Safety","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/t.rs","byte_start":93742,"byte_end":93754,"line_start":26,"line_end":26,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/t.rs","byte_start":93759,"byte_end":93762,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ The index must not be out of bounds.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/t.rs","byte_start":93767,"byte_end":93807,"line_start":28,"line_end":28,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1049},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/t.rs","byte_start":93989,"byte_end":94010,"line_start":34,"line_end":34,"column_start":15,"column_end":36},"name":"_try_yield_read_shard","qualname":"::t::Map::_try_yield_read_shard","value":"unsafe fn _try_yield_read_shard(&'a Self, usize) -> Option<RwLockReadGuard>","parent":{"krate":0,"index":1040},"children":[],"decl_id":null,"docs":" # Safety","sig":null,"attributes":[{"value":"/ # Safety","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/t.rs","byte_start":93909,"byte_end":93921,"line_start":31,"line_end":31,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/t.rs","byte_start":93926,"byte_end":93929,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ The index must not be out of bounds.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/t.rs","byte_start":93934,"byte_end":93974,"line_start":33,"line_end":33,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1050},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/t.rs","byte_start":94189,"byte_end":94211,"line_start":42,"line_end":42,"column_start":15,"column_end":37},"name":"_try_yield_write_shard","qualname":"::t::Map::_try_yield_write_shard","value":"unsafe fn _try_yield_write_shard(&'a Self, usize) -> Option<RwLockWriteGuard>","parent":{"krate":0,"index":1040},"children":[],"decl_id":null,"docs":" # Safety","sig":null,"attributes":[{"value":"/ # Safety","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/t.rs","byte_start":94109,"byte_end":94121,"line_start":39,"line_end":39,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/t.rs","byte_start":94126,"byte_end":94129,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ The index must not be out of bounds.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/t.rs","byte_start":94134,"byte_end":94174,"line_start":41,"line_end":41,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1051},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/t.rs","byte_start":94314,"byte_end":94321,"line_start":47,"line_end":47,"column_start":8,"column_end":15},"name":"_insert","qualname":"::t::Map::_insert","value":"fn _insert(&Self, K, V) -> Option<V>","parent":{"krate":0,"index":1040},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1052},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/t.rs","byte_start":94369,"byte_end":94376,"line_start":49,"line_end":49,"column_start":8,"column_end":15},"name":"_remove","qualname":"::t::Map::_remove","value":"fn _remove<Q>(&Self, &Q) -> Option<(K, V)> where K: Borrow<Q>, Q: Hash + Eq +\n?Sized","parent":{"krate":0,"index":1040},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1054},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/t.rs","byte_start":94485,"byte_end":94495,"line_start":54,"line_end":54,"column_start":8,"column_end":18},"name":"_remove_if","qualname":"::t::Map::_remove_if","value":"fn _remove_if<Q,\nimpl FnOnce(&K, &V) -> bool>(&Self, &Q, impl FnOnce(&K, &V) -> bool)\n-> Option<(K, V)> where K: Borrow<Q>, Q: Hash + Eq + ?Sized,\nimpl FnOnce(&K, &V) -> bool: for<'_, '_> FnOnce(&'_ K, &'_ V) -> bool","parent":{"krate":0,"index":1040},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1057},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/t.rs","byte_start":94636,"byte_end":94650,"line_start":59,"line_end":59,"column_start":8,"column_end":22},"name":"_remove_if_mut","qualname":"::t::Map::_remove_if_mut","value":"fn _remove_if_mut<Q,\nimpl FnOnce(&K, &mut V) -> bool>(&Self, &Q, impl FnOnce(&K, &mut V) -> bool)\n-> Option<(K, V)> where K: Borrow<Q>, Q: Hash + Eq + ?Sized,\nimpl FnOnce(&K, &mut V) -> bool: for<'_, '_> FnOnce(&'_ K, &'_ mut V) -> bool","parent":{"krate":0,"index":1040},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1060},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/t.rs","byte_start":94795,"byte_end":94800,"line_start":64,"line_end":64,"column_start":8,"column_end":13},"name":"_iter","qualname":"::t::Map::_iter","value":"fn _iter(&'a Self) -> Iter where Self: Sized","parent":{"krate":0,"index":1040},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1061},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/t.rs","byte_start":94877,"byte_end":94886,"line_start":68,"line_end":68,"column_start":8,"column_end":17},"name":"_iter_mut","qualname":"::t::Map::_iter_mut","value":"fn _iter_mut(&'a Self) -> IterMut where Self: Sized","parent":{"krate":0,"index":1040},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1062},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/t.rs","byte_start":94966,"byte_end":94970,"line_start":72,"line_end":72,"column_start":8,"column_end":12},"name":"_get","qualname":"::t::Map::_get","value":"fn _get<Q>(&'a Self, &Q) -> Option<Ref> where K: Borrow<Q>, Q: Hash + Eq +\n?Sized","parent":{"krate":0,"index":1040},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1064},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/t.rs","byte_start":95092,"byte_end":95100,"line_start":77,"line_end":77,"column_start":8,"column_end":16},"name":"_get_mut","qualname":"::t::Map::_get_mut","value":"fn _get_mut<Q>(&'a Self, &Q) -> Option<RefMut> where K: Borrow<Q>, Q: Hash +\nEq + ?Sized","parent":{"krate":0,"index":1040},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1066},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/t.rs","byte_start":95225,"byte_end":95233,"line_start":82,"line_end":82,"column_start":8,"column_end":16},"name":"_try_get","qualname":"::t::Map::_try_get","value":"fn _try_get<Q>(&'a Self, &Q) -> TryResult<Ref> where K: Borrow<Q>, Q: Hash +\nEq + ?Sized","parent":{"krate":0,"index":1040},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1068},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/t.rs","byte_start":95358,"byte_end":95370,"line_start":87,"line_end":87,"column_start":8,"column_end":20},"name":"_try_get_mut","qualname":"::t::Map::_try_get_mut","value":"fn _try_get_mut<Q>(&'a Self, &Q) -> TryResult<RefMut> where K: Borrow<Q>,\nQ: Hash + Eq + ?Sized","parent":{"krate":0,"index":1040},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1070},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/t.rs","byte_start":95498,"byte_end":95512,"line_start":92,"line_end":92,"column_start":8,"column_end":22},"name":"_shrink_to_fit","qualname":"::t::Map::_shrink_to_fit","value":"fn _shrink_to_fit(&Self)","parent":{"krate":0,"index":1040},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1071},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/t.rs","byte_start":95529,"byte_end":95536,"line_start":94,"line_end":94,"column_start":8,"column_end":15},"name":"_retain","qualname":"::t::Map::_retain","value":"fn _retain<impl FnMut(&K, &mut V) -> bool>(&Self,\nimpl FnMut(&K, &mut V) -> bool) where\nimpl FnMut(&K, &mut V) -> bool: for<'_, '_> FnMut(&'_ K, &'_ mut V) -> bool","parent":{"krate":0,"index":1040},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1073},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/t.rs","byte_start":95588,"byte_end":95592,"line_start":96,"line_end":96,"column_start":8,"column_end":12},"name":"_len","qualname":"::t::Map::_len","value":"fn _len(&Self) -> usize","parent":{"krate":0,"index":1040},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1074},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/t.rs","byte_start":95618,"byte_end":95627,"line_start":98,"line_end":98,"column_start":8,"column_end":17},"name":"_capacity","qualname":"::t::Map::_capacity","value":"fn _capacity(&Self) -> usize","parent":{"krate":0,"index":1040},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1075},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/t.rs","byte_start":95653,"byte_end":95659,"line_start":100,"line_end":100,"column_start":8,"column_end":14},"name":"_alter","qualname":"::t::Map::_alter","value":"fn _alter<Q, impl FnOnce(&K, V) -> V>(&Self, &Q, impl FnOnce(&K, V) -> V)\nwhere K: Borrow<Q>, Q: Hash + Eq + ?Sized,\nimpl FnOnce(&K, V) -> V: for<'_> FnOnce(&'_ K, V) -> V","parent":{"krate":0,"index":1040},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1078},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/t.rs","byte_start":95778,"byte_end":95788,"line_start":105,"line_end":105,"column_start":8,"column_end":18},"name":"_alter_all","qualname":"::t::Map::_alter_all","value":"fn _alter_all<impl FnMut(&K, V) -> V>(&Self, impl FnMut(&K, V) -> V) where\nimpl FnMut(&K, V) -> V: for<'_> FnMut(&'_ K, V) -> V","parent":{"krate":0,"index":1040},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1080},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/t.rs","byte_start":95832,"byte_end":95837,"line_start":107,"line_end":107,"column_start":8,"column_end":13},"name":"_view","qualname":"::t::Map::_view","value":"fn _view<Q, R, impl FnOnce(&K, &V) -> R>(&Self, &Q, impl FnOnce(&K, &V) -> R)\n-> Option<R> where K: Borrow<Q>, Q: Hash + Eq + ?Sized,\nimpl FnOnce(&K, &V) -> R: for<'_, '_> FnOnce(&'_ K, &'_ V) -> R","parent":{"krate":0,"index":1040},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1084},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/t.rs","byte_start":95973,"byte_end":95979,"line_start":112,"line_end":112,"column_start":8,"column_end":14},"name":"_entry","qualname":"::t::Map::_entry","value":"fn _entry(&'a Self, K) -> Entry","parent":{"krate":0,"index":1040},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1085},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/t.rs","byte_start":96029,"byte_end":96039,"line_start":114,"line_end":114,"column_start":8,"column_end":18},"name":"_try_entry","qualname":"::t::Map::_try_entry","value":"fn _try_entry(&'a Self, K) -> Option<Entry>","parent":{"krate":0,"index":1040},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1086},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/t.rs","byte_start":96097,"byte_end":96104,"line_start":116,"line_end":116,"column_start":8,"column_end":15},"name":"_hasher","qualname":"::t::Map::_hasher","value":"fn _hasher(&Self) -> S","parent":{"krate":0,"index":1040},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1087},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/t.rs","byte_start":96142,"byte_end":96148,"line_start":119,"line_end":119,"column_start":8,"column_end":14},"name":"_clear","qualname":"::t::Map::_clear","value":"fn _clear(&Self)","parent":{"krate":0,"index":1040},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1089},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/t.rs","byte_start":96207,"byte_end":96220,"line_start":123,"line_end":123,"column_start":8,"column_end":21},"name":"_contains_key","qualname":"::t::Map::_contains_key","value":"fn _contains_key<Q>(&'a Self, &Q) -> bool where K: Borrow<Q>, Q: Hash + Eq +\n?Sized","parent":{"krate":0,"index":1040},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1091},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/t.rs","byte_start":96367,"byte_end":96376,"line_start":131,"line_end":131,"column_start":8,"column_end":17},"name":"_is_empty","qualname":"::t::Map::_is_empty","value":"fn _is_empty(&Self) -> bool","parent":{"krate":0,"index":1040},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1092},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/try_result.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"try_result","qualname":"::try_result","value":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/try_result.rs","parent":null,"children":[{"krate":0,"index":1453},{"krate":0,"index":1462},{"krate":0,"index":1093}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1455},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/try_result.rs","byte_start":96652,"byte_end":96659,"line_start":5,"line_end":5,"column_start":5,"column_end":12},"name":"Present","qualname":"::try_result::TryResult::Present","value":"TryResult::Present(R)","parent":{"krate":0,"index":1453},"children":[],"decl_id":null,"docs":" The value was present in the map, and the lock for the shard was successfully obtained.\n","sig":null,"attributes":[{"value":"/ The value was present in the map, and the lock for the shard was successfully obtained.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/try_result.rs","byte_start":96556,"byte_end":96647,"line_start":4,"line_end":4,"column_start":5,"column_end":96}}]},{"kind":"Field","id":{"krate":0,"index":1457},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/try_result.rs","byte_start":96660,"byte_end":96661,"line_start":5,"line_end":5,"column_start":13,"column_end":14},"name":"0","qualname":"::try_result::TryResult::Present::0","value":"R","parent":{"krate":0,"index":1455},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1458},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/try_result.rs","byte_start":96742,"byte_end":96748,"line_start":7,"line_end":7,"column_start":5,"column_end":11},"name":"Absent","qualname":"::try_result::TryResult::Absent","value":"TryResult::Absent","parent":{"krate":0,"index":1453},"children":[],"decl_id":null,"docs":" The shard wasn't locked, and the value wasn't present in the map.\n","sig":null,"attributes":[{"value":"/ The shard wasn't locked, and the value wasn't present in the map.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/try_result.rs","byte_start":96668,"byte_end":96737,"line_start":6,"line_end":6,"column_start":5,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1460},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/try_result.rs","byte_start":96784,"byte_end":96790,"line_start":9,"line_end":9,"column_start":5,"column_end":11},"name":"Locked","qualname":"::try_result::TryResult::Locked","value":"TryResult::Locked","parent":{"krate":0,"index":1453},"children":[],"decl_id":null,"docs":" The shard was locked.\n","sig":null,"attributes":[{"value":"/ The shard was locked.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/try_result.rs","byte_start":96754,"byte_end":96779,"line_start":8,"line_end":8,"column_start":5,"column_end":30}}]},{"kind":"Enum","id":{"krate":0,"index":1453},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/try_result.rs","byte_start":96537,"byte_end":96546,"line_start":3,"line_end":3,"column_start":10,"column_end":19},"name":"TryResult","qualname":"::try_result::TryResult","value":"enum TryResult<R> { Present(R), Absent, Locked, }","parent":null,"children":[{"krate":0,"index":1455},{"krate":0,"index":1458},{"krate":0,"index":1460}],"decl_id":null,"docs":" Represents the result of a non-blocking read from a [DashMap](crate::DashMap).\n","sig":null,"attributes":[{"value":"/ Represents the result of a non-blocking read from a [DashMap](crate::DashMap).","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/try_result.rs","byte_start":96428,"byte_end":96510,"line_start":1,"line_end":1,"column_start":1,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":1095},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/try_result.rs","byte_start":96943,"byte_end":96953,"line_start":14,"line_end":14,"column_start":12,"column_end":22},"name":"is_present","qualname":"<TryResult<R>>::is_present","value":"fn is_present(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the value was present in the map, and the lock for the shard was successfully obtained.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the value was present in the map, and the lock for the shard was successfully obtained.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/try_result.rs","byte_start":96822,"byte_end":96931,"line_start":13,"line_end":13,"column_start":5,"column_end":114}}]},{"kind":"Method","id":{"krate":0,"index":1096},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/try_result.rs","byte_start":97127,"byte_end":97136,"line_start":19,"line_end":19,"column_start":12,"column_end":21},"name":"is_absent","qualname":"<TryResult<R>>::is_absent","value":"fn is_absent(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the shard wasn't locked, and the value wasn't present in the map.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the shard wasn't locked, and the value wasn't present in the map.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/try_result.rs","byte_start":97028,"byte_end":97115,"line_start":18,"line_end":18,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":1097},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/try_result.rs","byte_start":97262,"byte_end":97271,"line_start":24,"line_end":24,"column_start":12,"column_end":21},"name":"is_locked","qualname":"<TryResult<R>>::is_locked","value":"fn is_locked(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the shard was locked.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the shard was locked.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/try_result.rs","byte_start":97207,"byte_end":97250,"line_start":23,"line_end":23,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1098},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/try_result.rs","byte_start":97511,"byte_end":97517,"line_start":30,"line_end":30,"column_start":12,"column_end":18},"name":"unwrap","qualname":"<TryResult<R>>::unwrap","value":"fn unwrap(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" If `self` is [Present](TryResult::Present), returns the reference to the value in the map.\n Panics if `self` is not [Present](TryResult::Present).\n","sig":null,"attributes":[{"value":"/ If `self` is [Present](TryResult::Present), returns the reference to the value in the map.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/try_result.rs","byte_start":97342,"byte_end":97436,"line_start":28,"line_end":28,"column_start":5,"column_end":99}},{"value":"/ Panics if `self` is not [Present](TryResult::Present).","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/try_result.rs","byte_start":97441,"byte_end":97499,"line_start":29,"line_end":29,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1099},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/try_result.rs","byte_start":97953,"byte_end":97963,"line_start":40,"line_end":40,"column_start":12,"column_end":22},"name":"try_unwrap","qualname":"<TryResult<R>>::try_unwrap","value":"fn try_unwrap(Self) -> Option<R>","parent":null,"children":[],"decl_id":null,"docs":" If `self` is [Present](TryResult::Present), returns the reference to the value in the map.\n If `self` is not [Present](TryResult::Present), returns `None`.\n","sig":null,"attributes":[{"value":"/ If `self` is [Present](TryResult::Present), returns the reference to the value in the map.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/try_result.rs","byte_start":97775,"byte_end":97869,"line_start":38,"line_end":38,"column_start":5,"column_end":99}},{"value":"/ If `self` is not [Present](TryResult::Present), returns `None`.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/try_result.rs","byte_start":97874,"byte_end":97941,"line_start":39,"line_end":39,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":1124},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/util.rs","byte_start":99546,"byte_end":99557,"line_start":47,"line_end":47,"column_start":12,"column_end":23},"name":"SharedValue","qualname":"::util::SharedValue","value":"SharedValue {  }","parent":null,"children":[{"krate":0,"index":1126}],"decl_id":null,"docs":" A simple wrapper around `T`","sig":null,"attributes":[{"value":"/ A simple wrapper around `T`","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/util.rs","byte_start":99125,"byte_end":99156,"line_start":37,"line_end":37,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/util.rs","byte_start":99157,"byte_end":99160,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ This is to prevent UB when using `HashMap::get_key_value`, because","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/util.rs","byte_start":99161,"byte_end":99231,"line_start":39,"line_end":39,"column_start":1,"column_end":71}},{"value":"/ `HashMap` doesn't expose an api to get the key and value, where","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/util.rs","byte_start":99232,"byte_end":99299,"line_start":40,"line_end":40,"column_start":1,"column_end":68}},{"value":"/ the value is a `&mut T`.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/util.rs","byte_start":99300,"byte_end":99328,"line_start":41,"line_end":41,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/util.rs","byte_start":99329,"byte_end":99332,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ See [#10](https://github.com/xacrimon/dashmap/issues/10) for details","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/util.rs","byte_start":99333,"byte_end":99405,"line_start":43,"line_end":43,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/util.rs","byte_start":99406,"byte_end":99409,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ This type is meant to be an implementation detail, but must be exposed due to the `Dashmap::shards`","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/util.rs","byte_start":99410,"byte_end":99513,"line_start":45,"line_end":45,"column_start":1,"column_end":104}},{"value":"repr(transparent)","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/util.rs","byte_start":99514,"byte_end":99534,"line_start":46,"line_end":46,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":1129},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/util.rs","byte_start":99641,"byte_end":99646,"line_start":52,"line_end":52,"column_start":8,"column_end":13},"name":"clone","qualname":"<SharedValue<T> as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1136},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/util.rs","byte_start":99960,"byte_end":99963,"line_start":67,"line_end":67,"column_start":18,"column_end":21},"name":"new","qualname":"<SharedValue<T>>::new","value":"const fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `SharedValue<T>`\n","sig":null,"attributes":[{"value":"/ Create a new `SharedValue<T>`","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/util.rs","byte_start":99909,"byte_end":99942,"line_start":66,"line_end":66,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1137},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/util.rs","byte_start":100108,"byte_end":100111,"line_start":74,"line_end":74,"column_start":12,"column_end":15},"name":"get","qualname":"<SharedValue<T>>::get","value":"fn get(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Get a shared reference to `T`\n","sig":null,"attributes":[{"value":"/ Get a shared reference to `T`","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/util.rs","byte_start":100063,"byte_end":100096,"line_start":73,"line_end":73,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1138},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/util.rs","byte_start":100222,"byte_end":100229,"line_start":79,"line_end":79,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<SharedValue<T>>::get_mut","value":"fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Get an unique reference to `T`\n","sig":null,"attributes":[{"value":"/ Get an unique reference to `T`","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/util.rs","byte_start":100176,"byte_end":100210,"line_start":78,"line_end":78,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1139},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/util.rs","byte_start":100339,"byte_end":100349,"line_start":84,"line_end":84,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<SharedValue<T>>::into_inner","value":"fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Unwraps the value\n","sig":null,"attributes":[{"value":"/ Unwraps the value","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/util.rs","byte_start":100306,"byte_end":100327,"line_start":83,"line_end":83,"column_start":5,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":1244},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":2132,"byte_end":2139,"line_start":73,"line_end":73,"column_start":12,"column_end":19},"name":"DashMap","qualname":"::DashMap","value":"DashMap {  }","parent":null,"children":[{"krate":0,"index":1248},{"krate":0,"index":1249},{"krate":0,"index":1250}],"decl_id":null,"docs":" DashMap is an implementation of a concurrent associative array/hashmap in Rust.","sig":null,"attributes":[{"value":"/ DashMap is an implementation of a concurrent associative array/hashmap in Rust.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":1404,"byte_end":1487,"line_start":62,"line_end":62,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":1488,"byte_end":1491,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ DashMap tries to implement an easy to use API similar to `std::collections::HashMap`","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":1492,"byte_end":1580,"line_start":64,"line_end":64,"column_start":1,"column_end":89}},{"value":"/ with some slight changes to handle concurrency.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":1581,"byte_end":1632,"line_start":65,"line_end":65,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":1633,"byte_end":1636,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ DashMap tries to be very simple to use and to be a direct replacement for `RwLock<HashMap<K, V, S>>`.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":1637,"byte_end":1742,"line_start":67,"line_end":67,"column_start":1,"column_end":106}},{"value":"/ To accomplish these all methods take `&self` instead modifying methods taking `&mut self`.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":1743,"byte_end":1837,"line_start":68,"line_end":68,"column_start":1,"column_end":95}},{"value":"/ This allows you to put a DashMap in an `Arc<T>` and share it between threads while being able to modify it.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":1838,"byte_end":1949,"line_start":69,"line_end":69,"column_start":1,"column_end":112}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":1950,"byte_end":1953,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ Documentation mentioning locking behaviour acts in the reference frame of the calling thread.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":1954,"byte_end":2051,"line_start":71,"line_end":71,"column_start":1,"column_end":98}},{"value":"/ This means that it is safe to ignore it across multiple threads.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":2052,"byte_end":2120,"line_start":72,"line_end":72,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1255},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":2329,"byte_end":2334,"line_start":80,"line_end":80,"column_start":8,"column_end":13},"name":"clone","qualname":"<DashMap<K, V, S> as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1260},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":2823,"byte_end":2830,"line_start":102,"line_end":102,"column_start":8,"column_end":15},"name":"default","qualname":"<DashMap<K, V, S> as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3157},"children":[],"decl_id":{"krate":2,"index":3158},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1265},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":3221,"byte_end":3224,"line_start":118,"line_end":118,"column_start":12,"column_end":15},"name":"new","qualname":"<DashMap<K, V, RandomState>>::new","value":"fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new DashMap with a capacity of 0.","sig":null,"attributes":[{"value":"/ Creates a new DashMap with a capacity of 0.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":2966,"byte_end":3013,"line_start":108,"line_end":108,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":3018,"byte_end":3021,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":3026,"byte_end":3040,"line_start":110,"line_end":110,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":3045,"byte_end":3048,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":3053,"byte_end":3060,"line_start":112,"line_end":112,"column_start":5,"column_end":12}},{"value":"/ use dashmap::DashMap;","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":3065,"byte_end":3090,"line_start":113,"line_end":113,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":3095,"byte_end":3098,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ let reviews = DashMap::new();","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":3103,"byte_end":3136,"line_start":115,"line_end":115,"column_start":5,"column_end":38}},{"value":"/ reviews.insert(\"Veloren\", \"What a fantastic game!\");","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":3141,"byte_end":3197,"line_start":116,"line_end":116,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":3202,"byte_end":3209,"line_start":117,"line_end":117,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1266},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":3584,"byte_end":3597,"line_start":133,"line_end":133,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<DashMap<K, V, RandomState>>::with_capacity","value":"fn with_capacity(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new DashMap with a specified starting capacity.","sig":null,"attributes":[{"value":"/ Creates a new DashMap with a specified starting capacity.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":3301,"byte_end":3362,"line_start":122,"line_end":122,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":3367,"byte_end":3370,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":3375,"byte_end":3389,"line_start":124,"line_end":124,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":3394,"byte_end":3397,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":3402,"byte_end":3409,"line_start":126,"line_end":126,"column_start":5,"column_end":12}},{"value":"/ use dashmap::DashMap;","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":3414,"byte_end":3439,"line_start":127,"line_end":127,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":3444,"byte_end":3447,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ let mappings = DashMap::with_capacity(2);","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":3452,"byte_end":3497,"line_start":129,"line_end":129,"column_start":5,"column_end":50}},{"value":"/ mappings.insert(2, 4);","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":3502,"byte_end":3528,"line_start":130,"line_end":130,"column_start":5,"column_end":31}},{"value":"/ mappings.insert(8, 16);","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":3533,"byte_end":3560,"line_start":131,"line_end":131,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":3565,"byte_end":3572,"line_start":132,"line_end":132,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1267},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":4160,"byte_end":4177,"line_start":151,"line_end":151,"column_start":12,"column_end":29},"name":"with_shard_amount","qualname":"<DashMap<K, V, RandomState>>::with_shard_amount","value":"fn with_shard_amount(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new DashMap with a specified shard amount","sig":null,"attributes":[{"value":"/ Creates a new DashMap with a specified shard amount","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":3712,"byte_end":3767,"line_start":137,"line_end":137,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":3772,"byte_end":3775,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ shard_amount should greater than 0 and be a power of two.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":3780,"byte_end":3841,"line_start":139,"line_end":139,"column_start":5,"column_end":66}},{"value":"/ If a shard_amount which is not a power of two is provided, the function will panic.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":3846,"byte_end":3933,"line_start":140,"line_end":140,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":3938,"byte_end":3941,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":3946,"byte_end":3960,"line_start":142,"line_end":142,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":3965,"byte_end":3968,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":3973,"byte_end":3980,"line_start":144,"line_end":144,"column_start":5,"column_end":12}},{"value":"/ use dashmap::DashMap;","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":3985,"byte_end":4010,"line_start":145,"line_end":145,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":4015,"byte_end":4018,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ let mappings = DashMap::with_shard_amount(32);","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":4023,"byte_end":4073,"line_start":147,"line_end":147,"column_start":5,"column_end":55}},{"value":"/ mappings.insert(2, 4);","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":4078,"byte_end":4104,"line_start":148,"line_end":148,"column_start":5,"column_end":31}},{"value":"/ mappings.insert(8, 16);","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":4109,"byte_end":4136,"line_start":149,"line_end":149,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":4141,"byte_end":4148,"line_start":150,"line_end":150,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1268},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":4796,"byte_end":4826,"line_start":169,"line_end":169,"column_start":12,"column_end":42},"name":"with_capacity_and_shard_amount","qualname":"<DashMap<K, V, RandomState>>::with_capacity_and_shard_amount","value":"fn with_capacity_and_shard_amount(usize, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new DashMap with a specified capacity and shard amount.","sig":null,"attributes":[{"value":"/ Creates a new DashMap with a specified capacity and shard amount.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":4317,"byte_end":4386,"line_start":155,"line_end":155,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":4391,"byte_end":4394,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ shard_amount should greater than 0 and be a power of two.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":4399,"byte_end":4460,"line_start":157,"line_end":157,"column_start":5,"column_end":66}},{"value":"/ If a shard_amount which is not a power of two is provided, the function will panic.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":4465,"byte_end":4552,"line_start":158,"line_end":158,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":4557,"byte_end":4560,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":4565,"byte_end":4579,"line_start":160,"line_end":160,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":4584,"byte_end":4587,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":4592,"byte_end":4599,"line_start":162,"line_end":162,"column_start":5,"column_end":12}},{"value":"/ use dashmap::DashMap;","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":4604,"byte_end":4629,"line_start":163,"line_end":163,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":4634,"byte_end":4637,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ let mappings = DashMap::with_capacity_and_shard_amount(32, 32);","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":4642,"byte_end":4709,"line_start":165,"line_end":165,"column_start":5,"column_end":72}},{"value":"/ mappings.insert(2, 4);","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":4714,"byte_end":4740,"line_start":166,"line_end":166,"column_start":5,"column_end":31}},{"value":"/ mappings.insert(8, 16);","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":4745,"byte_end":4772,"line_start":167,"line_end":167,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":4777,"byte_end":4784,"line_start":168,"line_end":168,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1274},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":5240,"byte_end":5254,"line_start":180,"line_end":180,"column_start":12,"column_end":26},"name":"into_read_only","qualname":"<DashMap<K, V, S>>::into_read_only","value":"fn into_read_only(Self) -> ReadOnlyView<K, V, S>","parent":null,"children":[],"decl_id":null,"docs":" Wraps this `DashMap` into a read-only view. This view allows to obtain raw references to the stored values.\n","sig":null,"attributes":[{"value":"/ Wraps this `DashMap` into a read-only view. This view allows to obtain raw references to the stored values.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":5117,"byte_end":5228,"line_start":179,"line_end":179,"column_start":5,"column_end":116}}]},{"kind":"Method","id":{"krate":0,"index":1275},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":5708,"byte_end":5719,"line_start":196,"line_end":196,"column_start":12,"column_end":23},"name":"with_hasher","qualname":"<DashMap<K, V, S>>::with_hasher","value":"fn with_hasher(S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new DashMap with a capacity of 0 and the provided hasher.","sig":null,"attributes":[{"value":"/ Creates a new DashMap with a capacity of 0 and the provided hasher.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":5331,"byte_end":5402,"line_start":184,"line_end":184,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":5407,"byte_end":5410,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":5415,"byte_end":5429,"line_start":186,"line_end":186,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":5434,"byte_end":5437,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":5442,"byte_end":5449,"line_start":188,"line_end":188,"column_start":5,"column_end":12}},{"value":"/ use dashmap::DashMap;","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":5454,"byte_end":5479,"line_start":189,"line_end":189,"column_start":5,"column_end":30}},{"value":"/ use std::collections::hash_map::RandomState;","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":5484,"byte_end":5532,"line_start":190,"line_end":190,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":5537,"byte_end":5540,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ let s = RandomState::new();","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":5545,"byte_end":5576,"line_start":192,"line_end":192,"column_start":5,"column_end":36}},{"value":"/ let reviews = DashMap::with_hasher(s);","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":5581,"byte_end":5623,"line_start":193,"line_end":193,"column_start":5,"column_end":47}},{"value":"/ reviews.insert(\"Veloren\", \"What a fantastic game!\");","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":5628,"byte_end":5684,"line_start":194,"line_end":194,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":5689,"byte_end":5696,"line_start":195,"line_end":195,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1276},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":6199,"byte_end":6223,"line_start":213,"line_end":213,"column_start":12,"column_end":36},"name":"with_capacity_and_hasher","qualname":"<DashMap<K, V, S>>::with_capacity_and_hasher","value":"fn with_capacity_and_hasher(usize, S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new DashMap with a specified starting capacity and hasher.","sig":null,"attributes":[{"value":"/ Creates a new DashMap with a specified starting capacity and hasher.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":5802,"byte_end":5874,"line_start":200,"line_end":200,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":5879,"byte_end":5882,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":5887,"byte_end":5901,"line_start":202,"line_end":202,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":5906,"byte_end":5909,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":5914,"byte_end":5921,"line_start":204,"line_end":204,"column_start":5,"column_end":12}},{"value":"/ use dashmap::DashMap;","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":5926,"byte_end":5951,"line_start":205,"line_end":205,"column_start":5,"column_end":30}},{"value":"/ use std::collections::hash_map::RandomState;","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":5956,"byte_end":6004,"line_start":206,"line_end":206,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":6009,"byte_end":6012,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ let s = RandomState::new();","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":6017,"byte_end":6048,"line_start":208,"line_end":208,"column_start":5,"column_end":36}},{"value":"/ let mappings = DashMap::with_capacity_and_hasher(2, s);","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":6053,"byte_end":6112,"line_start":209,"line_end":209,"column_start":5,"column_end":64}},{"value":"/ mappings.insert(2, 4);","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":6117,"byte_end":6143,"line_start":210,"line_end":210,"column_start":5,"column_end":31}},{"value":"/ mappings.insert(8, 16);","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":6148,"byte_end":6175,"line_start":211,"line_end":211,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":6180,"byte_end":6187,"line_start":212,"line_end":212,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1277},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":6933,"byte_end":6961,"line_start":233,"line_end":233,"column_start":12,"column_end":40},"name":"with_hasher_and_shard_amount","qualname":"<DashMap<K, V, S>>::with_hasher_and_shard_amount","value":"fn with_hasher_and_shard_amount(S, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new DashMap with a specified hasher and shard amount","sig":null,"attributes":[{"value":"/ Creates a new DashMap with a specified hasher and shard amount","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":6371,"byte_end":6437,"line_start":217,"line_end":217,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":6442,"byte_end":6445,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ shard_amount should greater than 0 and be a power of two.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":6450,"byte_end":6511,"line_start":219,"line_end":219,"column_start":5,"column_end":66}},{"value":"/ If a shard_amount which is not a power of two is provided, the function will panic.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":6516,"byte_end":6603,"line_start":220,"line_end":220,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":6608,"byte_end":6611,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":6616,"byte_end":6630,"line_start":222,"line_end":222,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":6635,"byte_end":6638,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":6643,"byte_end":6650,"line_start":224,"line_end":224,"column_start":5,"column_end":12}},{"value":"/ use dashmap::DashMap;","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":6655,"byte_end":6680,"line_start":225,"line_end":225,"column_start":5,"column_end":30}},{"value":"/ use std::collections::hash_map::RandomState;","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":6685,"byte_end":6733,"line_start":226,"line_end":226,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":6738,"byte_end":6741,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ let s = RandomState::new();","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":6746,"byte_end":6777,"line_start":228,"line_end":228,"column_start":5,"column_end":36}},{"value":"/ let mappings = DashMap::with_hasher_and_shard_amount(s, 32);","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":6782,"byte_end":6846,"line_start":229,"line_end":229,"column_start":5,"column_end":69}},{"value":"/ mappings.insert(2, 4);","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":6851,"byte_end":6877,"line_start":230,"line_end":230,"column_start":5,"column_end":31}},{"value":"/ mappings.insert(8, 16);","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":6882,"byte_end":6909,"line_start":231,"line_end":231,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":6914,"byte_end":6921,"line_start":232,"line_end":232,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1278},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":7694,"byte_end":7735,"line_start":253,"line_end":253,"column_start":12,"column_end":53},"name":"with_capacity_and_hasher_and_shard_amount","qualname":"<DashMap<K, V, S>>::with_capacity_and_hasher_and_shard_amount","value":"fn with_capacity_and_hasher_and_shard_amount(usize, S, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new DashMap with a specified starting capacity, hasher and shard_amount.","sig":null,"attributes":[{"value":"/ Creates a new DashMap with a specified starting capacity, hasher and shard_amount.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":7096,"byte_end":7182,"line_start":237,"line_end":237,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":7187,"byte_end":7190,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ shard_amount should greater than 0 and be a power of two.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":7195,"byte_end":7256,"line_start":239,"line_end":239,"column_start":5,"column_end":66}},{"value":"/ If a shard_amount which is not a power of two is provided, the function will panic.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":7261,"byte_end":7348,"line_start":240,"line_end":240,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":7353,"byte_end":7356,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":7361,"byte_end":7375,"line_start":242,"line_end":242,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":7380,"byte_end":7383,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":7388,"byte_end":7395,"line_start":244,"line_end":244,"column_start":5,"column_end":12}},{"value":"/ use dashmap::DashMap;","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":7400,"byte_end":7425,"line_start":245,"line_end":245,"column_start":5,"column_end":30}},{"value":"/ use std::collections::hash_map::RandomState;","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":7430,"byte_end":7478,"line_start":246,"line_end":246,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":7483,"byte_end":7486,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ let s = RandomState::new();","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":7491,"byte_end":7522,"line_start":248,"line_end":248,"column_start":5,"column_end":36}},{"value":"/ let mappings = DashMap::with_capacity_and_hasher_and_shard_amount(2, s, 32);","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":7527,"byte_end":7607,"line_start":249,"line_end":249,"column_start":5,"column_end":85}},{"value":"/ mappings.insert(2, 4);","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":7612,"byte_end":7638,"line_start":250,"line_end":250,"column_start":5,"column_end":31}},{"value":"/ mappings.insert(8, 16);","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":7643,"byte_end":7670,"line_start":251,"line_end":251,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":7675,"byte_end":7682,"line_start":252,"line_end":252,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1280},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":8491,"byte_end":8501,"line_start":282,"line_end":282,"column_start":12,"column_end":22},"name":"hash_usize","qualname":"<DashMap<K, V, S>>::hash_usize","value":"fn hash_usize<T>(&Self, &T) -> usize where T: Hash","parent":null,"children":[],"decl_id":null,"docs":" Hash a given item to produce a usize.\n Uses the provided or default HashBuilder.\n","sig":null,"attributes":[{"value":"/ Hash a given item to produce a usize.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":8388,"byte_end":8429,"line_start":280,"line_end":280,"column_start":5,"column_end":46}},{"value":"/ Uses the provided or default HashBuilder.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":8434,"byte_end":8479,"line_start":281,"line_end":281,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1282},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":11980,"byte_end":11986,"line_start":387,"line_end":387,"column_start":12,"column_end":18},"name":"hasher","qualname":"<DashMap<K, V, S>>::hasher","value":"fn hasher(&Self) -> &S","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the map's [`BuildHasher`].","sig":null,"attributes":[{"value":"/ Returns a reference to the map's [`BuildHasher`].","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":11527,"byte_end":11580,"line_start":373,"line_end":373,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":11585,"byte_end":11588,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":11593,"byte_end":11607,"line_start":375,"line_end":375,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":11612,"byte_end":11615,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":11620,"byte_end":11631,"line_start":377,"line_end":377,"column_start":5,"column_end":16}},{"value":"/ use dashmap::DashMap;","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":11636,"byte_end":11661,"line_start":378,"line_end":378,"column_start":5,"column_end":30}},{"value":"/ use std::collections::hash_map::RandomState;","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":11666,"byte_end":11714,"line_start":379,"line_end":379,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":11719,"byte_end":11722,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ let hasher = RandomState::new();","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":11727,"byte_end":11763,"line_start":381,"line_end":381,"column_start":5,"column_end":41}},{"value":"/ let map: DashMap<i32, i32> = DashMap::new();","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":11768,"byte_end":11816,"line_start":382,"line_end":382,"column_start":5,"column_end":53}},{"value":"/ let hasher: &RandomState = map.hasher();","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":11821,"byte_end":11865,"line_start":383,"line_end":383,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":11870,"byte_end":11877,"line_start":384,"line_end":384,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":11882,"byte_end":11885,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ [`BuildHasher`]: https://doc.rust-lang.org/std/hash/trait.BuildHasher.html","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":11890,"byte_end":11968,"line_start":386,"line_end":386,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":1283},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":12455,"byte_end":12461,"line_start":403,"line_end":403,"column_start":12,"column_end":18},"name":"insert","qualname":"<DashMap<K, V, S>>::insert","value":"fn insert(&Self, K, V) -> Option<V>","parent":null,"children":[],"decl_id":null,"docs":" Inserts a key and a value into the map. Returns the old value associated with the key if there was one.","sig":null,"attributes":[{"value":"/ Inserts a key and a value into the map. Returns the old value associated with the key if there was one.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":12034,"byte_end":12141,"line_start":391,"line_end":391,"column_start":5,"column_end":112}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":12146,"byte_end":12149,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/ **Locking behaviour:** May deadlock if called when holding any sort of reference into the map.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":12154,"byte_end":12252,"line_start":393,"line_end":393,"column_start":5,"column_end":103}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":12257,"byte_end":12260,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":12265,"byte_end":12279,"line_start":395,"line_end":395,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":12284,"byte_end":12287,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":12292,"byte_end":12299,"line_start":397,"line_end":397,"column_start":5,"column_end":12}},{"value":"/ use dashmap::DashMap;","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":12304,"byte_end":12329,"line_start":398,"line_end":398,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":12334,"byte_end":12337,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ let map = DashMap::new();","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":12342,"byte_end":12371,"line_start":400,"line_end":400,"column_start":5,"column_end":34}},{"value":"/ map.insert(\"I am the key!\", \"And I am the value!\");","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":12376,"byte_end":12431,"line_start":401,"line_end":401,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":12436,"byte_end":12443,"line_start":402,"line_end":402,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1284},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":13013,"byte_end":13019,"line_start":420,"line_end":420,"column_start":12,"column_end":18},"name":"remove","qualname":"<DashMap<K, V, S>>::remove","value":"fn remove<Q>(&Self, &Q) -> Option<(K, V)> where K: Borrow<Q>, Q: Hash + Eq +\n?Sized","parent":null,"children":[],"decl_id":null,"docs":" Removes an entry from the map, returning the key and value if they existed in the map.","sig":null,"attributes":[{"value":"/ Removes an entry from the map, returning the key and value if they existed in the map.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":12546,"byte_end":12636,"line_start":407,"line_end":407,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":12641,"byte_end":12644,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ **Locking behaviour:** May deadlock if called when holding any sort of reference into the map.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":12649,"byte_end":12747,"line_start":409,"line_end":409,"column_start":5,"column_end":103}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":12752,"byte_end":12755,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":12760,"byte_end":12774,"line_start":411,"line_end":411,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":12779,"byte_end":12782,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":12787,"byte_end":12794,"line_start":413,"line_end":413,"column_start":5,"column_end":12}},{"value":"/ use dashmap::DashMap;","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":12799,"byte_end":12824,"line_start":414,"line_end":414,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":12829,"byte_end":12832,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ let soccer_team = DashMap::new();","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":12837,"byte_end":12874,"line_start":416,"line_end":416,"column_start":5,"column_end":42}},{"value":"/ soccer_team.insert(\"Jack\", \"Goalie\");","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":12879,"byte_end":12920,"line_start":417,"line_end":417,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(soccer_team.remove(\"Jack\").unwrap().1, \"Goalie\");","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":12925,"byte_end":12989,"line_start":418,"line_end":418,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":12994,"byte_end":13001,"line_start":419,"line_end":419,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1286},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":13990,"byte_end":13999,"line_start":449,"line_end":449,"column_start":12,"column_end":21},"name":"remove_if","qualname":"<DashMap<K, V, S>>::remove_if","value":"fn remove_if<Q,\nimpl FnOnce(&K, &V) -> bool>(&Self, &Q, impl FnOnce(&K, &V) -> bool)\n-> Option<(K, V)> where K: Borrow<Q>, Q: Hash + Eq + ?Sized,\nimpl FnOnce(&K, &V) -> bool: for<'_, '_> FnOnce(&'_ K, &'_ V) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Removes an entry from the map, returning the key and value\n if the entry existed and the provided conditional function returned true.","sig":null,"attributes":[{"value":"/ Removes an entry from the map, returning the key and value","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":13163,"byte_end":13225,"line_start":428,"line_end":428,"column_start":5,"column_end":67}},{"value":"/ if the entry existed and the provided conditional function returned true.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":13230,"byte_end":13307,"line_start":429,"line_end":429,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":13312,"byte_end":13315,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ **Locking behaviour:** May deadlock if called when holding any sort of reference into the map.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":13320,"byte_end":13418,"line_start":431,"line_end":431,"column_start":5,"column_end":103}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":13423,"byte_end":13426,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":13431,"byte_end":13438,"line_start":433,"line_end":433,"column_start":5,"column_end":12}},{"value":"/ use dashmap::DashMap;","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":13443,"byte_end":13468,"line_start":434,"line_end":434,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":13473,"byte_end":13476,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ let soccer_team = DashMap::new();","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":13481,"byte_end":13518,"line_start":436,"line_end":436,"column_start":5,"column_end":42}},{"value":"/ soccer_team.insert(\"Sam\", \"Forward\");","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":13523,"byte_end":13564,"line_start":437,"line_end":437,"column_start":5,"column_end":46}},{"value":"/ soccer_team.remove_if(\"Sam\", |_, position| position == &\"Goalie\");","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":13569,"byte_end":13639,"line_start":438,"line_end":438,"column_start":5,"column_end":75}},{"value":"/ assert!(soccer_team.contains_key(\"Sam\"));","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":13644,"byte_end":13689,"line_start":439,"line_end":439,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":13694,"byte_end":13701,"line_start":440,"line_end":440,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":13706,"byte_end":13713,"line_start":441,"line_end":441,"column_start":5,"column_end":12}},{"value":"/ use dashmap::DashMap;","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":13718,"byte_end":13743,"line_start":442,"line_end":442,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":13748,"byte_end":13751,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ let soccer_team = DashMap::new();","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":13756,"byte_end":13793,"line_start":444,"line_end":444,"column_start":5,"column_end":42}},{"value":"/ soccer_team.insert(\"Sam\", \"Forward\");","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":13798,"byte_end":13839,"line_start":445,"line_end":445,"column_start":5,"column_end":46}},{"value":"/ soccer_team.remove_if(\"Sam\", |_, position| position == &\"Forward\");","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":13844,"byte_end":13915,"line_start":446,"line_end":446,"column_start":5,"column_end":76}},{"value":"/ assert!(!soccer_team.contains_key(\"Sam\"));","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":13920,"byte_end":13966,"line_start":447,"line_end":447,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":13971,"byte_end":13978,"line_start":448,"line_end":448,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1289},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":14188,"byte_end":14201,"line_start":457,"line_end":457,"column_start":12,"column_end":25},"name":"remove_if_mut","qualname":"<DashMap<K, V, S>>::remove_if_mut","value":"fn remove_if_mut<Q,\nimpl FnOnce(&K, &mut V) -> bool>(&Self, &Q, impl FnOnce(&K, &mut V) -> bool)\n-> Option<(K, V)> where K: Borrow<Q>, Q: Hash + Eq + ?Sized,\nimpl FnOnce(&K, &mut V) -> bool: for<'_, '_> FnOnce(&'_ K, &'_ mut V) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1292},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":14799,"byte_end":14803,"line_start":478,"line_end":478,"column_start":12,"column_end":16},"name":"iter","qualname":"<DashMap<K, V, S>>::iter","value":"fn iter(&'a Self) -> Iter","parent":null,"children":[],"decl_id":null,"docs":" Creates an iterator over a DashMap yielding immutable references.","sig":null,"attributes":[{"value":"/ Creates an iterator over a DashMap yielding immutable references.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":14391,"byte_end":14460,"line_start":465,"line_end":465,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":14465,"byte_end":14468,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ **Locking behaviour:** May deadlock if called when holding a mutable reference into the map.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":14473,"byte_end":14569,"line_start":467,"line_end":467,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":14574,"byte_end":14577,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":14582,"byte_end":14596,"line_start":469,"line_end":469,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":14601,"byte_end":14604,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":14609,"byte_end":14616,"line_start":471,"line_end":471,"column_start":5,"column_end":12}},{"value":"/ use dashmap::DashMap;","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":14621,"byte_end":14646,"line_start":472,"line_end":472,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":14651,"byte_end":14654,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ let words = DashMap::new();","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":14659,"byte_end":14690,"line_start":474,"line_end":474,"column_start":5,"column_end":36}},{"value":"/ words.insert(\"hello\", \"world\");","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":14695,"byte_end":14730,"line_start":475,"line_end":475,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(words.iter().count(), 1);","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":14735,"byte_end":14775,"line_start":476,"line_end":476,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":14780,"byte_end":14787,"line_start":477,"line_end":477,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1293},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":15334,"byte_end":15342,"line_start":496,"line_end":496,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<DashMap<K, V, S>>::iter_mut","value":"fn iter_mut(&'a Self) -> IterMut","parent":null,"children":[],"decl_id":null,"docs":" Iterator over a DashMap yielding mutable references.","sig":null,"attributes":[{"value":"/ Iterator over a DashMap yielding mutable references.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":14887,"byte_end":14943,"line_start":482,"line_end":482,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":14948,"byte_end":14951,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ **Locking behaviour:** May deadlock if called when holding any sort of reference into the map.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":14956,"byte_end":15054,"line_start":484,"line_end":484,"column_start":5,"column_end":103}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":15059,"byte_end":15062,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":15067,"byte_end":15081,"line_start":486,"line_end":486,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":15086,"byte_end":15089,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":15094,"byte_end":15101,"line_start":488,"line_end":488,"column_start":5,"column_end":12}},{"value":"/ use dashmap::DashMap;","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":15106,"byte_end":15131,"line_start":489,"line_end":489,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":15136,"byte_end":15139,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ let map = DashMap::new();","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":15144,"byte_end":15173,"line_start":491,"line_end":491,"column_start":5,"column_end":34}},{"value":"/ map.insert(\"Johnny\", 21);","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":15178,"byte_end":15207,"line_start":492,"line_end":492,"column_start":5,"column_end":34}},{"value":"/ map.iter_mut().for_each(|mut r| *r += 1);","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":15212,"byte_end":15257,"line_start":493,"line_end":493,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(*map.get(\"Johnny\").unwrap(), 22);","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":15262,"byte_end":15310,"line_start":494,"line_end":494,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":15315,"byte_end":15322,"line_start":495,"line_end":495,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1294},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":15862,"byte_end":15865,"line_start":513,"line_end":513,"column_start":12,"column_end":15},"name":"get","qualname":"<DashMap<K, V, S>>::get","value":"fn get<Q>(&'a Self, &Q) -> Option<Ref> where K: Borrow<Q>, Q: Hash + Eq +\n?Sized","parent":null,"children":[],"decl_id":null,"docs":" Get a immutable reference to an entry in the map","sig":null,"attributes":[{"value":"/ Get a immutable reference to an entry in the map","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":15433,"byte_end":15485,"line_start":500,"line_end":500,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":15490,"byte_end":15493,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ **Locking behaviour:** May deadlock if called when holding a mutable reference into the map.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":15498,"byte_end":15594,"line_start":502,"line_end":502,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":15599,"byte_end":15602,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":15607,"byte_end":15621,"line_start":504,"line_end":504,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":15626,"byte_end":15629,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":15634,"byte_end":15641,"line_start":506,"line_end":506,"column_start":5,"column_end":12}},{"value":"/ use dashmap::DashMap;","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":15646,"byte_end":15671,"line_start":507,"line_end":507,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":15676,"byte_end":15679,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ let youtubers = DashMap::new();","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":15684,"byte_end":15719,"line_start":509,"line_end":509,"column_start":5,"column_end":40}},{"value":"/ youtubers.insert(\"Bosnian Bill\", 457000);","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":15724,"byte_end":15769,"line_start":510,"line_end":510,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(*youtubers.get(\"Bosnian Bill\").unwrap(), 457000);","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":15774,"byte_end":15838,"line_start":511,"line_end":511,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":15843,"byte_end":15850,"line_start":512,"line_end":512,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1296},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":16461,"byte_end":16468,"line_start":535,"line_end":535,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<DashMap<K, V, S>>::get_mut","value":"fn get_mut<Q>(&'a Self, &Q) -> Option<RefMut> where K: Borrow<Q>, Q: Hash +\nEq + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to an entry in the map","sig":null,"attributes":[{"value":"/ Get a mutable reference to an entry in the map","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":16019,"byte_end":16069,"line_start":521,"line_end":521,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":16074,"byte_end":16077,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/ **Locking behaviour:** May deadlock if called when holding any sort of reference into the map.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":16082,"byte_end":16180,"line_start":523,"line_end":523,"column_start":5,"column_end":103}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":16185,"byte_end":16188,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":16193,"byte_end":16207,"line_start":525,"line_end":525,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":16212,"byte_end":16215,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":16220,"byte_end":16227,"line_start":527,"line_end":527,"column_start":5,"column_end":12}},{"value":"/ use dashmap::DashMap;","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":16232,"byte_end":16257,"line_start":528,"line_end":528,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":16262,"byte_end":16265,"line_start":529,"line_end":529,"column_start":5,"column_end":8}},{"value":"/ let class = DashMap::new();","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":16270,"byte_end":16301,"line_start":530,"line_end":530,"column_start":5,"column_end":36}},{"value":"/ class.insert(\"Albin\", 15);","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":16306,"byte_end":16336,"line_start":531,"line_end":531,"column_start":5,"column_end":35}},{"value":"/ *class.get_mut(\"Albin\").unwrap() -= 1;","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":16341,"byte_end":16383,"line_start":532,"line_end":532,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(*class.get(\"Albin\").unwrap(), 14);","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":16388,"byte_end":16437,"line_start":533,"line_end":533,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":16442,"byte_end":16449,"line_start":534,"line_end":534,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1298},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":17228,"byte_end":17235,"line_start":562,"line_end":562,"column_start":12,"column_end":19},"name":"try_get","qualname":"<DashMap<K, V, S>>::try_get","value":"fn try_get<Q>(&'a Self, &Q) -> TryResult<Ref> where K: Borrow<Q>, Q: Hash +\nEq + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Get an immutable reference to an entry in the map, if the shard is not locked.\n If the shard is locked, the function will return [TryResult::Locked].","sig":null,"attributes":[{"value":"/ Get an immutable reference to an entry in the map, if the shard is not locked.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":16629,"byte_end":16711,"line_start":543,"line_end":543,"column_start":5,"column_end":87}},{"value":"/ If the shard is locked, the function will return [TryResult::Locked].","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":16716,"byte_end":16789,"line_start":544,"line_end":544,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":16794,"byte_end":16797,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":16802,"byte_end":16816,"line_start":546,"line_end":546,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":16821,"byte_end":16824,"line_start":547,"line_end":547,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":16829,"byte_end":16836,"line_start":548,"line_end":548,"column_start":5,"column_end":12}},{"value":"/ use dashmap::DashMap;","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":16841,"byte_end":16866,"line_start":549,"line_end":549,"column_start":5,"column_end":30}},{"value":"/ use dashmap::try_result::TryResult;","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":16871,"byte_end":16910,"line_start":550,"line_end":550,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":16915,"byte_end":16918,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ let map = DashMap::new();","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":16923,"byte_end":16952,"line_start":552,"line_end":552,"column_start":5,"column_end":34}},{"value":"/ map.insert(\"Johnny\", 21);","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":16957,"byte_end":16986,"line_start":553,"line_end":553,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":16991,"byte_end":16994,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(*map.try_get(\"Johnny\").unwrap(), 21);","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":16999,"byte_end":17051,"line_start":555,"line_end":555,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":17056,"byte_end":17059,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/ let _result1_locking = map.get_mut(\"Johnny\");","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":17064,"byte_end":17113,"line_start":557,"line_end":557,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":17118,"byte_end":17121,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/ let result2 = map.try_get(\"Johnny\");","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":17126,"byte_end":17166,"line_start":559,"line_end":559,"column_start":5,"column_end":45}},{"value":"/ assert!(result2.is_locked());","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":17171,"byte_end":17204,"line_start":560,"line_end":560,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":17209,"byte_end":17216,"line_start":561,"line_end":561,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1300},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":18038,"byte_end":18049,"line_start":590,"line_end":590,"column_start":12,"column_end":23},"name":"try_get_mut","qualname":"<DashMap<K, V, S>>::try_get_mut","value":"fn try_get_mut<Q>(&'a Self, &Q) -> TryResult<RefMut> where K: Borrow<Q>,\nQ: Hash + Eq + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to an entry in the map, if the shard is not locked.\n If the shard is locked, the function will return [TryResult::Locked].","sig":null,"attributes":[{"value":"/ Get a mutable reference to an entry in the map, if the shard is not locked.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":17396,"byte_end":17475,"line_start":570,"line_end":570,"column_start":5,"column_end":84}},{"value":"/ If the shard is locked, the function will return [TryResult::Locked].","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":17480,"byte_end":17553,"line_start":571,"line_end":571,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":17558,"byte_end":17561,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":17566,"byte_end":17580,"line_start":573,"line_end":573,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":17585,"byte_end":17588,"line_start":574,"line_end":574,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":17593,"byte_end":17600,"line_start":575,"line_end":575,"column_start":5,"column_end":12}},{"value":"/ use dashmap::DashMap;","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":17605,"byte_end":17630,"line_start":576,"line_end":576,"column_start":5,"column_end":30}},{"value":"/ use dashmap::try_result::TryResult;","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":17635,"byte_end":17674,"line_start":577,"line_end":577,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":17679,"byte_end":17682,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/ let map = DashMap::new();","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":17687,"byte_end":17716,"line_start":579,"line_end":579,"column_start":5,"column_end":34}},{"value":"/ map.insert(\"Johnny\", 21);","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":17721,"byte_end":17750,"line_start":580,"line_end":580,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":17755,"byte_end":17758,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/ *map.try_get_mut(\"Johnny\").unwrap() += 1;","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":17763,"byte_end":17808,"line_start":582,"line_end":582,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(*map.get(\"Johnny\").unwrap(), 22);","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":17813,"byte_end":17861,"line_start":583,"line_end":583,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":17866,"byte_end":17869,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ let _result1_locking = map.get(\"Johnny\");","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":17874,"byte_end":17919,"line_start":585,"line_end":585,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":17924,"byte_end":17927,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/ let result2 = map.try_get_mut(\"Johnny\");","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":17932,"byte_end":17976,"line_start":587,"line_end":587,"column_start":5,"column_end":49}},{"value":"/ assert!(result2.is_locked());","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":17981,"byte_end":18014,"line_start":588,"line_end":588,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":18019,"byte_end":18026,"line_start":589,"line_end":589,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1302},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":18390,"byte_end":18403,"line_start":601,"line_end":601,"column_start":12,"column_end":25},"name":"shrink_to_fit","qualname":"<DashMap<K, V, S>>::shrink_to_fit","value":"fn shrink_to_fit(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Remove excess capacity to reduce memory usage.","sig":null,"attributes":[{"value":"/ Remove excess capacity to reduce memory usage.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":18217,"byte_end":18267,"line_start":598,"line_end":598,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":18272,"byte_end":18275,"line_start":599,"line_end":599,"column_start":5,"column_end":8}},{"value":"/ **Locking behaviour:** May deadlock if called when holding any sort of reference into the map.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":18280,"byte_end":18378,"line_start":600,"line_end":600,"column_start":5,"column_end":103}}]},{"kind":"Method","id":{"krate":0,"index":1303},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":19011,"byte_end":19017,"line_start":622,"line_end":622,"column_start":12,"column_end":18},"name":"retain","qualname":"<DashMap<K, V, S>>::retain","value":"fn retain<impl FnMut(&K, &mut V) -> bool>(&Self,\nimpl FnMut(&K, &mut V) -> bool) where\nimpl FnMut(&K, &mut V) -> bool: for<'_, '_> FnMut(&'_ K, &'_ mut V) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Retain elements that whose predicates return true\n and discard elements whose predicates return false.","sig":null,"attributes":[{"value":"/ Retain elements that whose predicates return true","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":18455,"byte_end":18508,"line_start":605,"line_end":605,"column_start":5,"column_end":58}},{"value":"/ and discard elements whose predicates return false.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":18513,"byte_end":18568,"line_start":606,"line_end":606,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":18573,"byte_end":18576,"line_start":607,"line_end":607,"column_start":5,"column_end":8}},{"value":"/ **Locking behaviour:** May deadlock if called when holding any sort of reference into the map.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":18581,"byte_end":18679,"line_start":608,"line_end":608,"column_start":5,"column_end":103}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":18684,"byte_end":18687,"line_start":609,"line_end":609,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":18692,"byte_end":18706,"line_start":610,"line_end":610,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":18711,"byte_end":18714,"line_start":611,"line_end":611,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":18719,"byte_end":18726,"line_start":612,"line_end":612,"column_start":5,"column_end":12}},{"value":"/ use dashmap::DashMap;","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":18731,"byte_end":18756,"line_start":613,"line_end":613,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":18761,"byte_end":18764,"line_start":614,"line_end":614,"column_start":5,"column_end":8}},{"value":"/ let people = DashMap::new();","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":18769,"byte_end":18801,"line_start":615,"line_end":615,"column_start":5,"column_end":37}},{"value":"/ people.insert(\"Albin\", 15);","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":18806,"byte_end":18837,"line_start":616,"line_end":616,"column_start":5,"column_end":36}},{"value":"/ people.insert(\"Jones\", 22);","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":18842,"byte_end":18873,"line_start":617,"line_end":617,"column_start":5,"column_end":36}},{"value":"/ people.insert(\"Charlie\", 27);","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":18878,"byte_end":18911,"line_start":618,"line_end":618,"column_start":5,"column_end":38}},{"value":"/ people.retain(|_, v| *v > 20);","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":18916,"byte_end":18950,"line_start":619,"line_end":619,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(people.len(), 2);","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":18955,"byte_end":18987,"line_start":620,"line_end":620,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":18992,"byte_end":18999,"line_start":621,"line_end":621,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1305},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":19566,"byte_end":19569,"line_start":641,"line_end":641,"column_start":12,"column_end":15},"name":"len","qualname":"<DashMap<K, V, S>>::len","value":"fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Fetches the total number of key-value pairs stored in the map.","sig":null,"attributes":[{"value":"/ Fetches the total number of key-value pairs stored in the map.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":19098,"byte_end":19164,"line_start":626,"line_end":626,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":19169,"byte_end":19172,"line_start":627,"line_end":627,"column_start":5,"column_end":8}},{"value":"/ **Locking behaviour:** May deadlock if called when holding a mutable reference into the map.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":19177,"byte_end":19273,"line_start":628,"line_end":628,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":19278,"byte_end":19281,"line_start":629,"line_end":629,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":19286,"byte_end":19300,"line_start":630,"line_end":630,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":19305,"byte_end":19308,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":19313,"byte_end":19320,"line_start":632,"line_end":632,"column_start":5,"column_end":12}},{"value":"/ use dashmap::DashMap;","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":19325,"byte_end":19350,"line_start":633,"line_end":633,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":19355,"byte_end":19358,"line_start":634,"line_end":634,"column_start":5,"column_end":8}},{"value":"/ let people = DashMap::new();","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":19363,"byte_end":19395,"line_start":635,"line_end":635,"column_start":5,"column_end":37}},{"value":"/ people.insert(\"Albin\", 15);","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":19400,"byte_end":19431,"line_start":636,"line_end":636,"column_start":5,"column_end":36}},{"value":"/ people.insert(\"Jones\", 22);","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":19436,"byte_end":19467,"line_start":637,"line_end":637,"column_start":5,"column_end":36}},{"value":"/ people.insert(\"Charlie\", 27);","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":19472,"byte_end":19505,"line_start":638,"line_end":638,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(people.len(), 3);","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":19510,"byte_end":19542,"line_start":639,"line_end":639,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":19547,"byte_end":19554,"line_start":640,"line_end":640,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1306},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":19952,"byte_end":19960,"line_start":657,"line_end":657,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<DashMap<K, V, S>>::is_empty","value":"fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the map is empty or not.","sig":null,"attributes":[{"value":"/ Checks if the map is empty or not.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":19619,"byte_end":19657,"line_start":645,"line_end":645,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":19662,"byte_end":19665,"line_start":646,"line_end":646,"column_start":5,"column_end":8}},{"value":"/ **Locking behaviour:** May deadlock if called when holding a mutable reference into the map.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":19670,"byte_end":19766,"line_start":647,"line_end":647,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":19771,"byte_end":19774,"line_start":648,"line_end":648,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":19779,"byte_end":19793,"line_start":649,"line_end":649,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":19798,"byte_end":19801,"line_start":650,"line_end":650,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":19806,"byte_end":19813,"line_start":651,"line_end":651,"column_start":5,"column_end":12}},{"value":"/ use dashmap::DashMap;","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":19818,"byte_end":19843,"line_start":652,"line_end":652,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":19848,"byte_end":19851,"line_start":653,"line_end":653,"column_start":5,"column_end":8}},{"value":"/ let map = DashMap::<(), ()>::new();","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":19856,"byte_end":19895,"line_start":654,"line_end":654,"column_start":5,"column_end":44}},{"value":"/ assert!(map.is_empty());","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":19900,"byte_end":19928,"line_start":655,"line_end":655,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":19933,"byte_end":19940,"line_start":656,"line_end":656,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1307},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":20441,"byte_end":20446,"line_start":676,"line_end":676,"column_start":12,"column_end":17},"name":"clear","qualname":"<DashMap<K, V, S>>::clear","value":"fn clear(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Removes all key-value pairs in the map.","sig":null,"attributes":[{"value":"/ Removes all key-value pairs in the map.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":20014,"byte_end":20057,"line_start":661,"line_end":661,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":20062,"byte_end":20065,"line_start":662,"line_end":662,"column_start":5,"column_end":8}},{"value":"/ **Locking behaviour:** May deadlock if called when holding any sort of reference into the map.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":20070,"byte_end":20168,"line_start":663,"line_end":663,"column_start":5,"column_end":103}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":20173,"byte_end":20176,"line_start":664,"line_end":664,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":20181,"byte_end":20195,"line_start":665,"line_end":665,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":20200,"byte_end":20203,"line_start":666,"line_end":666,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":20208,"byte_end":20215,"line_start":667,"line_end":667,"column_start":5,"column_end":12}},{"value":"/ use dashmap::DashMap;","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":20220,"byte_end":20245,"line_start":668,"line_end":668,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":20250,"byte_end":20253,"line_start":669,"line_end":669,"column_start":5,"column_end":8}},{"value":"/ let stats = DashMap::new();","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":20258,"byte_end":20289,"line_start":670,"line_end":670,"column_start":5,"column_end":36}},{"value":"/ stats.insert(\"Goals\", 4);","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":20294,"byte_end":20323,"line_start":671,"line_end":671,"column_start":5,"column_end":34}},{"value":"/ assert!(!stats.is_empty());","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":20328,"byte_end":20359,"line_start":672,"line_end":672,"column_start":5,"column_end":36}},{"value":"/ stats.clear();","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":20364,"byte_end":20382,"line_start":673,"line_end":673,"column_start":5,"column_end":23}},{"value":"/ assert!(stats.is_empty());","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":20387,"byte_end":20417,"line_start":674,"line_end":674,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":20422,"byte_end":20429,"line_start":675,"line_end":675,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1308},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":20687,"byte_end":20695,"line_start":683,"line_end":683,"column_start":12,"column_end":20},"name":"capacity","qualname":"<DashMap<K, V, S>>::capacity","value":"fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns how many key-value pairs the map can store without reallocating.","sig":null,"attributes":[{"value":"/ Returns how many key-value pairs the map can store without reallocating.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":20490,"byte_end":20566,"line_start":680,"line_end":680,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":20571,"byte_end":20574,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ **Locking behaviour:** May deadlock if called when holding a mutable reference into the map.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":20579,"byte_end":20675,"line_start":682,"line_end":682,"column_start":5,"column_end":101}}]},{"kind":"Method","id":{"krate":0,"index":1309},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":21295,"byte_end":21300,"line_start":705,"line_end":705,"column_start":12,"column_end":17},"name":"alter","qualname":"<DashMap<K, V, S>>::alter","value":"fn alter<Q, impl FnOnce(&K, V) -> V>(&Self, &Q, impl FnOnce(&K, V) -> V) where\nK: Borrow<Q>, Q: Hash + Eq + ?Sized,\nimpl FnOnce(&K, V) -> V: for<'_> FnOnce(&'_ K, V) -> V","parent":null,"children":[],"decl_id":null,"docs":" Modify a specific value according to a function.","sig":null,"attributes":[{"value":"/ Modify a specific value according to a function.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":20750,"byte_end":20802,"line_start":687,"line_end":687,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":20807,"byte_end":20810,"line_start":688,"line_end":688,"column_start":5,"column_end":8}},{"value":"/ **Locking behaviour:** May deadlock if called when holding any sort of reference into the map.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":20815,"byte_end":20913,"line_start":689,"line_end":689,"column_start":5,"column_end":103}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":20918,"byte_end":20921,"line_start":690,"line_end":690,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":20926,"byte_end":20940,"line_start":691,"line_end":691,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":20945,"byte_end":20948,"line_start":692,"line_end":692,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":20953,"byte_end":20960,"line_start":693,"line_end":693,"column_start":5,"column_end":12}},{"value":"/ use dashmap::DashMap;","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":20965,"byte_end":20990,"line_start":694,"line_end":694,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":20995,"byte_end":20998,"line_start":695,"line_end":695,"column_start":5,"column_end":8}},{"value":"/ let stats = DashMap::new();","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":21003,"byte_end":21034,"line_start":696,"line_end":696,"column_start":5,"column_end":36}},{"value":"/ stats.insert(\"Goals\", 4);","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":21039,"byte_end":21068,"line_start":697,"line_end":697,"column_start":5,"column_end":34}},{"value":"/ stats.alter(\"Goals\", |_, v| v * 2);","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":21073,"byte_end":21112,"line_start":698,"line_end":698,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(*stats.get(\"Goals\").unwrap(), 8);","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":21117,"byte_end":21165,"line_start":699,"line_end":699,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":21170,"byte_end":21177,"line_start":700,"line_end":700,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":21182,"byte_end":21185,"line_start":701,"line_end":701,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":21190,"byte_end":21202,"line_start":702,"line_end":702,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":21207,"byte_end":21210,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ If the given closure panics, then `alter` will abort the process","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":21215,"byte_end":21283,"line_start":704,"line_end":704,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1312},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":22094,"byte_end":22103,"line_start":733,"line_end":733,"column_start":12,"column_end":21},"name":"alter_all","qualname":"<DashMap<K, V, S>>::alter_all","value":"fn alter_all<impl FnMut(&K, V) -> V>(&Self, impl FnMut(&K, V) -> V) where\nimpl FnMut(&K, V) -> V: for<'_> FnMut(&'_ K, V) -> V","parent":null,"children":[],"decl_id":null,"docs":" Modify every value in the map according to a function.","sig":null,"attributes":[{"value":"/ Modify every value in the map according to a function.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":21457,"byte_end":21515,"line_start":713,"line_end":713,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":21520,"byte_end":21523,"line_start":714,"line_end":714,"column_start":5,"column_end":8}},{"value":"/ **Locking behaviour:** May deadlock if called when holding any sort of reference into the map.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":21528,"byte_end":21626,"line_start":715,"line_end":715,"column_start":5,"column_end":103}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":21631,"byte_end":21634,"line_start":716,"line_end":716,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":21639,"byte_end":21653,"line_start":717,"line_end":717,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":21658,"byte_end":21661,"line_start":718,"line_end":718,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":21666,"byte_end":21673,"line_start":719,"line_end":719,"column_start":5,"column_end":12}},{"value":"/ use dashmap::DashMap;","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":21678,"byte_end":21703,"line_start":720,"line_end":720,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":21708,"byte_end":21711,"line_start":721,"line_end":721,"column_start":5,"column_end":8}},{"value":"/ let stats = DashMap::new();","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":21716,"byte_end":21747,"line_start":722,"line_end":722,"column_start":5,"column_end":36}},{"value":"/ stats.insert(\"Wins\", 4);","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":21752,"byte_end":21780,"line_start":723,"line_end":723,"column_start":5,"column_end":33}},{"value":"/ stats.insert(\"Losses\", 2);","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":21785,"byte_end":21815,"line_start":724,"line_end":724,"column_start":5,"column_end":35}},{"value":"/ stats.alter_all(|_, v| v + 1);","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":21820,"byte_end":21854,"line_start":725,"line_end":725,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(*stats.get(\"Wins\").unwrap(), 5);","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":21859,"byte_end":21906,"line_start":726,"line_end":726,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(*stats.get(\"Losses\").unwrap(), 3);","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":21911,"byte_end":21960,"line_start":727,"line_end":727,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":21965,"byte_end":21972,"line_start":728,"line_end":728,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":21977,"byte_end":21980,"line_start":729,"line_end":729,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":21985,"byte_end":21997,"line_start":730,"line_end":730,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":22002,"byte_end":22005,"line_start":731,"line_end":731,"column_start":5,"column_end":8}},{"value":"/ If the given closure panics, then `alter_all` will abort the process","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":22010,"byte_end":22082,"line_start":732,"line_end":732,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1314},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":22811,"byte_end":22815,"line_start":756,"line_end":756,"column_start":12,"column_end":16},"name":"view","qualname":"<DashMap<K, V, S>>::view","value":"fn view<Q, R, impl FnOnce(&K, &V) -> R>(&Self, &Q, impl FnOnce(&K, &V) -> R)\n-> Option<R> where K: Borrow<Q>, Q: Hash + Eq + ?Sized,\nimpl FnOnce(&K, &V) -> R: for<'_, '_> FnOnce(&'_ K, &'_ V) -> R","parent":null,"children":[],"decl_id":null,"docs":" Scoped access into an item of the map according to a function.","sig":null,"attributes":[{"value":"/ Scoped access into an item of the map according to a function.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":22179,"byte_end":22245,"line_start":737,"line_end":737,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":22250,"byte_end":22253,"line_start":738,"line_end":738,"column_start":5,"column_end":8}},{"value":"/ **Locking behaviour:** May deadlock if called when holding any sort of reference into the map.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":22258,"byte_end":22356,"line_start":739,"line_end":739,"column_start":5,"column_end":103}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":22361,"byte_end":22364,"line_start":740,"line_end":740,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":22369,"byte_end":22383,"line_start":741,"line_end":741,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":22388,"byte_end":22391,"line_start":742,"line_end":742,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":22396,"byte_end":22403,"line_start":743,"line_end":743,"column_start":5,"column_end":12}},{"value":"/ use dashmap::DashMap;","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":22408,"byte_end":22433,"line_start":744,"line_end":744,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":22438,"byte_end":22441,"line_start":745,"line_end":745,"column_start":5,"column_end":8}},{"value":"/ let warehouse = DashMap::new();","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":22446,"byte_end":22481,"line_start":746,"line_end":746,"column_start":5,"column_end":40}},{"value":"/ warehouse.insert(4267, (\"Banana\", 100));","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":22486,"byte_end":22530,"line_start":747,"line_end":747,"column_start":5,"column_end":49}},{"value":"/ warehouse.insert(2359, (\"Pear\", 120));","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":22535,"byte_end":22577,"line_start":748,"line_end":748,"column_start":5,"column_end":47}},{"value":"/ let fruit = warehouse.view(&4267, |_k, v| *v);","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":22582,"byte_end":22632,"line_start":749,"line_end":749,"column_start":5,"column_end":55}},{"value":"/ assert_eq!(fruit, Some((\"Banana\", 100)));","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":22637,"byte_end":22682,"line_start":750,"line_end":750,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":22687,"byte_end":22694,"line_start":751,"line_end":751,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":22699,"byte_end":22702,"line_start":752,"line_end":752,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":22707,"byte_end":22719,"line_start":753,"line_end":753,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":22724,"byte_end":22727,"line_start":754,"line_end":754,"column_start":5,"column_end":8}},{"value":"/ If the given closure panics, then `view` will abort the process","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":22732,"byte_end":22799,"line_start":755,"line_end":755,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":1318},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":23403,"byte_end":23415,"line_start":777,"line_end":777,"column_start":12,"column_end":24},"name":"contains_key","qualname":"<DashMap<K, V, S>>::contains_key","value":"fn contains_key<Q>(&Self, &Q) -> bool where K: Borrow<Q>, Q: Hash + Eq +\n?Sized","parent":null,"children":[],"decl_id":null,"docs":" Checks if the map contains a specific key.","sig":null,"attributes":[{"value":"/ Checks if the map contains a specific key.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":22987,"byte_end":23033,"line_start":764,"line_end":764,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":23038,"byte_end":23041,"line_start":765,"line_end":765,"column_start":5,"column_end":8}},{"value":"/ **Locking behaviour:** May deadlock if called when holding a mutable reference into the map.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":23046,"byte_end":23142,"line_start":766,"line_end":766,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":23147,"byte_end":23150,"line_start":767,"line_end":767,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":23155,"byte_end":23169,"line_start":768,"line_end":768,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":23174,"byte_end":23177,"line_start":769,"line_end":769,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":23182,"byte_end":23189,"line_start":770,"line_end":770,"column_start":5,"column_end":12}},{"value":"/ use dashmap::DashMap;","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":23194,"byte_end":23219,"line_start":771,"line_end":771,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":23224,"byte_end":23227,"line_start":772,"line_end":772,"column_start":5,"column_end":8}},{"value":"/ let team_sizes = DashMap::new();","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":23232,"byte_end":23268,"line_start":773,"line_end":773,"column_start":5,"column_end":41}},{"value":"/ team_sizes.insert(\"Dakota Cherries\", 23);","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":23273,"byte_end":23318,"line_start":774,"line_end":774,"column_start":5,"column_end":50}},{"value":"/ assert!(team_sizes.contains_key(\"Dakota Cherries\"));","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":23323,"byte_end":23379,"line_start":775,"line_end":775,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":23384,"byte_end":23391,"line_start":776,"line_end":776,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1320},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":23825,"byte_end":23830,"line_start":789,"line_end":789,"column_start":12,"column_end":17},"name":"entry","qualname":"<DashMap<K, V, S>>::entry","value":"fn entry(&'a Self, K) -> Entry","parent":null,"children":[],"decl_id":null,"docs":" Advanced entry API that tries to mimic `std::collections::HashMap`.\n See the documentation on `dashmap::mapref::entry` for more details.","sig":null,"attributes":[{"value":"/ Advanced entry API that tries to mimic `std::collections::HashMap`.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":23555,"byte_end":23626,"line_start":785,"line_end":785,"column_start":5,"column_end":76}},{"value":"/ See the documentation on `dashmap::mapref::entry` for more details.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":23631,"byte_end":23702,"line_start":786,"line_end":786,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":23707,"byte_end":23710,"line_start":787,"line_end":787,"column_start":5,"column_end":8}},{"value":"/ **Locking behaviour:** May deadlock if called when holding any sort of reference into the map.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":23715,"byte_end":23813,"line_start":788,"line_end":788,"column_start":5,"column_end":103}}]},{"kind":"Method","id":{"krate":0,"index":1321},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":24131,"byte_end":24140,"line_start":797,"line_end":797,"column_start":12,"column_end":21},"name":"try_entry","qualname":"<DashMap<K, V, S>>::try_entry","value":"fn try_entry(&'a Self, K) -> Option<Entry>","parent":null,"children":[],"decl_id":null,"docs":" Advanced entry API that tries to mimic `std::collections::HashMap`.\n See the documentation on `dashmap::mapref::entry` for more details.","sig":null,"attributes":[{"value":"/ Advanced entry API that tries to mimic `std::collections::HashMap`.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":23909,"byte_end":23980,"line_start":793,"line_end":793,"column_start":5,"column_end":76}},{"value":"/ See the documentation on `dashmap::mapref::entry` for more details.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":23985,"byte_end":24056,"line_start":794,"line_end":794,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":24061,"byte_end":24064,"line_start":795,"line_end":795,"column_start":5,"column_end":8}},{"value":"/ Returns None if the shard is currently locked.","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":24069,"byte_end":24119,"line_start":796,"line_end":796,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1327},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":24344,"byte_end":24356,"line_start":805,"line_end":805,"column_start":8,"column_end":20},"name":"_shard_count","qualname":"<DashMap<K, V, S> as t::Map>::_shard_count","value":"fn _shard_count(&Self) -> usize","parent":{"krate":0,"index":1040},"children":[],"decl_id":{"krate":0,"index":1045},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1328},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":24422,"byte_end":24437,"line_start":809,"line_end":809,"column_start":15,"column_end":30},"name":"_get_read_shard","qualname":"<DashMap<K, V, S> as t::Map>::_get_read_shard","value":"unsafe fn _get_read_shard(&'a Self, usize) -> &'a HashMap<K, V, S>","parent":{"krate":0,"index":1040},"children":[],"decl_id":{"krate":0,"index":1046},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1329},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":24602,"byte_end":24619,"line_start":815,"line_end":815,"column_start":15,"column_end":32},"name":"_yield_read_shard","qualname":"<DashMap<K, V, S> as t::Map>::_yield_read_shard","value":"unsafe fn _yield_read_shard(&'a Self, usize) -> RwLockReadGuard","parent":{"krate":0,"index":1040},"children":[],"decl_id":{"krate":0,"index":1047},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1330},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":24795,"byte_end":24813,"line_start":821,"line_end":821,"column_start":15,"column_end":33},"name":"_yield_write_shard","qualname":"<DashMap<K, V, S> as t::Map>::_yield_write_shard","value":"unsafe fn _yield_write_shard(&'a Self, usize) -> RwLockWriteGuard","parent":{"krate":0,"index":1040},"children":[],"decl_id":{"krate":0,"index":1048},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1331},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":24991,"byte_end":25012,"line_start":827,"line_end":827,"column_start":15,"column_end":36},"name":"_try_yield_read_shard","qualname":"<DashMap<K, V, S> as t::Map>::_try_yield_read_shard","value":"unsafe fn _try_yield_read_shard(&'a Self, usize) -> Option<RwLockReadGuard>","parent":{"krate":0,"index":1040},"children":[],"decl_id":{"krate":0,"index":1049},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1332},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":25223,"byte_end":25245,"line_start":836,"line_end":836,"column_start":15,"column_end":37},"name":"_try_yield_write_shard","qualname":"<DashMap<K, V, S> as t::Map>::_try_yield_write_shard","value":"unsafe fn _try_yield_write_shard(&'a Self, usize) -> Option<RwLockWriteGuard>","parent":{"krate":0,"index":1040},"children":[],"decl_id":{"krate":0,"index":1050},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1333},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":25451,"byte_end":25458,"line_start":845,"line_end":845,"column_start":8,"column_end":15},"name":"_insert","qualname":"<DashMap<K, V, S> as t::Map>::_insert","value":"fn _insert(&Self, K, V) -> Option<V>","parent":{"krate":0,"index":1040},"children":[],"decl_id":{"krate":0,"index":1051},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1335},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":25770,"byte_end":25777,"line_start":857,"line_end":857,"column_start":8,"column_end":15},"name":"_remove","qualname":"<DashMap<K, V, S> as t::Map>::_remove","value":"fn _remove<Q>(&Self, &Q) -> Option<(K, V)> where K: Borrow<Q>, Q: Hash + Eq +\n?Sized","parent":{"krate":0,"index":1040},"children":[],"decl_id":{"krate":0,"index":1052},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1338},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":26120,"byte_end":26130,"line_start":871,"line_end":871,"column_start":8,"column_end":18},"name":"_remove_if","qualname":"<DashMap<K, V, S> as t::Map>::_remove_if","value":"fn _remove_if<Q,\nimpl FnOnce(&K, &V) -> bool>(&Self, &Q, impl FnOnce(&K, &V) -> bool)\n-> Option<(K, V)> where K: Borrow<Q>, Q: Hash + Eq + ?Sized,\nimpl FnOnce(&K, &V) -> bool: for<'_, '_> FnOnce(&'_ K, &'_ V) -> bool","parent":{"krate":0,"index":1040},"children":[],"decl_id":{"krate":0,"index":1054},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1342},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":26864,"byte_end":26878,"line_start":898,"line_end":898,"column_start":8,"column_end":22},"name":"_remove_if_mut","qualname":"<DashMap<K, V, S> as t::Map>::_remove_if_mut","value":"fn _remove_if_mut<Q,\nimpl FnOnce(&K, &mut V) -> bool>(&Self, &Q, impl FnOnce(&K, &mut V) -> bool)\n-> Option<(K, V)> where K: Borrow<Q>, Q: Hash + Eq + ?Sized,\nimpl FnOnce(&K, &mut V) -> bool: for<'_, '_> FnOnce(&'_ K, &'_ mut V) -> bool","parent":{"krate":0,"index":1040},"children":[],"decl_id":{"krate":0,"index":1057},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1346},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":27616,"byte_end":27621,"line_start":925,"line_end":925,"column_start":8,"column_end":13},"name":"_iter","qualname":"<DashMap<K, V, S> as t::Map>::_iter","value":"fn _iter(&'a Self) -> Iter","parent":{"krate":0,"index":1040},"children":[],"decl_id":{"krate":0,"index":1060},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1347},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":27711,"byte_end":27720,"line_start":929,"line_end":929,"column_start":8,"column_end":17},"name":"_iter_mut","qualname":"<DashMap<K, V, S> as t::Map>::_iter_mut","value":"fn _iter_mut(&'a Self) -> IterMut","parent":{"krate":0,"index":1040},"children":[],"decl_id":{"krate":0,"index":1061},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1348},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":27816,"byte_end":27820,"line_start":933,"line_end":933,"column_start":8,"column_end":12},"name":"_get","qualname":"<DashMap<K, V, S> as t::Map>::_get","value":"fn _get<Q>(&'a Self, &Q) -> Option<Ref> where K: Borrow<Q>, Q: Hash + Eq +\n?Sized","parent":{"krate":0,"index":1040},"children":[],"decl_id":{"krate":0,"index":1062},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1350},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":28389,"byte_end":28397,"line_start":955,"line_end":955,"column_start":8,"column_end":16},"name":"_get_mut","qualname":"<DashMap<K, V, S> as t::Map>::_get_mut","value":"fn _get_mut<Q>(&'a Self, &Q) -> Option<RefMut> where K: Borrow<Q>, Q: Hash +\nEq + ?Sized","parent":{"krate":0,"index":1040},"children":[],"decl_id":{"krate":0,"index":1064},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1352},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":28974,"byte_end":28982,"line_start":977,"line_end":977,"column_start":8,"column_end":16},"name":"_try_get","qualname":"<DashMap<K, V, S> as t::Map>::_try_get","value":"fn _try_get<Q>(&'a Self, &Q) -> TryResult<Ref> where K: Borrow<Q>, Q: Hash +\nEq + ?Sized","parent":{"krate":0,"index":1040},"children":[],"decl_id":{"krate":0,"index":1066},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1354},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":29683,"byte_end":29695,"line_start":1002,"line_end":1002,"column_start":8,"column_end":20},"name":"_try_get_mut","qualname":"<DashMap<K, V, S> as t::Map>::_try_get_mut","value":"fn _try_get_mut<Q>(&'a Self, &Q) -> TryResult<RefMut> where K: Borrow<Q>,\nQ: Hash + Eq + ?Sized","parent":{"krate":0,"index":1040},"children":[],"decl_id":{"krate":0,"index":1068},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1356},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":30404,"byte_end":30418,"line_start":1027,"line_end":1027,"column_start":8,"column_end":22},"name":"_shrink_to_fit","qualname":"<DashMap<K, V, S> as t::Map>::_shrink_to_fit","value":"fn _shrink_to_fit(&Self)","parent":{"krate":0,"index":1040},"children":[],"decl_id":{"krate":0,"index":1070},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1358},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":30510,"byte_end":30517,"line_start":1031,"line_end":1031,"column_start":8,"column_end":15},"name":"_retain","qualname":"<DashMap<K, V, S> as t::Map>::_retain","value":"fn _retain<impl FnMut(&K, &mut V) -> bool>(&Self,\nimpl FnMut(&K, &mut V) -> bool) where\nimpl FnMut(&K, &mut V) -> bool: for<'_, '_> FnMut(&'_ K, &'_ mut V) -> bool","parent":{"krate":0,"index":1040},"children":[],"decl_id":{"krate":0,"index":1071},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1362},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":30691,"byte_end":30695,"line_start":1037,"line_end":1037,"column_start":8,"column_end":12},"name":"_len","qualname":"<DashMap<K, V, S> as t::Map>::_len","value":"fn _len(&Self) -> usize","parent":{"krate":0,"index":1040},"children":[],"decl_id":{"krate":0,"index":1073},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1364},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":30785,"byte_end":30794,"line_start":1041,"line_end":1041,"column_start":8,"column_end":17},"name":"_capacity","qualname":"<DashMap<K, V, S> as t::Map>::_capacity","value":"fn _capacity(&Self) -> usize","parent":{"krate":0,"index":1040},"children":[],"decl_id":{"krate":0,"index":1074},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1366},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":30889,"byte_end":30895,"line_start":1045,"line_end":1045,"column_start":8,"column_end":14},"name":"_alter","qualname":"<DashMap<K, V, S> as t::Map>::_alter","value":"fn _alter<Q, impl FnOnce(&K, V) -> V>(&Self, &Q, impl FnOnce(&K, V) -> V)\nwhere K: Borrow<Q>, Q: Hash + Eq + ?Sized,\nimpl FnOnce(&K, V) -> V: for<'_> FnOnce(&'_ K, V) -> V","parent":{"krate":0,"index":1040},"children":[],"decl_id":{"krate":0,"index":1075},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1369},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":31136,"byte_end":31146,"line_start":1055,"line_end":1055,"column_start":8,"column_end":18},"name":"_alter_all","qualname":"<DashMap<K, V, S> as t::Map>::_alter_all","value":"fn _alter_all<impl FnMut(&K, V) -> V>(&Self, impl FnMut(&K, V) -> V) where\nimpl FnMut(&K, V) -> V: for<'_> FnMut(&'_ K, V) -> V","parent":{"krate":0,"index":1040},"children":[],"decl_id":{"krate":0,"index":1078},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1373},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":31389,"byte_end":31394,"line_start":1063,"line_end":1063,"column_start":8,"column_end":13},"name":"_view","qualname":"<DashMap<K, V, S> as t::Map>::_view","value":"fn _view<Q, R, impl FnOnce(&K, &V) -> R>(&Self, &Q, impl FnOnce(&K, &V) -> R)\n-> Option<R> where K: Borrow<Q>, Q: Hash + Eq + ?Sized,\nimpl FnOnce(&K, &V) -> R: for<'_, '_> FnOnce(&'_ K, &'_ V) -> R","parent":{"krate":0,"index":1040},"children":[],"decl_id":{"krate":0,"index":1080},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1378},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":31640,"byte_end":31646,"line_start":1074,"line_end":1074,"column_start":8,"column_end":14},"name":"_entry","qualname":"<DashMap<K, V, S> as t::Map>::_entry","value":"fn _entry(&'a Self, K) -> Entry","parent":{"krate":0,"index":1040},"children":[],"decl_id":{"krate":0,"index":1084},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1379},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":32219,"byte_end":32229,"line_start":1092,"line_end":1092,"column_start":8,"column_end":18},"name":"_try_entry","qualname":"<DashMap<K, V, S> as t::Map>::_try_entry","value":"fn _try_entry(&'a Self, K) -> Option<Entry>","parent":{"krate":0,"index":1040},"children":[],"decl_id":{"krate":0,"index":1085},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1380},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":32991,"byte_end":32998,"line_start":1118,"line_end":1118,"column_start":8,"column_end":15},"name":"_hasher","qualname":"<DashMap<K, V, S> as t::Map>::_hasher","value":"fn _hasher(&Self) -> S","parent":{"krate":0,"index":1040},"children":[],"decl_id":{"krate":0,"index":1086},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1385},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":33166,"byte_end":33169,"line_start":1126,"line_end":1126,"column_start":8,"column_end":11},"name":"fmt","qualname":"<DashMap<K, V, S> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10108},"children":[],"decl_id":{"krate":2,"index":10109},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1392},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":33528,"byte_end":33531,"line_start":1142,"line_end":1142,"column_start":8,"column_end":11},"name":"shl","qualname":"<&'a DashMap<K, V, S> as std::ops::Shl>::shl","value":"fn shl(Self, (K, V)) -> Self::Output","parent":{"krate":2,"index":3321},"children":[],"decl_id":{"krate":2,"index":3324},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1400},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":33807,"byte_end":33810,"line_start":1154,"line_end":1154,"column_start":8,"column_end":11},"name":"shr","qualname":"<&'a DashMap<K, V, S> as std::ops::Shr>::shr","value":"fn shr(Self, &Q) -> Self::Output","parent":{"krate":2,"index":3327},"children":[],"decl_id":{"krate":2,"index":3330},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1408},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":34081,"byte_end":34086,"line_start":1166,"line_end":1166,"column_start":8,"column_end":13},"name":"bitor","qualname":"<&'a DashMap<K, V, S> as std::ops::BitOr>::bitor","value":"fn bitor(Self, &Q) -> Self::Output","parent":{"krate":2,"index":3311},"children":[],"decl_id":{"krate":2,"index":3314},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1416},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":34354,"byte_end":34357,"line_start":1178,"line_end":1178,"column_start":8,"column_end":11},"name":"sub","qualname":"<&'a DashMap<K, V, S> as std::ops::Sub>::sub","value":"fn sub(Self, &Q) -> Self::Output","parent":{"krate":2,"index":3252},"children":[],"decl_id":{"krate":2,"index":3255},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1424},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":34608,"byte_end":34614,"line_start":1190,"line_end":1190,"column_start":8,"column_end":14},"name":"bitand","qualname":"<&'a DashMap<K, V, S> as std::ops::BitAnd>::bitand","value":"fn bitand(Self, &Q) -> Self::Output","parent":{"krate":2,"index":3306},"children":[],"decl_id":{"krate":2,"index":3309},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1432},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":34848,"byte_end":34857,"line_start":1200,"line_end":1200,"column_start":8,"column_end":17},"name":"into_iter","qualname":"<DashMap<K, V, S> as std::iter::IntoIterator>::into_iter","value":"fn into_iter(Self) -> Self::IntoIter","parent":{"krate":2,"index":8279},"children":[],"decl_id":{"krate":2,"index":8282},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1440},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":35118,"byte_end":35127,"line_start":1210,"line_end":1210,"column_start":8,"column_end":17},"name":"into_iter","qualname":"<&'a DashMap<K, V, S> as std::iter::IntoIterator>::into_iter","value":"fn into_iter(Self) -> Self::IntoIter","parent":{"krate":2,"index":8279},"children":[],"decl_id":{"krate":2,"index":8282},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1445},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":35274,"byte_end":35280,"line_start":1216,"line_end":1216,"column_start":8,"column_end":14},"name":"extend","qualname":"<DashMap<K, V, S> as std::iter::Extend>::extend","value":"fn extend<I>(&mut Self, I) where I: IntoIterator<Item = (K, V)>","parent":{"krate":2,"index":8288},"children":[],"decl_id":{"krate":2,"index":8290},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1451},"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":35549,"byte_end":35558,"line_start":1224,"line_end":1224,"column_start":8,"column_end":17},"name":"from_iter","qualname":"<DashMap<K, V, S> as std::iter::FromIterator>::from_iter","value":"fn from_iter<I>(I) -> Self where I: IntoIterator<Item = (K, V)>","parent":{"krate":2,"index":8275},"children":[],"decl_id":{"krate":2,"index":8277},"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/iter.rs","byte_start":39788,"byte_end":39798,"line_start":32,"line_end":32,"column_start":47,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":64}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/iter.rs","byte_start":40095,"byte_end":40105,"line_start":44,"line_end":44,"column_start":60,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":72},{"krate":0,"index":73}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/iter.rs","byte_start":41067,"byte_end":41077,"line_start":78,"line_end":78,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/iter.rs","byte_start":41201,"byte_end":41211,"line_start":86,"line_end":86,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/iter.rs","byte_start":42027,"byte_end":42031,"line_start":121,"line_end":121,"column_start":80,"column_end":84},"value":"","parent":null,"children":[{"krate":0,"index":107}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/iter.rs","byte_start":42155,"byte_end":42159,"line_start":127,"line_end":127,"column_start":42,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/iter.rs","byte_start":42334,"byte_end":42338,"line_start":136,"line_end":136,"column_start":42,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/iter.rs","byte_start":42548,"byte_end":42552,"line_start":145,"line_end":145,"column_start":77,"column_end":81},"value":"","parent":null,"children":[{"krate":0,"index":128}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/iter.rs","byte_start":42810,"byte_end":42814,"line_start":156,"line_end":156,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":135},{"krate":0,"index":136}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/iter.rs","byte_start":44110,"byte_end":44117,"line_start":205,"line_end":205,"column_start":42,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/iter.rs","byte_start":44292,"byte_end":44299,"line_start":214,"line_end":214,"column_start":42,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/iter.rs","byte_start":44513,"byte_end":44520,"line_start":224,"line_end":224,"column_start":5,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":166}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/iter.rs","byte_start":44778,"byte_end":44785,"line_start":236,"line_end":236,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":173},{"krate":0,"index":174}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/iter_set.rs","byte_start":46738,"byte_end":46748,"line_start":9,"line_end":9,"column_start":44,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":196}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/iter_set.rs","byte_start":46919,"byte_end":46929,"line_start":15,"line_end":15,"column_start":57,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":200},{"krate":0,"index":201}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/iter_set.rs","byte_start":47083,"byte_end":47093,"line_start":23,"line_end":23,"column_start":28,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/iter_set.rs","byte_start":47198,"byte_end":47208,"line_start":30,"line_end":30,"column_start":28,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/iter_set.rs","byte_start":47405,"byte_end":47409,"line_start":41,"line_end":41,"column_start":39,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/iter_set.rs","byte_start":47561,"byte_end":47565,"line_start":49,"line_end":49,"column_start":39,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/iter_set.rs","byte_start":47753,"byte_end":47757,"line_start":57,"line_end":57,"column_start":75,"column_end":79},"value":"","parent":null,"children":[{"krate":0,"index":232}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/iter_set.rs","byte_start":47971,"byte_end":47975,"line_start":64,"line_end":64,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":238},{"krate":0,"index":239}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lock.rs","byte_start":48710,"byte_end":48719,"line_start":17,"line_end":17,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":273},{"krate":0,"index":274},{"krate":0,"index":275},{"krate":0,"index":276},{"krate":0,"index":277},{"krate":0,"index":278},{"krate":0,"index":279},{"krate":0,"index":280}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lock.rs","byte_start":50149,"byte_end":50158,"line_start":76,"line_end":76,"column_start":46,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":282}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lock.rs","byte_start":50480,"byte_end":50489,"line_start":88,"line_end":88,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":284},{"krate":0,"index":288},{"krate":0,"index":290},{"krate":0,"index":291},{"krate":0,"index":292},{"krate":0,"index":296}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/entry.rs","byte_start":57606,"byte_end":57611,"line_start":16,"line_end":16,"column_start":43,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":347},{"krate":0,"index":349},{"krate":0,"index":350},{"krate":0,"index":351},{"krate":0,"index":352},{"krate":0,"index":353},{"krate":0,"index":355}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/entry.rs","byte_start":60033,"byte_end":60044,"line_start":92,"line_end":92,"column_start":72,"column_end":83},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/entry.rs","byte_start":60132,"byte_end":60143,"line_start":93,"line_end":93,"column_start":72,"column_end":83},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/entry.rs","byte_start":60203,"byte_end":60214,"line_start":95,"line_end":95,"column_start":43,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":380},{"krate":0,"index":381},{"krate":0,"index":382},{"krate":0,"index":383}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/entry.rs","byte_start":61156,"byte_end":61169,"line_start":135,"line_end":135,"column_start":72,"column_end":85},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/entry.rs","byte_start":61257,"byte_end":61270,"line_start":136,"line_end":136,"column_start":72,"column_end":85},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/entry.rs","byte_start":61330,"byte_end":61343,"line_start":138,"line_end":138,"column_start":43,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":407},{"krate":0,"index":408},{"krate":0,"index":409},{"krate":0,"index":410},{"krate":0,"index":411},{"krate":0,"index":412},{"krate":0,"index":413},{"krate":0,"index":414},{"krate":0,"index":415},{"krate":0,"index":416}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/multiple.rs","byte_start":63101,"byte_end":63109,"line_start":15,"line_end":15,"column_start":72,"column_end":80},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/multiple.rs","byte_start":63197,"byte_end":63205,"line_start":16,"line_end":16,"column_start":72,"column_end":80},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/multiple.rs","byte_start":63265,"byte_end":63273,"line_start":18,"line_end":18,"column_start":43,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":470},{"krate":0,"index":471},{"krate":0,"index":472},{"krate":0,"index":473}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/multiple.rs","byte_start":63783,"byte_end":63791,"line_start":44,"line_end":44,"column_start":53,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":479},{"krate":0,"index":480}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/multiple.rs","byte_start":64102,"byte_end":64113,"line_start":58,"line_end":58,"column_start":72,"column_end":83},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/multiple.rs","byte_start":64201,"byte_end":64212,"line_start":59,"line_end":59,"column_start":72,"column_end":83},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/multiple.rs","byte_start":64272,"byte_end":64283,"line_start":61,"line_end":61,"column_start":43,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":504},{"krate":0,"index":505},{"krate":0,"index":506},{"krate":0,"index":507},{"krate":0,"index":508},{"krate":0,"index":509}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/multiple.rs","byte_start":64969,"byte_end":64980,"line_start":95,"line_end":95,"column_start":53,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":515},{"krate":0,"index":516}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/multiple.rs","byte_start":65131,"byte_end":65142,"line_start":103,"line_end":103,"column_start":56,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":522}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/one.rs","byte_start":65660,"byte_end":65663,"line_start":14,"line_end":14,"column_start":72,"column_end":75},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/one.rs","byte_start":65751,"byte_end":65754,"line_start":15,"line_end":15,"column_start":72,"column_end":75},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/one.rs","byte_start":65814,"byte_end":65817,"line_start":17,"line_end":17,"column_start":43,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":581},{"krate":0,"index":582},{"krate":0,"index":583},{"krate":0,"index":584},{"krate":0,"index":585},{"krate":0,"index":588}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/one.rs","byte_start":66940,"byte_end":66943,"line_start":69,"line_end":69,"column_start":68,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":596}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/one.rs","byte_start":67201,"byte_end":67204,"line_start":78,"line_end":78,"column_start":53,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":602},{"krate":0,"index":603}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/one.rs","byte_start":67504,"byte_end":67510,"line_start":92,"line_end":92,"column_start":72,"column_end":78},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/one.rs","byte_start":67598,"byte_end":67604,"line_start":93,"line_end":93,"column_start":72,"column_end":78},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/one.rs","byte_start":67664,"byte_end":67670,"line_start":95,"line_end":95,"column_start":43,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":627},{"krate":0,"index":628},{"krate":0,"index":629},{"krate":0,"index":630},{"krate":0,"index":631},{"krate":0,"index":632},{"krate":0,"index":633},{"krate":0,"index":634},{"krate":0,"index":637}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/one.rs","byte_start":69149,"byte_end":69155,"line_start":157,"line_end":157,"column_start":68,"column_end":74},"value":"","parent":null,"children":[{"krate":0,"index":645}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/one.rs","byte_start":69416,"byte_end":69422,"line_start":166,"line_end":166,"column_start":53,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":651},{"krate":0,"index":652}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/one.rs","byte_start":69573,"byte_end":69579,"line_start":174,"line_end":174,"column_start":56,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":658}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/one.rs","byte_start":69855,"byte_end":69864,"line_start":186,"line_end":186,"column_start":46,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":674},{"krate":0,"index":675},{"krate":0,"index":676},{"krate":0,"index":677},{"krate":0,"index":680}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/one.rs","byte_start":70798,"byte_end":70807,"line_start":227,"line_end":227,"column_start":71,"column_end":80},"value":"","parent":null,"children":[{"krate":0,"index":689}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/one.rs","byte_start":71077,"byte_end":71086,"line_start":236,"line_end":236,"column_start":56,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":696},{"krate":0,"index":697}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/one.rs","byte_start":71373,"byte_end":71385,"line_start":250,"line_end":250,"column_start":46,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":713},{"krate":0,"index":714},{"krate":0,"index":715},{"krate":0,"index":716},{"krate":0,"index":717},{"krate":0,"index":718},{"krate":0,"index":721}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/one.rs","byte_start":72560,"byte_end":72572,"line_start":300,"line_end":300,"column_start":71,"column_end":83},"value":"","parent":null,"children":[{"krate":0,"index":730}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/one.rs","byte_start":72845,"byte_end":72857,"line_start":309,"line_end":309,"column_start":56,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":737},{"krate":0,"index":738}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/one.rs","byte_start":73014,"byte_end":73026,"line_start":317,"line_end":317,"column_start":59,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":745}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/read_only.rs","byte_start":73522,"byte_end":73534,"line_start":13,"line_end":13,"column_start":58,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":782}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/read_only.rs","byte_start":73735,"byte_end":73747,"line_start":22,"line_end":22,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":787}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/read_only.rs","byte_start":73869,"byte_end":73881,"line_start":29,"line_end":29,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":792},{"krate":0,"index":793}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/read_only.rs","byte_start":74185,"byte_end":74197,"line_start":40,"line_end":40,"column_start":60,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":799},{"krate":0,"index":800},{"krate":0,"index":801},{"krate":0,"index":802},{"krate":0,"index":804},{"krate":0,"index":807},{"krate":0,"index":810},{"krate":0,"index":813},{"krate":0,"index":817},{"krate":0,"index":820}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":80208,"byte_end":80215,"line_start":23,"line_end":23,"column_start":72,"column_end":79},"value":"","parent":null,"children":[{"krate":0,"index":867}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":80383,"byte_end":80390,"line_start":29,"line_end":29,"column_start":48,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":871},{"krate":0,"index":872}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":80623,"byte_end":80630,"line_start":41,"line_end":41,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":876}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":80811,"byte_end":80818,"line_start":51,"line_end":51,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":880},{"krate":0,"index":881}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":81591,"byte_end":81598,"line_start":82,"line_end":82,"column_start":53,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":886},{"krate":0,"index":887},{"krate":0,"index":888},{"krate":0,"index":890},{"krate":0,"index":891},{"krate":0,"index":894},{"krate":0,"index":899},{"krate":0,"index":900},{"krate":0,"index":902},{"krate":0,"index":903},{"krate":0,"index":906},{"krate":0,"index":907},{"krate":0,"index":908},{"krate":0,"index":909},{"krate":0,"index":910}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":90220,"byte_end":90227,"line_start":388,"line_end":388,"column_start":65,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":916},{"krate":0,"index":917},{"krate":0,"index":918}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":90452,"byte_end":90459,"line_start":398,"line_end":398,"column_start":58,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":922}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":90700,"byte_end":90707,"line_start":406,"line_end":406,"column_start":74,"column_end":81},"value":"","parent":null,"children":[{"krate":0,"index":928}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/setref/multiple.rs","byte_start":91958,"byte_end":91966,"line_start":9,"line_end":9,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":957},{"krate":0,"index":958}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/setref/multiple.rs","byte_start":92203,"byte_end":92211,"line_start":19,"line_end":19,"column_start":50,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":963},{"krate":0,"index":964}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/setref/one.rs","byte_start":92551,"byte_end":92554,"line_start":9,"line_end":9,"column_start":40,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":991},{"krate":0,"index":992}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/setref/one.rs","byte_start":92781,"byte_end":92784,"line_start":19,"line_end":19,"column_start":50,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":997},{"krate":0,"index":998}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/try_result.rs","byte_start":96803,"byte_end":96812,"line_start":12,"line_end":12,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1095},{"krate":0,"index":1096},{"krate":0,"index":1097},{"krate":0,"index":1098},{"krate":0,"index":1099}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/util.rs","byte_start":99617,"byte_end":99628,"line_start":51,"line_end":51,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1129}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/util.rs","byte_start":99812,"byte_end":99823,"line_start":61,"line_end":61,"column_start":31,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/util.rs","byte_start":99861,"byte_end":99872,"line_start":63,"line_end":63,"column_start":31,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/util.rs","byte_start":99888,"byte_end":99899,"line_start":65,"line_end":65,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1136},{"krate":0,"index":1137},{"krate":0,"index":1138},{"krate":0,"index":1139},{"krate":0,"index":1140}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/util.rs","byte_start":100574,"byte_end":100586,"line_start":96,"line_end":96,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1144}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":2303,"byte_end":2310,"line_start":79,"line_end":79,"column_start":58,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":1255}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":2735,"byte_end":2742,"line_start":97,"line_end":97,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1260}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Inherent","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":2933,"byte_end":2940,"line_start":107,"line_end":107,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1265},{"krate":0,"index":1266},{"krate":0,"index":1267},{"krate":0,"index":1268}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Inherent","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":5094,"byte_end":5101,"line_start":178,"line_end":178,"column_start":60,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":1274},{"krate":0,"index":1275},{"krate":0,"index":1276},{"krate":0,"index":1277},{"krate":0,"index":1278},{"krate":0,"index":1280},{"krate":0,"index":1468},{"krate":0,"index":1469},{"krate":0,"index":1282},{"krate":0,"index":1283},{"krate":0,"index":1284},{"krate":0,"index":1286},{"krate":0,"index":1289},{"krate":0,"index":1292},{"krate":0,"index":1293},{"krate":0,"index":1294},{"krate":0,"index":1296},{"krate":0,"index":1298},{"krate":0,"index":1300},{"krate":0,"index":1302},{"krate":0,"index":1303},{"krate":0,"index":1305},{"krate":0,"index":1306},{"krate":0,"index":1307},{"krate":0,"index":1308},{"krate":0,"index":1309},{"krate":0,"index":1312},{"krate":0,"index":1314},{"krate":0,"index":1318},{"krate":0,"index":1320},{"krate":0,"index":1321}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":24318,"byte_end":24325,"line_start":803,"line_end":803,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1327},{"krate":0,"index":1328},{"krate":0,"index":1329},{"krate":0,"index":1330},{"krate":0,"index":1331},{"krate":0,"index":1332},{"krate":0,"index":1333},{"krate":0,"index":1335},{"krate":0,"index":1338},{"krate":0,"index":1342},{"krate":0,"index":1346},{"krate":0,"index":1347},{"krate":0,"index":1348},{"krate":0,"index":1350},{"krate":0,"index":1352},{"krate":0,"index":1354},{"krate":0,"index":1356},{"krate":0,"index":1358},{"krate":0,"index":1362},{"krate":0,"index":1364},{"krate":0,"index":1366},{"krate":0,"index":1369},{"krate":0,"index":1373},{"krate":0,"index":1378},{"krate":0,"index":1379},{"krate":0,"index":1380}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":33140,"byte_end":33147,"line_start":1124,"line_end":1124,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1385}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":34755,"byte_end":34762,"line_start":1195,"line_end":1195,"column_start":68,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":1430},{"krate":0,"index":1431},{"krate":0,"index":1432}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":35248,"byte_end":35255,"line_start":1215,"line_end":1215,"column_start":66,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":1445}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":35523,"byte_end":35530,"line_start":1223,"line_end":1223,"column_start":82,"column_end":89},"value":"","parent":null,"children":[{"krate":0,"index":1451}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":44,"byte_end":48,"line_start":3,"line_end":3,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":3}},{"kind":"Mod","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":58,"byte_end":66,"line_start":4,"line_end":4,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":175}},{"kind":"Mod","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":86,"byte_end":92,"line_start":6,"line_end":6,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":298}},{"kind":"Mod","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/mod.rs","byte_start":57159,"byte_end":57164,"line_start":1,"line_end":1,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":299}},{"kind":"Mod","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/mod.rs","byte_start":57174,"byte_end":57182,"line_start":2,"line_end":2,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":417}},{"kind":"Mod","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/mod.rs","byte_start":57192,"byte_end":57195,"line_start":3,"line_end":3,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":523}},{"kind":"Mod","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":163,"byte_end":169,"line_start":11,"line_end":11,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":930}},{"kind":"Mod","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/setref/mod.rs","byte_start":91670,"byte_end":91678,"line_start":1,"line_end":1,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":931}},{"kind":"Mod","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/setref/mod.rs","byte_start":91688,"byte_end":91691,"line_start":2,"line_end":2,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":965}},{"kind":"Mod","span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":186,"byte_end":196,"line_start":13,"line_end":13,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":1092}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/iter.rs","byte_start":39788,"byte_end":39798,"line_start":32,"line_end":32,"column_start":47,"column_end":57},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":53},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/iter.rs","byte_start":40095,"byte_end":40105,"line_start":44,"line_end":44,"column_start":60,"column_end":70},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":53},"to":{"krate":2,"index":8474}},{"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/iter.rs","byte_start":41067,"byte_end":41077,"line_start":78,"line_end":78,"column_start":31,"column_end":41},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":53},"to":{"krate":2,"index":3179}},{"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/iter.rs","byte_start":41201,"byte_end":41211,"line_start":86,"line_end":86,"column_start":31,"column_end":41},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":53},"to":{"krate":2,"index":3191}},{"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/iter.rs","byte_start":42027,"byte_end":42031,"line_start":121,"line_end":121,"column_start":80,"column_end":84},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":92},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/iter.rs","byte_start":42155,"byte_end":42159,"line_start":127,"line_end":127,"column_start":42,"column_end":46},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":92},"to":{"krate":2,"index":3179}},{"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/iter.rs","byte_start":42334,"byte_end":42338,"line_start":136,"line_end":136,"column_start":42,"column_end":46},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":92},"to":{"krate":2,"index":3191}},{"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/iter.rs","byte_start":42548,"byte_end":42552,"line_start":145,"line_end":145,"column_start":77,"column_end":81},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":92},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/iter.rs","byte_start":42810,"byte_end":42814,"line_start":156,"line_end":156,"column_start":9,"column_end":13},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":92},"to":{"krate":2,"index":8474}},{"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/iter.rs","byte_start":44110,"byte_end":44117,"line_start":205,"line_end":205,"column_start":42,"column_end":49},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":137},"to":{"krate":2,"index":3179}},{"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/iter.rs","byte_start":44292,"byte_end":44299,"line_start":214,"line_end":214,"column_start":42,"column_end":49},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":137},"to":{"krate":2,"index":3191}},{"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/iter.rs","byte_start":44513,"byte_end":44520,"line_start":224,"line_end":224,"column_start":5,"column_end":12},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":137},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/iter.rs","byte_start":44778,"byte_end":44785,"line_start":236,"line_end":236,"column_start":9,"column_end":16},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":137},"to":{"krate":2,"index":8474}},{"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/iter_set.rs","byte_start":46738,"byte_end":46748,"line_start":9,"line_end":9,"column_start":44,"column_end":54},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":189},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/iter_set.rs","byte_start":46919,"byte_end":46929,"line_start":15,"line_end":15,"column_start":57,"column_end":67},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":189},"to":{"krate":2,"index":8474}},{"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/iter_set.rs","byte_start":47083,"byte_end":47093,"line_start":23,"line_end":23,"column_start":28,"column_end":38},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":189},"to":{"krate":2,"index":3179}},{"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/iter_set.rs","byte_start":47198,"byte_end":47208,"line_start":30,"line_end":30,"column_start":28,"column_end":38},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":189},"to":{"krate":2,"index":3191}},{"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/iter_set.rs","byte_start":47405,"byte_end":47409,"line_start":41,"line_end":41,"column_start":39,"column_end":43},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":209},"to":{"krate":2,"index":3179}},{"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/iter_set.rs","byte_start":47561,"byte_end":47565,"line_start":49,"line_end":49,"column_start":39,"column_end":43},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":209},"to":{"krate":2,"index":3191}},{"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/iter_set.rs","byte_start":47753,"byte_end":47757,"line_start":57,"line_end":57,"column_start":75,"column_end":79},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":209},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/iter_set.rs","byte_start":47971,"byte_end":47975,"line_start":64,"line_end":64,"column_start":9,"column_end":13},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":209},"to":{"krate":2,"index":8474}},{"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lock.rs","byte_start":48710,"byte_end":48719,"line_start":17,"line_end":17,"column_start":37,"column_end":46},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":270},"to":{"krate":25,"index":512}},{"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lock.rs","byte_start":50149,"byte_end":50158,"line_start":76,"line_end":76,"column_start":46,"column_end":55},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":270},"to":{"krate":25,"index":528}},{"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lock.rs","byte_start":50480,"byte_end":50489,"line_start":88,"line_end":88,"column_start":6,"column_end":15},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":270},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/entry.rs","byte_start":57606,"byte_end":57611,"line_start":16,"line_end":16,"column_start":43,"column_end":48},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":331},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/entry.rs","byte_start":60033,"byte_end":60044,"line_start":92,"line_end":92,"column_start":72,"column_end":83},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":358},"to":{"krate":2,"index":3179}},{"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/entry.rs","byte_start":60132,"byte_end":60143,"line_start":93,"line_end":93,"column_start":72,"column_end":83},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":358},"to":{"krate":2,"index":3191}},{"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/entry.rs","byte_start":60203,"byte_end":60214,"line_start":95,"line_end":95,"column_start":43,"column_end":54},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":358},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/entry.rs","byte_start":61156,"byte_end":61169,"line_start":135,"line_end":135,"column_start":72,"column_end":85},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":384},"to":{"krate":2,"index":3179}},{"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/entry.rs","byte_start":61257,"byte_end":61270,"line_start":136,"line_end":136,"column_start":72,"column_end":85},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":384},"to":{"krate":2,"index":3191}},{"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/entry.rs","byte_start":61330,"byte_end":61343,"line_start":138,"line_end":138,"column_start":43,"column_end":56},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":384},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/multiple.rs","byte_start":63101,"byte_end":63109,"line_start":15,"line_end":15,"column_start":72,"column_end":80},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":447},"to":{"krate":2,"index":3179}},{"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/multiple.rs","byte_start":63197,"byte_end":63205,"line_start":16,"line_end":16,"column_start":72,"column_end":80},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":447},"to":{"krate":2,"index":3191}},{"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/multiple.rs","byte_start":63265,"byte_end":63273,"line_start":18,"line_end":18,"column_start":43,"column_end":51},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":447},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/multiple.rs","byte_start":63783,"byte_end":63791,"line_start":44,"line_end":44,"column_start":53,"column_end":61},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":447},"to":{"krate":2,"index":3398}},{"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/multiple.rs","byte_start":64102,"byte_end":64113,"line_start":58,"line_end":58,"column_start":72,"column_end":83},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":481},"to":{"krate":2,"index":3179}},{"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/multiple.rs","byte_start":64201,"byte_end":64212,"line_start":59,"line_end":59,"column_start":72,"column_end":83},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":481},"to":{"krate":2,"index":3191}},{"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/multiple.rs","byte_start":64272,"byte_end":64283,"line_start":61,"line_end":61,"column_start":43,"column_end":54},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":481},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/multiple.rs","byte_start":64969,"byte_end":64980,"line_start":95,"line_end":95,"column_start":53,"column_end":64},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":481},"to":{"krate":2,"index":3398}},{"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/multiple.rs","byte_start":65131,"byte_end":65142,"line_start":103,"line_end":103,"column_start":56,"column_end":67},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":481},"to":{"krate":2,"index":3411}},{"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/one.rs","byte_start":65660,"byte_end":65663,"line_start":14,"line_end":14,"column_start":72,"column_end":75},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":558},"to":{"krate":2,"index":3179}},{"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/one.rs","byte_start":65751,"byte_end":65754,"line_start":15,"line_end":15,"column_start":72,"column_end":75},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":558},"to":{"krate":2,"index":3191}},{"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/one.rs","byte_start":65814,"byte_end":65817,"line_start":17,"line_end":17,"column_start":43,"column_end":46},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":558},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/one.rs","byte_start":66940,"byte_end":66943,"line_start":69,"line_end":69,"column_start":68,"column_end":71},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":558},"to":{"krate":2,"index":10108}},{"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/one.rs","byte_start":67201,"byte_end":67204,"line_start":78,"line_end":78,"column_start":53,"column_end":56},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":558},"to":{"krate":2,"index":3398}},{"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/one.rs","byte_start":67504,"byte_end":67510,"line_start":92,"line_end":92,"column_start":72,"column_end":78},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":604},"to":{"krate":2,"index":3179}},{"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/one.rs","byte_start":67598,"byte_end":67604,"line_start":93,"line_end":93,"column_start":72,"column_end":78},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":604},"to":{"krate":2,"index":3191}},{"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/one.rs","byte_start":67664,"byte_end":67670,"line_start":95,"line_end":95,"column_start":43,"column_end":49},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":604},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/one.rs","byte_start":69149,"byte_end":69155,"line_start":157,"line_end":157,"column_start":68,"column_end":74},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":604},"to":{"krate":2,"index":10108}},{"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/one.rs","byte_start":69416,"byte_end":69422,"line_start":166,"line_end":166,"column_start":53,"column_end":59},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":604},"to":{"krate":2,"index":3398}},{"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/one.rs","byte_start":69573,"byte_end":69579,"line_start":174,"line_end":174,"column_start":56,"column_end":62},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":604},"to":{"krate":2,"index":3411}},{"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/one.rs","byte_start":69855,"byte_end":69864,"line_start":186,"line_end":186,"column_start":46,"column_end":55},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":659},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/one.rs","byte_start":70798,"byte_end":70807,"line_start":227,"line_end":227,"column_start":71,"column_end":80},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":659},"to":{"krate":2,"index":10108}},{"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/one.rs","byte_start":71077,"byte_end":71086,"line_start":236,"line_end":236,"column_start":56,"column_end":65},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":659},"to":{"krate":2,"index":3398}},{"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/one.rs","byte_start":71373,"byte_end":71385,"line_start":250,"line_end":250,"column_start":46,"column_end":58},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":698},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/one.rs","byte_start":72560,"byte_end":72572,"line_start":300,"line_end":300,"column_start":71,"column_end":83},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":698},"to":{"krate":2,"index":10108}},{"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/one.rs","byte_start":72845,"byte_end":72857,"line_start":309,"line_end":309,"column_start":56,"column_end":68},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":698},"to":{"krate":2,"index":3398}},{"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/mapref/one.rs","byte_start":73014,"byte_end":73026,"line_start":317,"line_end":317,"column_start":59,"column_end":71},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":698},"to":{"krate":2,"index":3411}},{"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/read_only.rs","byte_start":73522,"byte_end":73534,"line_start":13,"line_end":13,"column_start":58,"column_end":70},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":773},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/read_only.rs","byte_start":73735,"byte_end":73747,"line_start":22,"line_end":22,"column_start":9,"column_end":21},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":773},"to":{"krate":2,"index":10108}},{"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/read_only.rs","byte_start":73869,"byte_end":73881,"line_start":29,"line_end":29,"column_start":15,"column_end":27},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":773},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/read_only.rs","byte_start":74185,"byte_end":74197,"line_start":40,"line_end":40,"column_start":60,"column_end":72},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":773},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":80208,"byte_end":80215,"line_start":23,"line_end":23,"column_start":72,"column_end":79},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":860},"to":{"krate":2,"index":10108}},{"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":80383,"byte_end":80390,"line_start":29,"line_end":29,"column_start":48,"column_end":55},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":860},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":80623,"byte_end":80630,"line_start":41,"line_end":41,"column_start":24,"column_end":31},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":860},"to":{"krate":2,"index":3157}},{"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":80811,"byte_end":80818,"line_start":51,"line_end":51,"column_start":29,"column_end":36},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":860},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":81591,"byte_end":81598,"line_start":82,"line_end":82,"column_start":53,"column_end":60},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":860},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":90220,"byte_end":90227,"line_start":388,"line_end":388,"column_start":65,"column_end":72},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":860},"to":{"krate":2,"index":8279}},{"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":90452,"byte_end":90459,"line_start":398,"line_end":398,"column_start":58,"column_end":65},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":860},"to":{"krate":2,"index":8288}},{"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/set.rs","byte_start":90700,"byte_end":90707,"line_start":406,"line_end":406,"column_start":74,"column_end":81},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":860},"to":{"krate":2,"index":8275}},{"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/setref/multiple.rs","byte_start":91958,"byte_end":91966,"line_start":9,"line_end":9,"column_start":40,"column_end":48},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":948},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/setref/multiple.rs","byte_start":92203,"byte_end":92211,"line_start":19,"line_end":19,"column_start":50,"column_end":58},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":948},"to":{"krate":2,"index":3398}},{"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/setref/one.rs","byte_start":92551,"byte_end":92554,"line_start":9,"line_end":9,"column_start":40,"column_end":43},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":982},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/setref/one.rs","byte_start":92781,"byte_end":92784,"line_start":19,"line_end":19,"column_start":50,"column_end":53},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":982},"to":{"krate":2,"index":3398}},{"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/try_result.rs","byte_start":96803,"byte_end":96812,"line_start":12,"line_end":12,"column_start":9,"column_end":18},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1453},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/util.rs","byte_start":99617,"byte_end":99628,"line_start":51,"line_end":51,"column_start":26,"column_end":37},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1124},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/util.rs","byte_start":99812,"byte_end":99823,"line_start":61,"line_end":61,"column_start":31,"column_end":42},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1124},"to":{"krate":2,"index":3179}},{"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/util.rs","byte_start":99861,"byte_end":99872,"line_start":63,"line_end":63,"column_start":31,"column_end":42},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1124},"to":{"krate":2,"index":3191}},{"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/util.rs","byte_start":99888,"byte_end":99899,"line_start":65,"line_end":65,"column_start":9,"column_end":20},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1124},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/util.rs","byte_start":100574,"byte_end":100586,"line_start":96,"line_end":96,"column_start":15,"column_end":27},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1141},"to":{"krate":2,"index":3422}},{"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":2303,"byte_end":2310,"line_start":79,"line_end":79,"column_start":58,"column_end":65},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1244},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":2735,"byte_end":2742,"line_start":97,"line_end":97,"column_start":27,"column_end":34},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1244},"to":{"krate":2,"index":3157}},{"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":2933,"byte_end":2940,"line_start":107,"line_end":107,"column_start":36,"column_end":43},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1244},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":5094,"byte_end":5101,"line_start":178,"line_end":178,"column_start":60,"column_end":67},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1244},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":24318,"byte_end":24325,"line_start":803,"line_end":803,"column_start":9,"column_end":16},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1244},"to":{"krate":0,"index":1040}},{"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":33140,"byte_end":33147,"line_start":1124,"line_end":1124,"column_start":9,"column_end":16},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1244},"to":{"krate":2,"index":10108}},{"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":34755,"byte_end":34762,"line_start":1195,"line_end":1195,"column_start":68,"column_end":75},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1244},"to":{"krate":2,"index":8279}},{"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":35248,"byte_end":35255,"line_start":1215,"line_end":1215,"column_start":66,"column_end":73},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1244},"to":{"krate":2,"index":8288}},{"span":{"file_name":"/home/vegard/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.3.4/src/lib.rs","byte_start":35523,"byte_end":35530,"line_start":1223,"line_end":1223,"column_start":82,"column_end":89},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1244},"to":{"krate":2,"index":8275}}]}